import FWCore.ParameterSet.Config as cms

process = cms.Process("HLT")

process.source = cms.Source("PoolSource",
    dropDescendantsOfDroppedBranches = cms.untracked.bool(False),
    fileNames = cms.untracked.vstring('file:step1.root'),
    inputCommands = cms.untracked.vstring(
        'keep *',
        'drop *_genParticles_*_*',
        'drop *_genParticlesForJets_*_*',
        'drop *_kt4GenJets_*_*',
        'drop *_kt6GenJets_*_*',
        'drop *_iterativeCone5GenJets_*_*',
        'drop *_ak4GenJets_*_*',
        'drop *_ak7GenJets_*_*',
        'drop *_ak8GenJets_*_*',
        'drop *_ak4GenJetsNoNu_*_*',
        'drop *_ak8GenJetsNoNu_*_*',
        'drop *_genCandidatesForMET_*_*',
        'drop *_genParticlesForMETAllVisible_*_*',
        'drop *_genMetCalo_*_*',
        'drop *_genMetCaloAndNonPrompt_*_*',
        'drop *_genMetTrue_*_*',
        'drop *_genMetIC5GenJs_*_*'
    ),
    secondaryFileNames = cms.untracked.vstring()
)
process.AODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
     ) )
)

process.AODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    overrideInputFileSplitLevels = cms.untracked.bool(True)
)

process.AnomalousCellParameters = cms.PSet(
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BtiParametersBlock = cms.PSet(
    BtiParameters = cms.PSet(
        AC1 = cms.int32(0),
        AC2 = cms.int32(3),
        ACH = cms.int32(1),
        ACL = cms.int32(2),
        CH = cms.int32(41),
        CL = cms.int32(22),
        DEAD = cms.int32(31),
        Debug = cms.untracked.int32(0),
        KACCTHETA = cms.int32(1),
        KMAX = cms.int32(64),
        LH = cms.int32(21),
        LL = cms.int32(2),
        LTS = cms.int32(3),
        PTMS0 = cms.int32(0),
        PTMS1 = cms.int32(0),
        PTMS10 = cms.int32(1),
        PTMS11 = cms.int32(1),
        PTMS12 = cms.int32(1),
        PTMS13 = cms.int32(1),
        PTMS14 = cms.int32(1),
        PTMS15 = cms.int32(1),
        PTMS16 = cms.int32(1),
        PTMS17 = cms.int32(1),
        PTMS18 = cms.int32(1),
        PTMS19 = cms.int32(1),
        PTMS2 = cms.int32(0),
        PTMS20 = cms.int32(1),
        PTMS21 = cms.int32(1),
        PTMS22 = cms.int32(1),
        PTMS23 = cms.int32(1),
        PTMS24 = cms.int32(1),
        PTMS25 = cms.int32(1),
        PTMS26 = cms.int32(1),
        PTMS27 = cms.int32(1),
        PTMS28 = cms.int32(1),
        PTMS29 = cms.int32(1),
        PTMS3 = cms.int32(0),
        PTMS30 = cms.int32(0),
        PTMS31 = cms.int32(0),
        PTMS4 = cms.int32(1),
        PTMS5 = cms.int32(1),
        PTMS6 = cms.int32(1),
        PTMS7 = cms.int32(1),
        PTMS8 = cms.int32(1),
        PTMS9 = cms.int32(1),
        RE43 = cms.int32(2),
        RH = cms.int32(61),
        RL = cms.int32(42),
        RON = cms.bool(True),
        SET = cms.int32(7),
        ST43 = cms.int32(42),
        WEN0 = cms.int32(1),
        WEN1 = cms.int32(1),
        WEN2 = cms.int32(1),
        WEN3 = cms.int32(1),
        WEN4 = cms.int32(1),
        WEN5 = cms.int32(1),
        WEN6 = cms.int32(1),
        WEN7 = cms.int32(1),
        WEN8 = cms.int32(1),
        XON = cms.bool(False)
    )
)

process.CSCCommonTrigger = cms.PSet(
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5)
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CondDB = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS')
)

process.DATAMIXEREventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*',
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*',
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*',
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*',
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*',
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*',
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*',
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*',
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*',
        'keep HBHEDataFramesSorted_hcalDigis_*_*',
        'keep HFDataFramesSorted_hcalDigis_*_*',
        'keep HODataFramesSorted_hcalDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep QIE11DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep CastorDataFramesSorted_castorDigis_*_*',
        'keep EBDigiCollection_ecalDigis_*_*',
        'keep EEDigiCollection_ecalDigis_*_*',
        'keep ESDigiCollection_ecalPreshowerDigis_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DQMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_MEtoEDMConverter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DTTPGMapBlock = cms.PSet(
    DTTPGMap = cms.untracked.PSet(
    **dict(
        [
            ("wh0st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh0st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se4" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("wh1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se4" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("wh1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se4" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("wh1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se3" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("whm1st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se3" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("whm1st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se3" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("whm1st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
        ] +
        [
            ("whm2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ]
        )
    )
)

process.DTTPGParametersBlock = cms.PSet(
    DTTPGParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SectCollParameters = cms.PSet(
            Debug = cms.untracked.bool(False),
            SCCSP1 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCCSP4 = cms.int32(0),
            SCCSP5 = cms.int32(0),
            SCECF1 = cms.bool(False),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCECF4 = cms.bool(False)
        ),
        TUParameters = cms.PSet(
            BtiParameters = cms.PSet(
                AC1 = cms.int32(0),
                AC2 = cms.int32(3),
                ACH = cms.int32(1),
                ACL = cms.int32(2),
                CH = cms.int32(41),
                CL = cms.int32(22),
                DEAD = cms.int32(31),
                Debug = cms.untracked.int32(0),
                KACCTHETA = cms.int32(1),
                KMAX = cms.int32(64),
                LH = cms.int32(21),
                LL = cms.int32(2),
                LTS = cms.int32(3),
                PTMS0 = cms.int32(0),
                PTMS1 = cms.int32(0),
                PTMS10 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS12 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS15 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS20 = cms.int32(1),
                PTMS21 = cms.int32(1),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                PTMS3 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS31 = cms.int32(0),
                PTMS4 = cms.int32(1),
                PTMS5 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS8 = cms.int32(1),
                PTMS9 = cms.int32(1),
                RE43 = cms.int32(2),
                RH = cms.int32(61),
                RL = cms.int32(42),
                RON = cms.bool(True),
                SET = cms.int32(7),
                ST43 = cms.int32(42),
                WEN0 = cms.int32(1),
                WEN1 = cms.int32(1),
                WEN2 = cms.int32(1),
                WEN3 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                WEN6 = cms.int32(1),
                WEN7 = cms.int32(1),
                WEN8 = cms.int32(1),
                XON = cms.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            LutParameters = cms.PSet(
                BTIC = cms.untracked.int32(0),
                D = cms.untracked.double(0),
                Debug = cms.untracked.bool(False),
                WHEEL = cms.untracked.int32(-1),
                XCN = cms.untracked.double(0)
            ),
            TSPhiParameters = cms.PSet(
                Debug = cms.untracked.bool(False),
                TSMCCE1 = cms.bool(True),
                TSMCCE2 = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSMHSP = cms.int32(1),
                TSMHTE1 = cms.bool(True),
                TSMHTE2 = cms.bool(False),
                TSMHTEC = cms.bool(False),
                TSMMSK1 = cms.int32(312),
                TSMMSK2 = cms.int32(312),
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSMNOEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSSCCEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSGS1 = cms.int32(1),
                TSSGS2 = cms.int32(1),
                TSSHTE1 = cms.bool(True),
                TSSHTE2 = cms.bool(False),
                TSSHTEC = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSSMSK2 = cms.int32(312),
                TSSNOE1 = cms.bool(True),
                TSSNOE2 = cms.bool(False),
                TSSNOEC = cms.bool(False),
                TSTREN0 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN10 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN18 = cms.bool(True),
                TSTREN19 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN9 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            TracoParameters = cms.PSet(
                BTIC = cms.int32(32),
                DD = cms.int32(18),
                Debug = cms.untracked.int32(0),
                FHISM = cms.int32(0),
                FHTMSK = cms.int32(0),
                FHTPRF = cms.int32(1),
                FLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                FSLMSK = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                LTF = cms.int32(0),
                LTS = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                REUSEI = cms.int32(1),
                REUSEO = cms.int32(1),
                SHISM = cms.int32(0),
                SHTMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SLTMSK = cms.int32(1),
                SPRGCOMP = cms.int32(2),
                SSLMSK = cms.int32(0),
                TRGENB0 = cms.int32(1),
                TRGENB1 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB2 = cms.int32(1),
                TRGENB3 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                TRGENB9 = cms.int32(1)
            )
        )
    )
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*'
    )
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*'
    )
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*'
    )
)

process.FASTPUEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_fastSimProducer_*_*',
        'keep *_MuonSimHits_*_*',
        'drop *_fastSimProducer_VertexTypes_*',
        'keep *_generalTracksBeforeMixing_*_*',
        'drop *_generalTracksBeforeMixing_MVAValues_*',
        'drop *_generalTracksBeforeMixing_QualityMasks_*',
        'keep edmHepMCProduct_generatorSmeared_*_*'
    )
)

process.FEVTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simHitTPAssocProducer_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitivePhase2Digis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simHitTPAssocProducer_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitivePhase2Digis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTHLTALLEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_*_*_HLT'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.GENEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_randomEngineStateProducer_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.GENRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep recoGenMETs_*_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_logErrorHarvester_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.GenJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceLHE = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    )
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.HFNose_noise_fC = cms.PSet(
    doseMap = cms.string(''),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    values = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
)

process.HFRecalParameterBlock = cms.PSet(
    HFdepthOneParameterA = cms.vdouble(
        0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
        0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
        0.058939, 0.125497
    ),
    HFdepthOneParameterB = cms.vdouble(
        -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
        2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
        0.000425, 0.000209
    ),
    HFdepthTwoParameterA = cms.vdouble(
        0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
        0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
        0.051579, 0.086593
    ),
    HFdepthTwoParameterB = cms.vdouble(
        -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
        1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
        0.000157, -3e-06
    )
)

process.HGCAL_cceParams_toUse = cms.PSet(
    cceParamFine = cms.vdouble(3500000000000000.0, 10.31, -0.2635),
    cceParamThick = cms.vdouble(300000000000000.0, 10.16, -0.2823),
    cceParamThin = cms.vdouble(900000000000000.0, 8.99, -0.241)
)

process.HGCAL_chargeCollectionEfficiencies = cms.PSet(
    values = cms.vdouble(1.0, 1.0, 1.0)
)

process.HGCAL_ileakParam_toUse = cms.PSet(
    ileakParam = cms.vdouble(0.993, -42.668)
)

process.HGCAL_noise_fC = cms.PSet(
    doseMap = cms.string(''),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    values = cms.vdouble(0.336430626, 0.336430626, 0.256328096)
)

process.HGCAL_noise_heback = cms.PSet(
    doseMap = cms.string(''),
    noise_MIP = cms.double(0.01),
    referenceIdark = cms.double(-1),
    referenceXtalk = cms.double(-1),
    scaleByDose = cms.bool(False),
    scaleByDoseAlgo = cms.uint32(0),
    scaleByDoseFactor = cms.double(1),
    sipmMap = cms.string('')
)

process.HGCAL_noises = cms.PSet(
    values = cms.vdouble(2100.0, 2100.0, 1600.0)
)

process.HLTConfigVersion = cms.PSet(
    tableName = cms.string('/dev/CMSSW_14_1_0/Fake2/V12')
)

process.HLTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTONLYEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop  FEDRawDataCollection_rawDataCollector_*_*',
        'drop  FEDRawDataCollection_source_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTONLYSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop  FEDRawDataCollection_rawDataCollector_*_*',
        'drop  FEDRawDataCollection_source_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTSCOUTEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTScouting = cms.PSet(
    outputCommands = cms.vstring(
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerMINIAOD = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HoughGrouping = cms.PSet(
    LowerNumber = cms.int32(4),
    MaxDistanceToWire = cms.double(0.03),
    UpperNumber = cms.int32(6),
    allowUncorrelatedPatterns = cms.bool(True),
    anglebinwidth = cms.double(1.0),
    angletan = cms.double(0.3),
    debug = cms.untracked.bool(False),
    maxdeltaAngDeg = cms.double(10),
    maxdeltaPos = cms.double(10),
    minNLayerHits = cms.int32(6),
    minSingleSLHitsMax = cms.int32(3),
    minSingleSLHitsMin = cms.int32(3),
    minUncorrelatedHits = cms.int32(3),
    posbinwidth = cms.double(2.1)
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.L1SCOUTEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.L1TTriggerTowerConfigHFNose_etaphi = cms.PSet(
    binsEta = cms.vdouble(),
    binsPhi = cms.vdouble(),
    doNose = cms.bool(True),
    maxEta = cms.double(4.2),
    maxPhi = cms.double(3.141592653589793),
    minEta = cms.double(3.0),
    minPhi = cms.double(-3.141592653589793),
    nBinsEta = cms.int32(18),
    nBinsPhi = cms.int32(72),
    readMappingFile = cms.bool(False),
    splitModuleSum = cms.bool(False)
)

process.L1TTriggerTowerConfig_energySplit = cms.PSet(
    binsEta = cms.vdouble(),
    binsPhi = cms.vdouble(),
    doNose = cms.bool(False),
    maxEta = cms.double(3.045),
    maxPhi = cms.double(3.141592653589793),
    minEta = cms.double(1.305),
    minPhi = cms.double(-3.141592653589793),
    moduleTowerMapping = cms.FileInPath('L1Trigger/L1THGCal/data/tower_per_module_silic8_scint16.txt'),
    nBinsEta = cms.int32(20),
    nBinsPhi = cms.int32(72),
    readMappingFile = cms.bool(False),
    splitModuleSum = cms.bool(True)
)

process.L1TTriggerTowerConfig_etaphi = cms.PSet(
    binsEta = cms.vdouble(),
    binsPhi = cms.vdouble(),
    doNose = cms.bool(False),
    maxEta = cms.double(3.0),
    maxPhi = cms.double(3.141592653589793),
    minEta = cms.double(1.479),
    minPhi = cms.double(-3.141592653589793),
    nBinsEta = cms.int32(18),
    nBinsPhi = cms.int32(72),
    readMappingFile = cms.bool(False),
    splitModuleSum = cms.bool(False)
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*'
    )
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*'
    )
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    )
)

process.LHEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.LutParametersBlock = cms.PSet(
    LutParameters = cms.PSet(
        BTIC = cms.untracked.int32(0),
        D = cms.untracked.double(0),
        Debug = cms.untracked.bool(False),
        WHEEL = cms.untracked.int32(-1),
        XCN = cms.untracked.double(0)
    )
)

process.ME0SegAlgoRU = cms.PSet(
    algo_name = cms.string('ME0SegAlgoRU'),
    algo_pset = cms.PSet(
        allowWideSegments = cms.bool(True),
        doCollisions = cms.bool(True),
        maxChi2Additional = cms.double(100.0),
        maxChi2GoodSeg = cms.double(50),
        maxChi2Prune = cms.double(50),
        maxETASeeds = cms.double(0.1),
        maxPhiAdditional = cms.double(0.001096605744),
        maxPhiSeeds = cms.double(0.001096605744),
        maxTOFDiff = cms.double(25),
        minNumberOfHits = cms.uint32(4),
        requireCentralBX = cms.bool(True)
    )
)

process.ME0SegmentAlgorithm = cms.PSet(
    algo_name = cms.string('ME0SegmentAlgorithm'),
    algo_pset = cms.PSet(
        ME0Debug = cms.untracked.bool(True),
        dEtaChainBoxMax = cms.double(0.05),
        dPhiChainBoxMax = cms.double(0.02),
        dTimeChainBoxMax = cms.double(15.0),
        dXclusBoxMax = cms.double(1.0),
        dYclusBoxMax = cms.double(5.0),
        maxRecHitsInCluster = cms.int32(6),
        minHitsPerSegment = cms.uint32(3),
        preClustering = cms.bool(True),
        preClusteringUseChaining = cms.bool(True)
    )
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'drop *_hlt*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.MINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'drop *_hlt*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.MINIGENEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MIXINGMODULEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_cfWriter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.MicroEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*'
    )
)

process.MicroEventContentGEN = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MicroEventContentMC = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*'
    )
)

process.NANOAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NANOAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NanoAODEDMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep String_*_genModel_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.OnlineMetaDataContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*'
    )
)

process.PCCUpdate = cms.PSet(
    applyFixPCC = cms.bool(True)
)

process.PREMIXEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_ZeroSuppressed_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'keep *_mix_AffectedAPVList_*',
        'keep EBDigiCollection_simEcalDigis_*_*',
        'keep EEDigiCollection_simEcalDigis_*_*',
        'keep ESDigiCollection_simEcalUnsuppressedDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep *_mix_g4SimHitsMuonDTHits_*',
        'keep *_mix_g4SimHitsMuonCSCHits_*',
        'keep *_mix_g4SimHitsMuonRPCHits_*',
        'keep *_mix_g4SimHitsMuonGEMHits_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.PREMIXRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'drop CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*',
        'keep *_*_MuonCSCStripDigiSimLinks_*',
        'keep *_*_MuonCSCWireDigiSimLinks_*',
        'keep *_*_RPCDigiSimLink_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.PseudoBayesPattern = cms.PSet(
    allowDuplicates = cms.bool(False),
    allowUncorrelatedPatterns = cms.bool(True),
    allowedVariance = cms.int32(1),
    debug = cms.untracked.bool(False),
    maxPathsPerMatch = cms.int32(256),
    minNLayerHits = cms.int32(3),
    minSingleSLHitsMax = cms.int32(3),
    minSingleSLHitsMin = cms.int32(0),
    minUncorrelatedHits = cms.int32(3),
    pattern_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/PseudoBayesPatterns_uncorrelated_v0.root'),
    saveOnPlace = cms.bool(True),
    setLateralities = cms.bool(True)
)

process.RAWAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) )
)

process.RAWAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep SimVertexs_g4SimHits_*_*'
     ) )
)

process.RAWDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWMINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
    )
)

process.RAWMINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep recoTrackExtras_slimmedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedMuonTrackExtras_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJPTJets_*_*',
        'keep *_slimmedJets_*_*',
        'keep recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'keep *_slimmedHcalRecHits_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep *_offlineSlimmedPrimaryVerticesWithBS_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllTmp__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep GlobalExtBlkBXVector_simGtExtUnprefireable_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTracks_displacedGlobalMuons__*',
        'keep recoTracks_displacedTracks__*',
        'keep *_prefiringweight_*_*',
        'keep *_slimmedLowPtElectrons_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep *_slimmedDisplacedMuons_*_*',
        'keep recoTrackExtras_slimmedDisplacedMuonTrackExtras_*_*',
        'keep TrackingRecHitsOwned_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiPixelClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep SiStripClusteredmNewDetSetVector_slimmedDisplacedMuonTrackExtras_*_*',
        'keep *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'drop *_packedPFCandidates_hcalDepthEnergyFractions_*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep *_packedPFCandidateToGenAssociation_*_*',
        'keep *_lostTracksToGenAssociation_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep L1CaloRegions_caloLayer1Digis_*_*',
        'keep *_caloLayer1Digis_CICADAScore_*',
        'keep SimVertexs_g4SimHits_*_*'
    )
)

process.RAWRECODEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(1),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RECODEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.REDIGIEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'drop *_randomEngineStateProducer_*_*'
    )
)

process.REGENEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'keep *',
        'drop *_genParticles_*_*',
        'drop *_genParticlesForJets_*_*',
        'drop *_kt4GenJets_*_*',
        'drop *_kt6GenJets_*_*',
        'drop *_iterativeCone5GenJets_*_*',
        'drop *_ak4GenJets_*_*',
        'drop *_ak7GenJets_*_*',
        'drop *_ak8GenJets_*_*',
        'drop *_ak4GenJetsNoNu_*_*',
        'drop *_ak8GenJetsNoNu_*_*',
        'drop *_genCandidatesForMET_*_*',
        'drop *_genParticlesForMETAllVisible_*_*',
        'drop *_genMetCalo_*_*',
        'drop *_genMetCaloAndNonPrompt_*_*',
        'drop *_genMetTrue_*_*',
        'drop *_genMetIC5GenJs_*_*'
    )
)

process.REPACKRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep FEDRawDataCollection_rawDataReducedFormat_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.REPACKRAWSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep FEDRawDataCollection_rawDataReducedFormat_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RESIMEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.RU_ME0 = cms.PSet(
    allowWideSegments = cms.bool(True),
    doCollisions = cms.bool(True),
    maxChi2Additional = cms.double(100.0),
    maxChi2GoodSeg = cms.double(50),
    maxChi2Prune = cms.double(50),
    maxETASeeds = cms.double(0.1),
    maxPhiAdditional = cms.double(0.001096605744),
    maxPhiSeeds = cms.double(0.001096605744),
    maxTOFDiff = cms.double(25),
    minNumberOfHits = cms.uint32(4),
    requireCentralBX = cms.bool(True)
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*'
    )
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoCTPPSAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoCTPPSFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoCTPPSRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*'
    )
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_reducedEcalRecHitsEB_*_*',
        'keep *_reducedEcalRecHitsEE_*_*',
        'keep *_reducedEcalRecHitsES_*_*',
        'keep *_interestingEcalDetId*_*_*',
        'keep *_ecalWeightUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5*_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_gsfElectronCores_*_*',
        'keep *_gsfElectrons_*_*',
        'keep *_uncleanedOnlyGsfElectronCores_*_*',
        'keep *_uncleanedOnlyGsfElectrons_*_*',
        'keep *_eidRobustLoose_*_*',
        'keep *_eidRobustTight_*_*',
        'keep *_eidRobustHighEnergy_*_*',
        'keep *_eidLoose_*_*',
        'keep *_eidTight_*_*',
        'keep *_egmGedGsfElectronPFPileUpIsolation_*_*',
        'keep *_egmGedGsfElectronPFNoPileUpIsolation_*_*',
        'keep *_egmGsfElectronIDs_*_*',
        'keep *_egmPhotonIDs_*_*',
        'keep *_conversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep *_mustacheConversions_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_photonCore_*_*',
        'keep *_photons_*_*',
        'keep *_mustachePhotonCore_*_*',
        'keep *_mustachePhotons_*_*',
        'keep *_ootPhotonCore_*_*',
        'keep *_ootPhotons_*_*',
        'keep *_allConversions_*_*',
        'keep *_allConversionsOldEG_*_*',
        'keep *_ckfOutInTracksFromConversions_*_*',
        'keep *_ckfInOutTracksFromConversions_*_*',
        'keep *_uncleanedOnlyAllConversions_*_*',
        'keep *_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep *_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*'
    )
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloJets_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoTrackJets_*_*_*',
        'keep recoJPTJets_*_*_*',
        'keep recoBasicJets_*_*_*',
        'keep *_kt4JetTracksAssociatorAtVertex_*_*',
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_kt4JetExtender_*_*',
        'keep *_ak7JetTracksAssociatorAtVertex*_*_*',
        'keep *_ak7JetTracksAssociatorAtCaloFace*_*_*',
        'keep *_ak7JetExtender_*_*',
        'keep *_kt4CaloJets_*_*',
        'keep *_kt6CaloJets_*_*',
        'keep *_ak5CaloJets_*_*',
        'keep *_ak7CaloJets_*_*',
        'keep *_kt4PFJets_*_*',
        'keep *_kt6PFJets_*_*',
        'keep *_ak5PFJets_*_*',
        'keep *_ak7PFJets_*_*',
        'keep *_kt4TrackJets_*_*',
        'keep *_ca*Mass_*_*',
        'keep *_ak*Mass_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*'
    )
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*'
    )
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*',
        'keep ZDCDataFramesSorted_*Digis_*_*',
        'keep ZDCRecHitsSorted_*_*_*',
        'keep HcalUnpackerReport_*_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalFastTimeAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalFastTimeFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mtdUncalibratedRecHits_*_*',
        'keep *_mtdTrackingRecHits_*_*',
        'keep *_mtdRecHits_*_*',
        'keep *_mtdClusters_*_*'
    )
)

process.RecoLocalFastTimeRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mtdRecHits_*_*',
        'keep *_mtdClusters_*_*'
    )
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*'
    )
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep ClusterSummary_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_clusterSummaryProducer_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*'
    )
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*'
    )
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *HaloData_*_*_*',
        'keep *BeamHaloSummary_BeamHaloSummary_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMTDAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *edmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMTDFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrack*_trackExtenderWithMTD_*_*',
        'keep TrackingRecHitsOwned_trackExtenderWithMTD_*_*',
        'keep *edmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMTDRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrack*_trackExtenderWithMTD_*_*',
        'keep TrackingRecHitsOwned_trackExtenderWithMTD_*_*',
        'keep *edmValueMap_trackExtenderWithMTD_*_*',
        'keep *_mtdTrackQualityMVA_*_*'
    )
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*'
    )
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muParamGlobalIsoDepositGsTk_*_*',
        'keep *_muParamGlobalIsoDepositCalEcal_*_*',
        'keep *_muParamGlobalIsoDepositCalHcal_*_*',
        'keep *_muParamGlobalIsoDepositCtfTk_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muParamGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4PFJetsRecoTauPiZeros_*_*',
        'keep *_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscrimination*_*_*',
        'keep *_hpsPFTau*PtSum_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.SectCollParametersBlock = cms.PSet(
    SectCollParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SCCSP1 = cms.int32(0),
        SCCSP2 = cms.int32(0),
        SCCSP3 = cms.int32(0),
        SCCSP4 = cms.int32(0),
        SCCSP5 = cms.int32(0),
        SCECF1 = cms.bool(False),
        SCECF2 = cms.bool(False),
        SCECF3 = cms.bool(False),
        SCECF4 = cms.bool(False)
    )
)

process.SiPixelSimBlock = cms.PSet(
    AdcFullScLateCR = cms.int32(255),
    AdcFullScale = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    GainSmearing = cms.double(0.0),
    KillBadFEDChannels = cms.bool(True),
    LorentzAngle_DB = cms.bool(True),
    MissCalInLateCR = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    PrintClusters = cms.bool(False),
    PrintTemplates = cms.bool(False),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring(
        'TrackerHitsPixelBarrelLowTof',
        'TrackerHitsPixelBarrelHighTof',
        'TrackerHitsPixelEndcapLowTof',
        'TrackerHitsPixelEndcapHighTof'
    ),
    SiPixelQualityLabel = cms.string('forDigitizer'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(1600.0),
    ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
    ThresholdInElectrons_FPix = cms.double(1600.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    UseReweighting = cms.bool(True),
    applyLateReweighting = cms.bool(False),
    deltaProductionCut = cms.double(0.03),
    killModules = cms.bool(True),
    store_SimHitEntryExitPoints = cms.bool(False),
    useDB = cms.bool(False)
)

process.SiStripSimBlock = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
    APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
    CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
    CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
    CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
    CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
    CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
    CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
    CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
    CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
    CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
    CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
    CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
    CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
    CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
    CouplingConstantsRunIIDecB = cms.bool(True),
    CouplingConstantsRunIIDecW = cms.bool(True),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring(
        'TrackerHitsTIBLowTof',
        'TrackerHitsTIBHighTof',
        'TrackerHitsTIDLowTof',
        'TrackerHitsTIDHighTof',
        'TrackerHitsTOBLowTof',
        'TrackerHitsTOBHighTof',
        'TrackerHitsTECLowTof',
        'TrackerHitsTECHighTof'
    ),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    apv_mVPerQ = cms.double(5.5),
    apv_maxResponse = cms.double(729),
    apv_rate = cms.double(66.2),
    apvfCPerElectron = cms.double(0.0001602),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    fracOfEventsToSimAPV = cms.double(0.0),
    includeAPVSimulation = cms.bool(False),
    noDiffusion = cms.bool(False)
)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitivePhase2Digis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep EBDigiCollection_simEcalDigis_*_*',
        'keep EEDigiCollection_simEcalDigis_*_*',
        'keep ESDigiCollection_simEcalUnsuppressedDigis_*_*',
        'keep *_simHcalDigis_*_*'
    )
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingRAW = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimFastTimingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreHLTAODSIM = cms.PSet(
    outputCommands = cms.untracked.vstring('keep SimVertexs_g4SimHits_*_*')
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*'
    )
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*'
    )
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*'
    )
)

process.SimGeneralPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*'
    )
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muonSimClassifier_*_*')
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*'
    )
)

process.SimMuonPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_mix_g4SimHitsMuonDTHits_*',
        'keep *_mix_g4SimHitsMuonCSCHits_*',
        'keep *_mix_g4SimHitsMuonRPCHits_*',
        'keep *_mix_g4SimHitsMuonGEMHits_*'
    )
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*'
    )
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*'
    )
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*'
    )
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
    )
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simHitTPAssocProducer_*_*'
    )
)

process.SimTrackerPREMIX = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_ZeroSuppressed_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'keep *_mix_AffectedAPVList_*'
    )
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*'
    )
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*'
    )
)

process.TICL_AOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.TICL_FEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ticlSimTracksters_*_*',
        'keep *_ticlSimTICLCandidates_*_*',
        'keep *_ticlSimTrackstersFromCP_*_*',
        'keep *_SimTau*_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTrackstersMerge_*_*',
        'keep *_ticlTrackstersHFNoseTrkEM_*_*',
        'keep *_ticlTrackstersHFNoseEM_*_*',
        'keep *_ticlTrackstersHFNoseTrk_*_*',
        'keep *_ticlTrackstersHFNoseMIP_*_*',
        'keep *_ticlTrackstersHFNoseHAD_*_*',
        'keep *_ticlTrackstersHFNoseMerge_*_*',
        'keep *_pfTICL_*_*',
        'keep CaloParticles_mix_*_*',
        'keep SimClusters_mix_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_layerClusterSimClusterAssociationProducer_*_*',
        'keep *_layerClusterCaloParticleAssociationProducer_*_*',
        'keep *_layerClusterSimTracksterAssociationProducer_*_*',
        'keep *_tracksterSimTracksterAssociation*_*_*',
        'keep *_tracksterSimTracksterFromCPsAssociation*_*_*'
    )
)

process.TICL_FEVTHLT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hltPfTICL_*_*',
        'keep *_hltTiclTrackstersCLUE3D*_*_*',
        'keep *_hltTiclTracksterLinks_*_*',
        'keep *_hltTiclCandidate_*_*',
        'keep *_hltPfTICL_*_*',
        'keep *_ticlSimTracksters_*_*',
        'keep *_ticlSimTICLCandidates_*_*',
        'keep *_ticlSimTrackstersFromCP_*_*',
        'keep *_SimTau*_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTrackstersMerge_*_*',
        'keep *_ticlTrackstersHFNoseTrkEM_*_*',
        'keep *_ticlTrackstersHFNoseEM_*_*',
        'keep *_ticlTrackstersHFNoseTrk_*_*',
        'keep *_ticlTrackstersHFNoseMIP_*_*',
        'keep *_ticlTrackstersHFNoseHAD_*_*',
        'keep *_ticlTrackstersHFNoseMerge_*_*',
        'keep *_pfTICL_*_*',
        'keep CaloParticles_mix_*_*',
        'keep SimClusters_mix_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_layerClusterSimClusterAssociationProducer_*_*',
        'keep *_layerClusterCaloParticleAssociationProducer_*_*',
        'keep *_layerClusterSimTracksterAssociationProducer_*_*',
        'keep *_tracksterSimTracksterAssociation*_*_*',
        'keep *_tracksterSimTracksterFromCPsAssociation*_*_*'
    )
)

process.TICL_RECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTrackstersMerge_*_*',
        'keep *_ticlTrackstersHFNoseTrkEM_*_*',
        'keep *_ticlTrackstersHFNoseEM_*_*',
        'keep *_ticlTrackstersHFNoseTrk_*_*',
        'keep *_ticlTrackstersHFNoseMIP_*_*',
        'keep *_ticlTrackstersHFNoseHAD_*_*',
        'keep *_ticlTrackstersHFNoseMerge_*_*',
        'keep *_pfTICL_*_*',
        'keep CaloParticles_mix_*_*',
        'keep SimClusters_mix_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_layerClusterSimClusterAssociationProducer_*_*',
        'keep *_layerClusterCaloParticleAssociationProducer_*_*',
        'keep *_layerClusterSimTracksterAssociationProducer_*_*',
        'keep *_tracksterSimTracksterAssociation*_*_*',
        'keep *_tracksterSimTracksterFromCPsAssociation*_*_*'
    )
)

process.TICLv5_FEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ticlSimTracksters_*_*',
        'keep *_ticlSimTICLCandidates_*_*',
        'keep *_ticlSimTrackstersFromCP_*_*',
        'keep CaloParticles_mix_*_*',
        'keep SimClusters_mix_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_layerClusterSimClusterAssociationProducer_*_*',
        'keep *_layerClusterCaloParticleAssociationProducer_*_*',
        'keep *_layerClusterSimTracksterAssociationProducer_*_*',
        'keep *_allTrackstersToSimTrackstersAssociations*_*_*',
        'drop *_ticlTracksters*_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTracksterLinks*_*_*',
        'keep *_ticlTracksterLinksSuperclustering*_*_*',
        'keep *_ticlCandidate_*_*'
    )
)

process.TICLv5_FEVTHLT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *_hltTiclTracksters*_*_*',
        'keep *_hltTiclTrackstersCLUE3D*_*_*',
        'keep *_hltTiclTracksterLinks_*_*',
        'keep *_hltTiclCandidate_*_*',
        'keep *_hltPfTICL_*_*',
        'keep *_ticlSimTracksters_*_*',
        'keep *_ticlSimTICLCandidates_*_*',
        'keep *_ticlSimTrackstersFromCP_*_*',
        'keep CaloParticles_mix_*_*',
        'keep SimClusters_mix_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_SimClusterToCaloParticleAssociation*_*_*',
        'keep *_layerClusterSimClusterAssociationProducer_*_*',
        'keep *_layerClusterCaloParticleAssociationProducer_*_*',
        'keep *_layerClusterSimTracksterAssociationProducer_*_*',
        'keep *_allTrackstersToSimTrackstersAssociations*_*_*',
        'drop *_ticlTracksters*_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTracksterLinks*_*_*',
        'keep *_ticlTracksterLinksSuperclustering*_*_*',
        'keep *_ticlCandidate_*_*'
    )
)

process.TICLv5_RECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *_ticlTracksters*_*_*',
        'keep *_ticlTrackstersCLUE3DHigh_*_*',
        'keep *_ticlTracksterLinks*_*_*',
        'keep *_ticlTracksterLinksSuperclustering*_*_*',
        'keep *_ticlCandidate_*_*'
    )
)

process.TSPhiParametersBlock = cms.PSet(
    TSPhiParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        TSMCCE1 = cms.bool(True),
        TSMCCE2 = cms.bool(False),
        TSMCCEC = cms.bool(False),
        TSMCGS1 = cms.bool(True),
        TSMCGS2 = cms.bool(True),
        TSMGS1 = cms.int32(1),
        TSMGS2 = cms.int32(1),
        TSMHSP = cms.int32(1),
        TSMHTE1 = cms.bool(True),
        TSMHTE2 = cms.bool(False),
        TSMHTEC = cms.bool(False),
        TSMMSK1 = cms.int32(312),
        TSMMSK2 = cms.int32(312),
        TSMNOE1 = cms.bool(True),
        TSMNOE2 = cms.bool(False),
        TSMNOEC = cms.bool(False),
        TSMWORD = cms.int32(255),
        TSSCCE1 = cms.bool(True),
        TSSCCE2 = cms.bool(False),
        TSSCCEC = cms.bool(False),
        TSSCGS1 = cms.bool(True),
        TSSCGS2 = cms.bool(True),
        TSSGS1 = cms.int32(1),
        TSSGS2 = cms.int32(1),
        TSSHTE1 = cms.bool(True),
        TSSHTE2 = cms.bool(False),
        TSSHTEC = cms.bool(False),
        TSSMSK1 = cms.int32(312),
        TSSMSK2 = cms.int32(312),
        TSSNOE1 = cms.bool(True),
        TSSNOE2 = cms.bool(False),
        TSSNOEC = cms.bool(False),
        TSTREN0 = cms.bool(True),
        TSTREN1 = cms.bool(True),
        TSTREN10 = cms.bool(True),
        TSTREN11 = cms.bool(True),
        TSTREN12 = cms.bool(True),
        TSTREN13 = cms.bool(True),
        TSTREN14 = cms.bool(True),
        TSTREN15 = cms.bool(True),
        TSTREN16 = cms.bool(True),
        TSTREN17 = cms.bool(True),
        TSTREN18 = cms.bool(True),
        TSTREN19 = cms.bool(True),
        TSTREN2 = cms.bool(True),
        TSTREN20 = cms.bool(True),
        TSTREN21 = cms.bool(True),
        TSTREN22 = cms.bool(True),
        TSTREN23 = cms.bool(True),
        TSTREN3 = cms.bool(True),
        TSTREN4 = cms.bool(True),
        TSTREN5 = cms.bool(True),
        TSTREN6 = cms.bool(True),
        TSTREN7 = cms.bool(True),
        TSTREN8 = cms.bool(True),
        TSTREN9 = cms.bool(True)
    )
)

process.TSThetaParametersBlock = cms.PSet(
    TSThetaParameters = cms.PSet(
        Debug = cms.untracked.bool(False)
    )
)

process.TUParamsBlock = cms.PSet(
    Debug = cms.untracked.bool(False)
)

process.TcdsEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_tcdsDigis_*_*')
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_electronGsfTracks_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TracoParametersBlock = cms.PSet(
    TracoParameters = cms.PSet(
        BTIC = cms.int32(32),
        DD = cms.int32(18),
        Debug = cms.untracked.int32(0),
        FHISM = cms.int32(0),
        FHTMSK = cms.int32(0),
        FHTPRF = cms.int32(1),
        FLTMSK = cms.int32(1),
        FPRGCOMP = cms.int32(2),
        FSLMSK = cms.int32(0),
        IBTIOFF = cms.int32(0),
        KPRGCOM = cms.int32(255),
        KRAD = cms.int32(0),
        LTF = cms.int32(0),
        LTS = cms.int32(0),
        LVALIDIFH = cms.int32(0),
        REUSEI = cms.int32(1),
        REUSEO = cms.int32(1),
        SHISM = cms.int32(0),
        SHTMSK = cms.int32(0),
        SHTPRF = cms.int32(1),
        SLTMSK = cms.int32(1),
        SPRGCOMP = cms.int32(2),
        SSLMSK = cms.int32(0),
        TRGENB0 = cms.int32(1),
        TRGENB1 = cms.int32(1),
        TRGENB10 = cms.int32(1),
        TRGENB11 = cms.int32(1),
        TRGENB12 = cms.int32(1),
        TRGENB13 = cms.int32(1),
        TRGENB14 = cms.int32(1),
        TRGENB15 = cms.int32(1),
        TRGENB2 = cms.int32(1),
        TRGENB3 = cms.int32(1),
        TRGENB4 = cms.int32(1),
        TRGENB5 = cms.int32(1),
        TRGENB6 = cms.int32(1),
        TRGENB7 = cms.int32(1),
        TRGENB8 = cms.int32(1),
        TRGENB9 = cms.int32(1)
    )
)

process.apd_sim_parameters = cms.PSet(
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(
        1.48, -3.75, 1.81, 1.26, 2.0,
        45, 1.0
    ),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5)
)

process.autoEncoder_conc_proc = cms.PSet(
    Method = cms.vstring(
        'autoEncoder',
        'autoEncoder',
        'thresholdSelect'
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    bitShiftNormalization = cms.bool(True),
    bitsPerLink = cms.vint32(
        0, 1, 3, 5, 7,
        9, 9, 9, 9, 9,
        9, 9, 9, 9, 9
    ),
    cellRemap = cms.vint32(
        0, 16, 32, 1, 17,
        33, 2, 18, 34, 3,
        19, 35, 4, 20, 36,
        5, 21, 37, 6, 22,
        38, 7, 23, 39, 8,
        24, 40, 9, 25, 41,
        10, 26, 42, 11, 27,
        43, 12, 28, 44, 13,
        29, 45, 14, 30, 46,
        15, 31, 47
    ),
    cellRemapNoDuplicates = cms.vint32(
        0, 16, 32, 1, 17,
        33, 2, 18, 34, 3,
        19, 35, 4, 20, 36,
        5, 21, 37, 6, 22,
        38, 7, 23, 39, 8,
        24, 40, 9, 25, 41,
        10, 26, 42, 11, 27,
        43, 12, 28, 44, 13,
        29, 45, 14, 30, 46,
        15, 31, 47
    ),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    decoderShape = cms.vuint32(1, 16),
    encoderShape = cms.vuint32(1, 4, 4, 3),
    fixedDataSizePerHGCROC = cms.bool(False),
    linkToGraphMap = cms.vuint32(
        0, 0, 0, 1, 2,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3
    ),
    maxBitsPerOutput = cms.int32(9),
    modelFiles = cms.VPSet(
        cms.PSet(
            decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_2eLinks_PUdriven_constantgraph.pb'),
            encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_2eLinks_PUdriven_constantgraph.pb')
        ),
        cms.PSet(
            decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_3eLinks_PUdriven_constantgraph.pb'),
            encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_3eLinks_PUdriven_constantgraph.pb')
        ),
        cms.PSet(
            decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_4eLinks_PUdriven_constantgraph.pb'),
            encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_4eLinks_PUdriven_constantgraph.pb')
        ),
        cms.PSet(
            decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_5eLinks_PUdriven_constantgraph.pb'),
            encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_5eLinks_PUdriven_constantgraph.pb')
        )
    ),
    nBitsPerInput = cms.int32(8),
    preserveModuleSum = cms.bool(True),
    saveEncodedValues = cms.bool(False),
    stcSize = cms.vuint32(
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16
    ),
    superTCCalibration = cms.PSet(
        ProcessorName = cms.string('HGCalVFEProcessorSums'),
        calibrationCfg_ee = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        calibrationCfg_hesc = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(
                values = cms.vdouble(1.0)
            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.0),
            lsb = cms.double(0.067138671875),
            thicknessCorrection = cms.vdouble(1.0)
        ),
        calibrationCfg_hesi = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
        ),
        calibrationCfg_nose = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0.0, 39.500245, 39.756638, 39.756638, 39.756638,
                39.756638, 66.020266, 92.283895, 92.283895
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        compressionCfg_hdm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(3)
        ),
        compressionCfg_ldm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(1)
        ),
        linearizationCfg_sc = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(68.75),
            linLSB = cms.double(0.067138671875),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(55),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(1000)
        ),
        linearizationCfg_si = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(100),
            linLSB = cms.double(0.09765625),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(60),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(10000)
        ),
        summationCfg = cms.PSet(
            noiseScintillator = cms.PSet(

            ),
            noiseSilicon = cms.PSet(

            ),
            noiseThreshold = cms.double(3),
            scintillatorCellLSB_MIP = cms.double(0.067138671875),
            siliconCellLSB_fC = cms.double(0.09765625)
        )
    ),
    superTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(5),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    threshold_scintillator = cms.double(2.0),
    threshold_silicon = cms.double(2.0),
    type_energy_division = cms.string('superTriggerCell'),
    zeroSuppresionThreshold = cms.double(0.1)
)

process.autoEncoder_training_2eLinks = cms.PSet(
    decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_2eLinks_PUdriven_constantgraph.pb'),
    encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_2eLinks_PUdriven_constantgraph.pb')
)

process.autoEncoder_training_3eLinks = cms.PSet(
    decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_3eLinks_PUdriven_constantgraph.pb'),
    encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_3eLinks_PUdriven_constantgraph.pb')
)

process.autoEncoder_training_4eLinks = cms.PSet(
    decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_4eLinks_PUdriven_constantgraph.pb'),
    encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_4eLinks_PUdriven_constantgraph.pb')
)

process.autoEncoder_training_5eLinks = cms.PSet(
    decoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/decoder_5eLinks_PUdriven_constantgraph.pb'),
    encoderModelFile = cms.FileInPath('L1Trigger/L1THGCal/data/encoder_5eLinks_PUdriven_constantgraph.pb')
)

process.be_proc = cms.PSet(
    C3d_parameters = cms.PSet(
        histoMax_C3d_clustering_parameters = cms.PSet(
            AlgoName = cms.string('HGCalHistoClusteringWrapper'),
            EGIdentification = cms.PSet(
                CategoriesEtaMax = cms.vdouble(2.7, 3.0),
                CategoriesEtaMin = cms.vdouble(1.5, 2.7),
                CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
                CategoriesPtMin = cms.vdouble(0.0, 0.0),
                Inputs = cms.vstring(
                    'cl3d_coreshowerlength',
                    'cl3d_showerlength',
                    'cl3d_firstlayer',
                    'cl3d_maxlayer',
                    'cl3d_szz',
                    'cl3d_srrmean',
                    'cl3d_srrtot',
                    'cl3d_seetot',
                    'cl3d_spptot'
                ),
                Weights = cms.vstring(
                    'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
                    'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
                ),
                WorkingPoints = cms.VPSet(
                    cms.PSet(
                        Name = cms.string('tight'),
                        WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
                    ),
                    cms.PSet(
                        Name = cms.string('loose'),
                        WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
                    )
                )
            ),
            cluster_association = cms.string('NearestNeighbour'),
            dR_multicluster = cms.double(0.0),
            dR_multicluster_byLayer_coefficientA = cms.vdouble(
                0, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.02, 0.02,
                0.02, 0.02, 0.02, 0.02, 0.02,
                0.03, 0.03, 0.03, 0.03, 0.03,
                0.03, 0.03, 0.04, 0.04, 0.04,
                0.04, 0.04, 0.04, 0.04, 0.04,
                0.04, 0.04, 0.04, 0.04, 0.04,
                0.05, 0.05, 0.05, 0.05, 0.05,
                0.05, 0.05, 0.05, 0.05, 0.05,
                0.05, 0.05, 0.05, 0.05, 0.05,
                0.05, 0.05, 0.05
            ),
            dR_multicluster_byLayer_coefficientB = cms.vdouble(
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0
            ),
            minPt_multicluster = cms.double(0.5),
            shape_distance = cms.double(0.015),
            shape_threshold = cms.double(1.0)
        ),
        histoMax_C3d_seeding_parameters = cms.PSet(
            binSumsHisto = cms.vuint32(
                13, 11, 11, 11, 9,
                9, 9, 7, 7, 7,
                7, 7, 7, 5, 5,
                5, 5, 5, 5, 5,
                5, 5, 5, 5, 5,
                5, 5, 5, 3, 3,
                3, 3, 3, 3, 3,
                3, 3, 3, 3, 3,
                3, 3
            ),
            kROverZMax = cms.double(0.58),
            kROverZMin = cms.double(0.076),
            nBins_X1_histo_multicluster = cms.uint32(42),
            nBins_X2_histo_multicluster = cms.uint32(216),
            neighbour_weights = cms.vdouble(
                0, 0.25, 0, 0.25, 0,
                0.25, 0, 0.25, 0
            ),
            seed_position = cms.string('TCWeighted'),
            seed_smoothing_ecal = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.1,
                1.0, 1.0, 1.0, 1.0
            ),
            seed_smoothing_hcal = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 2.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0
            ),
            seeding_space = cms.string('RPhi'),
            seeds_norm_by_area = cms.bool(False),
            threshold_histo_multicluster = cms.double(20.0),
            type_histoalgo = cms.string('HistoMaxC3d')
        ),
        histoMax_C3d_sorting_truncation_parameters = cms.PSet(
            AlgoName = cms.string('HGCalSortingTruncationWrapper'),
            maxTCs = cms.uint32(80)
        ),
        type_multicluster = cms.string('Histo')
    ),
    ProcessorName = cms.string('HGCalBackendLayer2Processor3DClustering'),
    energy_interpretations = cms.VPSet(cms.PSet(
        dr_bylayer = cms.vdouble(
            0.015, 0.015, 0.015, 0.015, 0.015,
            0.015, 0.015, 0.015, 0.015, 0.015,
            0.015, 0.015, 0.015, 0.015, 0.015
        ),
        layer_containment_corrs = cms.vdouble(
            0.0, 0.0, 1.38, 0.97, 1.11,
            0.92, 1.06, 1.01, 1.06, 0.89,
            1.0, 1.06, 0.89, 1.62, 1.83
        ),
        scale_correction_coeff = cms.vdouble(53.94, -27.15),
        type = cms.string('HGCalTriggerClusterInterpretationEM')
    ))
)

process.best_conc_proc = cms.PSet(
    Method = cms.vstring(
        'bestChoiceSelect',
        'bestChoiceSelect',
        'bestChoiceSelect'
    ),
    NData = cms.vuint32(
        1, 4, 6, 9, 14,
        18, 23, 28, 32, 37,
        41, 46, 48, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(False),
    superTCCalibration_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCalibration_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    superTCCalibration_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    superTCCalibration_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    )
)

process.bmtfKalmanTrackingSettings = cms.PSet(
    aPhi = cms.vdouble(1.942, 0.01511, 0.01476, 0.009799),
    aPhiB = cms.vdouble(-1.508, -0.1237, -0.1496, -0.1333),
    aPhiBNLO = cms.vdouble(0.000331, 0, 0, 0),
    bPhi = cms.vdouble(-1, 0.18245, 0.20898, 0.17286),
    bPhiB = cms.vdouble(-1, 1.18245, 1.20898, 1.17286),
    chiSquare = cms.vdouble(0.0, 0.109375, 0.234375, 0.359375),
    chiSquareCut = cms.vint32(126, 126, 126, 126, 126),
    chiSquareCutCurvMax = cms.vint32(2500, 2500, 2500, 2500, 2500),
    chiSquareCutPattern = cms.vint32(7, 11, 13, 14, 15),
    chiSquareCutTight = cms.vint32(
        40, 126, 60, 126, 126,
        126
    ),
    combos1 = cms.vint32(),
    combos2 = cms.vint32(3),
    combos3 = cms.vint32(5, 6, 7),
    combos4 = cms.vint32(
        9, 10, 11, 12, 13,
        14, 15
    ),
    eLoss = cms.vdouble(0.000765, 0, 0, 0),
    etaLUT0 = cms.vdouble(8.946, 7.508, 6.279, 6.399),
    etaLUT1 = cms.vdouble(0.159, 0.116, 0.088, 0.128),
    initialK = cms.vdouble(-1.196, -1.581, -2.133, -2.263),
    initialK2 = cms.vdouble(-0.000326, -0.0007165, 0.002305, -0.00563),
    lutFile = cms.string('L1Trigger/L1TMuon/data/bmtf_luts/kalmanLUTs_v302.root'),
    mScatteringPhi = cms.vdouble(0.00249, 5.47e-05, 3.49e-05, 1.37e-05),
    mScatteringPhiB = cms.vdouble(0.00722, 0.003461, 0.004447, 0.00412),
    phiAt2 = cms.double(0.15918),
    pointResolutionPhi = cms.double(1.0),
    pointResolutionPhiB = cms.double(500.0),
    pointResolutionPhiBH = cms.vdouble(151.0, 173.0, 155.0, 153.0),
    pointResolutionPhiBL = cms.vdouble(17866.0, 19306.0, 23984.0, 23746.0),
    pointResolutionVertex = cms.double(1.0),
    trackComp = cms.vdouble(1.75, 1.25, 0.625, 0.25),
    trackCompCut = cms.vint32(
        15, 15, 15, 15, 15,
        15
    ),
    trackCompCutCurvMax = cms.vint32(
        34, 34, 34, 34, 34,
        34
    ),
    trackCompCutPattern = cms.vint32(
        3, 5, 6, 9, 10,
        12
    ),
    trackCompErr1 = cms.vdouble(2.0, 2.0, 2.0, 2.0),
    trackCompErr2 = cms.vdouble(0.21875, 0.21875, 0.21875, 0.3125),
    useNewQualityCalculation = cms.bool(True),
    useOfflineAlgo = cms.bool(False),
    verbose = cms.bool(False)
)

process.c2d_calib_pset = cms.PSet(
    applyLayerCalibration = cms.bool(True),
    calibSF_cluster = cms.double(1.0),
    layerWeights = cms.vdouble(
        0.0, 0.0183664, 0.0, 0.0305622, 0.0,
        0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
        0.0, 0.0185754, 0.0, 0.0204934, 0.0,
        0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
        0.0, 0.0238385, 0.0, 0.0301146, 0.0,
        0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
        0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
        0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
        0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
        0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
        0.121674, 0.1171, 0.328053
    )
)

process.c2d_thresholds_pset = cms.PSet(
    clustering_threshold_scintillator = cms.double(2.0),
    clustering_threshold_silicon = cms.double(2.0),
    seeding_threshold_scintillator = cms.double(5.0),
    seeding_threshold_silicon = cms.double(5.0)
)

process.calibration_params_ee = cms.PSet(
    chargeCollectionEfficiency = cms.PSet(

    ),
    dEdXweights = cms.vdouble(
        0, 8.894541, 0, 21.875814, 0,
        21.875814, 0, 21.875814, 0, 21.875814,
        0, 21.865764, 0, 21.875814, 0,
        21.876338, 0, 21.876338, 0, 21.876338,
        0, 21.876338, 0, 21.876338, 0,
        21.876338, 0, 21.876338, 0, 83.906398,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
    lsb = cms.double(0.09765625),
    thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
)

process.calibration_params_hesc = cms.PSet(
    chargeCollectionEfficiency = cms.PSet(
        values = cms.vdouble(1.0)
    ),
    dEdXweights = cms.vdouble(
        0, 8.894541, 0, 21.875814, 0,
        21.875814, 0, 21.875814, 0, 21.875814,
        0, 21.865764, 0, 21.875814, 0,
        21.876338, 0, 21.876338, 0, 21.876338,
        0, 21.876338, 0, 21.876338, 0,
        21.876338, 0, 21.876338, 0, 83.906398,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    fCperMIP = cms.vdouble(1.0),
    lsb = cms.double(0.067138671875),
    thicknessCorrection = cms.vdouble(1.0)
)

process.calibration_params_hesi = cms.PSet(
    chargeCollectionEfficiency = cms.PSet(

    ),
    dEdXweights = cms.vdouble(
        0, 8.894541, 0, 21.875814, 0,
        21.875814, 0, 21.875814, 0, 21.875814,
        0, 21.865764, 0, 21.875814, 0,
        21.876338, 0, 21.876338, 0, 21.876338,
        0, 21.876338, 0, 21.876338, 0,
        21.876338, 0, 21.876338, 0, 83.906398,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
        69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
        87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
        86.92952
    ),
    fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
    lsb = cms.double(0.09765625),
    thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
)

process.calibration_params_nose = cms.PSet(
    chargeCollectionEfficiency = cms.PSet(

    ),
    dEdXweights = cms.vdouble(
        0.0, 39.500245, 39.756638, 39.756638, 39.756638,
        39.756638, 66.020266, 92.283895, 92.283895
    ),
    fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
    lsb = cms.double(0.09765625),
    thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
)

process.caloParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    MaxPseudoRapidity = cms.double(5.0),
    MinEnergy = cms.double(0.5),
    accumulatorType = cms.string('CaloTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    doHGCAL = cms.bool(True),
    genParticleCollection = cms.InputTag("genParticles"),
    maximumPreviousBunchCrossing = cms.uint32(0),
    maximumSubsequentBunchCrossing = cms.uint32(0),
    premixStage1 = cms.bool(False),
    simHitCollections = cms.PSet(
        hgc = cms.VInputTag(cms.InputTag("g4SimHits","HGCHitsEE"), cms.InputTag("g4SimHits","HGCHitsHEfront"), cms.InputTag("g4SimHits","HGCHitsHEback"))
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits")
)

process.castorDigitizer = cms.PSet(
    accumulatorType = cms.string('CastorDigiProducer'),
    castor = cms.PSet(
        binOfMaximum = cms.int32(5),
        doPhotoStatistics = cms.bool(True),
        photoelectronsToAnalog = cms.double(4.1718),
        readoutFrameSize = cms.int32(6),
        samplingFactor = cms.double(0.062577),
        simHitToPhotoelectrons = cms.double(1000.0),
        syncPhase = cms.bool(True),
        timePhase = cms.double(-4.0)
    ),
    doNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    hitsProducer = cms.InputTag("g4SimHits","CastorFI"),
    makeDigiSimLinks = cms.untracked.bool(False)
)

process.coarseTCCompression_proc = cms.PSet(
    exponentBits = cms.uint32(4),
    mantissaBits = cms.uint32(3),
    rounding = cms.bool(True),
    truncationBits = cms.uint32(0)
)

process.coarsetc_equalshare_proc = cms.PSet(
    Method = cms.vstring(
        'superTriggerCellSelect',
        'superTriggerCellSelect',
        'superTriggerCellSelect'
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(True),
    stcSize = cms.vuint32(
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8
    ),
    superTCCalibration_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCalibration_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    superTCCalibration_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    superTCCalibration_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(5),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    type_energy_division = cms.string('equalShare')
)

process.coarsetc_onebitfraction_proc = cms.PSet(
    Method = cms.vstring(
        'superTriggerCellSelect',
        'superTriggerCellSelect',
        'superTriggerCellSelect'
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(True),
    oneBitFractionHighValue = cms.double(0.25),
    oneBitFractionLowValue = cms.double(0.0625),
    oneBitFractionThreshold = cms.double(0.125),
    stcSize = cms.vuint32(
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8
    ),
    superTCCalibration_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCalibration_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    superTCCalibration_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    superTCCalibration_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(5),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    type_energy_division = cms.string('oneBitFraction')
)

process.component_digi_parameters = cms.PSet(
    componentAddToBarrel = cms.bool(False),
    componentDigiTag = cms.string('Component'),
    componentSeparateDigi = cms.bool(False),
    componentTimePhase = cms.double(0.0),
    componentTimeTag = cms.string('Component')
)

process.compression_params_hdm = cms.PSet(
    exponentBits = cms.uint32(4),
    mantissaBits = cms.uint32(3),
    rounding = cms.bool(True),
    truncationBits = cms.uint32(3)
)

process.compression_params_ldm = cms.PSet(
    exponentBits = cms.uint32(4),
    mantissaBits = cms.uint32(3),
    rounding = cms.bool(True),
    truncationBits = cms.uint32(1)
)

process.configurationMetadata = cms.untracked.PSet(
    annotation = cms.untracked.string('step2 nevts:10'),
    name = cms.untracked.string('Applications'),
    version = cms.untracked.string('$Revision: 1.19 $')
)

process.constrTopological_C2d_params = cms.PSet(
    applyLayerCalibration = cms.bool(True),
    calibSF_cluster = cms.double(1.0),
    clusterType = cms.string('dRNNC2d'),
    clustering_threshold_scintillator = cms.double(2.0),
    clustering_threshold_silicon = cms.double(2.0),
    dR_cluster = cms.double(6.0),
    layerWeights = cms.vdouble(
        0.0, 0.0183664, 0.0, 0.0305622, 0.0,
        0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
        0.0, 0.0185754, 0.0, 0.0204934, 0.0,
        0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
        0.0, 0.0238385, 0.0, 0.0301146, 0.0,
        0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
        0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
        0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
        0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
        0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
        0.121674, 0.1171, 0.328053
    ),
    seeding_threshold_scintillator = cms.double(5.0),
    seeding_threshold_silicon = cms.double(5.0)
)

process.custom_conc_proc = cms.PSet(
    Method = cms.vstring(
        'bestChoiceSelect',
        'superTriggerCellSelect',
        'superTriggerCellSelect'
    ),
    NData = cms.vuint32(
        1, 4, 6, 9, 14,
        18, 23, 28, 32, 37,
        41, 46, 48, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(False),
    stcSize = cms.vuint32(
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16
    ),
    superTCCalibration_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCalibration_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    superTCCalibration_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    superTCCalibration_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(5),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    threshold_scintillator = cms.double(2.0),
    threshold_silicon = cms.double(2.0),
    type_energy_division = cms.string('superTriggerCell')
)

process.datasets = cms.PSet(
    InitialPD = cms.vstring(
        'HLT_Physics_v1',
        'HLT_Random_v1',
        'HLT_ZeroBias_v1'
    )
)

process.dbscan_C3d_params = cms.PSet(
    EGIdentification = cms.PSet(
        CategoriesEtaMax = cms.vdouble(2.7, 3.0),
        CategoriesEtaMin = cms.vdouble(1.5, 2.7),
        CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
        CategoriesPtMin = cms.vdouble(0.0, 0.0),
        Inputs = cms.vstring(
            'cl3d_firstlayer',
            'cl3d_coreshowerlength',
            'cl3d_maxlayer',
            'cl3d_srrmean'
        ),
        Weights = cms.vstring(
            'L1Trigger/L1THGCal/data/egamma_id_drnn_dbscan_loweta_v0.xml',
            'L1Trigger/L1THGCal/data/egamma_id_drnn_dbscan_higheta_v0.xml'
        ),
        WorkingPoints = cms.vdouble(-0.04547527, 0.05559443)
    ),
    dR_multicluster = cms.double(0.0),
    dist_dbscan_multicluster = cms.double(0.005),
    minN_dbscan_multicluster = cms.uint32(3),
    minPt_multicluster = cms.double(0.5),
    type_multicluster = cms.string('DBSCANC3d')
)

process.distance_C2d_params = cms.PSet(
    applyLayerCalibration = cms.bool(True),
    calibSF_cluster = cms.double(1.0),
    clusterType = cms.string('dRC2d'),
    clustering_threshold_scintillator = cms.double(2.0),
    clustering_threshold_silicon = cms.double(2.0),
    dR_cluster = cms.double(6.0),
    layerWeights = cms.vdouble(
        0.0, 0.0183664, 0.0, 0.0305622, 0.0,
        0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
        0.0, 0.0185754, 0.0, 0.0204934, 0.0,
        0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
        0.0, 0.0238385, 0.0, 0.0301146, 0.0,
        0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
        0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
        0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
        0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
        0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
        0.121674, 0.1171, 0.328053
    ),
    seeding_threshold_scintillator = cms.double(5.0),
    seeding_threshold_silicon = cms.double(5.0)
)

process.distance_C3d_params = cms.PSet(
    EGIdentification = cms.PSet(
        CategoriesEtaMax = cms.vdouble(2.7, 3.0),
        CategoriesEtaMin = cms.vdouble(1.5, 2.7),
        CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
        CategoriesPtMin = cms.vdouble(0.0, 0.0),
        Inputs = cms.vstring(
            'cl3d_firstlayer',
            'cl3d_coreshowerlength',
            'cl3d_maxlayer',
            'cl3d_srrmean'
        ),
        Weights = cms.vstring(
            'L1Trigger/L1THGCal/data/egamma_id_drnn_cone_loweta_v0.xml',
            'L1Trigger/L1THGCal/data/egamma_id_drnn_cone_higheta_v0.xml'
        ),
        WorkingPoints = cms.vdouble(-0.01481255, 0.05995301)
    ),
    dR_multicluster = cms.double(0.01),
    dist_dbscan_multicluster = cms.double(0.0),
    minN_dbscan_multicluster = cms.uint32(0),
    minPt_multicluster = cms.double(0.5),
    type_multicluster = cms.string('dRC3d')
)

process.dummy_C2d_params = cms.PSet(
    applyLayerCalibration = cms.bool(True),
    calibSF_cluster = cms.double(1.0),
    clusterType = cms.string('dummyC2d'),
    layerWeights = cms.vdouble(
        0.0, 0.0183664, 0.0, 0.0305622, 0.0,
        0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
        0.0, 0.0185754, 0.0, 0.0204934, 0.0,
        0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
        0.0, 0.0238385, 0.0, 0.0301146, 0.0,
        0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
        0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
        0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
        0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
        0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
        0.121674, 0.1171, 0.328053
    )
)

process.ecalDigitizer = cms.PSet(
    ConstantTerm = cms.double(0.003),
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBdigiCollection = cms.string(''),
    EBs25notContainment = cms.double(0.9675),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEdigiCollection = cms.string(''),
    EEs25notContainment = cms.double(0.968),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True),
    accumulatorType = cms.string('EcalDigiProducer'),
    apdAddToBarrel = cms.bool(False),
    apdDigiTag = cms.string('APD'),
    apdDoPEStats = cms.bool(True),
    apdNonlParms = cms.vdouble(
        1.48, -3.75, 1.81, 1.26, 2.0,
        45, 1.0
    ),
    apdSeparateDigi = cms.bool(True),
    apdShapeTau = cms.double(40.5),
    apdShapeTstart = cms.double(74.5),
    apdSimToPEHigh = cms.double(88200000.0),
    apdSimToPELow = cms.double(2450000.0),
    apdTimeOffWidth = cms.double(0.8),
    apdTimeOffset = cms.double(-13.5),
    applyConstantTerm = cms.bool(True),
    binOfMaximum = cms.int32(6),
    componentAddToBarrel = cms.bool(False),
    componentDigiTag = cms.string('Component'),
    componentSeparateDigi = cms.bool(False),
    componentTimePhase = cms.double(0.0),
    componentTimeTag = cms.string('Component'),
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0),
    doEB = cms.bool(True),
    doEE = cms.bool(True),
    doENoise = cms.bool(True),
    doES = cms.bool(True),
    doESNoise = cms.bool(True),
    doFast = cms.bool(True),
    doPhotostatistics = cms.bool(True),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.untracked.bool(False),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timeDependent = cms.bool(False),
    timePhase = cms.double(0.0)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecalTimeDigitizer = cms.PSet(
    EBtimeDigiCollection = cms.string('EBTimeDigi'),
    EEtimeDigiCollection = cms.string('EETimeDigi'),
    accumulatorType = cms.string('EcalTimeDigiProducer'),
    componentWaveform = cms.bool(False),
    hitsProducerEB = cms.InputTag("g4SimHits","EcalHitsEB"),
    hitsProducerEE = cms.InputTag("g4SimHits","EcalHitsEE"),
    timeLayerBarrel = cms.int32(7),
    timeLayerEndcap = cms.int32(3)
)

process.ecal_cosmics_sim = cms.PSet(
    cosmicsPhase = cms.bool(False),
    cosmicsShift = cms.double(0.0)
)

process.ecal_digi_parameters = cms.PSet(
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBdigiCollection = cms.string(''),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True)
)

process.ecal_electronics_sim = cms.PSet(
    ConstantTerm = cms.double(0.003),
    applyConstantTerm = cms.bool(True),
    doENoise = cms.bool(True)
)

process.ecal_notCont_sim = cms.PSet(
    EBs25notContainment = cms.double(0.9675),
    EEs25notContainment = cms.double(0.968)
)

process.ecal_sim_parameter_map = cms.PSet(
    binOfMaximum = cms.int32(6),
    doPhotostatistics = cms.bool(True),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    photoelectronsToAnalogEndcap = cms.double(0.000555555),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    simHitToPhotoelectronsEndcap = cms.double(1800.0),
    syncPhase = cms.bool(True),
    timeDependent = cms.bool(False),
    timePhase = cms.double(0.0)
)

process.ecal_sim_parameter_map_ph2 = cms.PSet(
    binOfMaximum = cms.int32(6),
    doPhotostatistics = cms.bool(True),
    photoelectronsToAnalogBarrel = cms.double(0.000444444),
    samplingFactor = cms.double(1.0),
    simHitToPhotoelectronsBarrel = cms.double(2250.0),
    syncPhase = cms.bool(True),
    timePhase = cms.double(0.0)
)

process.egamma_identification_drnn_cone = cms.PSet(
    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
    CategoriesPtMin = cms.vdouble(0.0, 0.0),
    Inputs = cms.vstring(
        'cl3d_firstlayer',
        'cl3d_coreshowerlength',
        'cl3d_maxlayer',
        'cl3d_srrmean'
    ),
    Weights = cms.vstring(
        'L1Trigger/L1THGCal/data/egamma_id_drnn_cone_loweta_v0.xml',
        'L1Trigger/L1THGCal/data/egamma_id_drnn_cone_higheta_v0.xml'
    ),
    WorkingPoints = cms.vdouble(-0.01481255, 0.05995301)
)

process.egamma_identification_drnn_dbscan = cms.PSet(
    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
    CategoriesPtMin = cms.vdouble(0.0, 0.0),
    Inputs = cms.vstring(
        'cl3d_firstlayer',
        'cl3d_coreshowerlength',
        'cl3d_maxlayer',
        'cl3d_srrmean'
    ),
    Weights = cms.vstring(
        'L1Trigger/L1THGCal/data/egamma_id_drnn_dbscan_loweta_v0.xml',
        'L1Trigger/L1THGCal/data/egamma_id_drnn_dbscan_higheta_v0.xml'
    ),
    WorkingPoints = cms.vdouble(-0.04547527, 0.05559443)
)

process.egamma_identification_histomax = cms.PSet(
    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
    CategoriesPtMin = cms.vdouble(0.0, 0.0),
    Inputs = cms.vstring(
        'cl3d_coreshowerlength',
        'cl3d_showerlength',
        'cl3d_firstlayer',
        'cl3d_maxlayer',
        'cl3d_szz',
        'cl3d_srrmean',
        'cl3d_srrtot',
        'cl3d_seetot',
        'cl3d_spptot'
    ),
    Weights = cms.vstring(
        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
    ),
    WorkingPoints = cms.VPSet(
        cms.PSet(
            Name = cms.string('tight'),
            WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
        ),
        cms.PSet(
            Name = cms.string('loose'),
            WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
        )
    )
)

process.energy_interpretations_em = cms.PSet(
    dr_bylayer = cms.vdouble(
        0.015, 0.015, 0.015, 0.015, 0.015,
        0.015, 0.015, 0.015, 0.015, 0.015,
        0.015, 0.015, 0.015, 0.015, 0.015
    ),
    layer_containment_corrs = cms.vdouble(
        0.0, 0.0, 1.38, 0.97, 1.11,
        0.92, 1.06, 1.01, 1.06, 0.89,
        1.0, 1.06, 0.89, 1.62, 1.83
    ),
    scale_correction_coeff = cms.vdouble(53.94, -27.15),
    type = cms.string('HGCalTriggerClusterInterpretationEM')
)

process.es_electronics_sim = cms.PSet(
    doESNoise = cms.bool(True),
    doFast = cms.bool(True)
)

process.feCfg_sc = cms.PSet(
    adcNbits = cms.uint32(10),
    adcPulse = cms.vdouble(
        0.0, 0.017, 0.817, 0.163, 0.003,
        0.0
    ),
    adcSaturation_fC = cms.double(68.75),
    adcThreshold_fC = cms.double(0.5),
    fwVersion = cms.uint32(2),
    jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
    jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
    pulseAvgT = cms.vdouble(
        0.0, 23.42298, 13.16733, 6.41062, 5.03946,
        4.532
    ),
    targetMIPvalue_ADC = cms.uint32(15),
    tdcChargeDrainParameterisation = cms.vdouble(
        -919.13, 365.36, -14.1, 0.2, -21.85,
        49.39, 22.21, 0.8, -0.28, 27.14,
        43.95, 3.89048
    ),
    tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
    tdcNbits = cms.uint32(12),
    tdcOnset_fC = cms.double(55),
    tdcResolutionInPs = cms.double(0.001),
    tdcSaturation_fC = cms.double(1000),
    toaLSB_ns = cms.double(0.0244),
    toaMode = cms.uint32(1)
)

process.feCfg_si = cms.PSet(
    adcNbits = cms.uint32(10),
    adcPulse = cms.vdouble(
        0.0, 0.017, 0.817, 0.163, 0.003,
        0.0
    ),
    adcSaturation_fC = cms.double(100),
    adcThreshold_fC = cms.double(0.672),
    fwVersion = cms.uint32(2),
    jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
    jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
    pulseAvgT = cms.vdouble(
        0.0, 23.42298, 13.16733, 6.41062, 5.03946,
        4.532
    ),
    targetMIPvalue_ADC = cms.uint32(10),
    tdcChargeDrainParameterisation = cms.vdouble(
        -919.13, 365.36, -14.1, 0.2, -21.85,
        49.39, 22.21, 0.8, -0.28, 27.14,
        43.95, 3.89048
    ),
    tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
    tdcNbits = cms.uint32(12),
    tdcOnset_fC = cms.double(60),
    tdcResolutionInPs = cms.double(0.001),
    tdcSaturation_fC = cms.double(10000),
    toaLSB_ns = cms.double(0.0244),
    toaMode = cms.uint32(1)
)

process.geometry = cms.PSet(
    DisconnectedLayers = cms.vuint32(
        2, 4, 6, 8, 10,
        12, 14, 16, 18, 20,
        22, 24, 26, 28
    ),
    DisconnectedModules = cms.vuint32(0),
    L1TLinksMapping = cms.FileInPath('L1Trigger/L1THGCal/data/links_mapping_decentralized_signaldriven_0.txt'),
    L1TModulesMapping = cms.FileInPath('L1Trigger/L1THGCal/data/panel_mapping_V9_decentralized_jun19_0.txt'),
    ScintillatorLinksPerModule = cms.uint32(2),
    ScintillatorModuleSize = cms.uint32(6),
    ScintillatorTriggerCellSize = cms.uint32(2),
    TriggerGeometryName = cms.string('HGCalTriggerGeometryV9Imp2')
)

process.hcalDigitizer = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    accumulatorType = cms.string('HcalDigiProducer'),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    doZDCDigi = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            125.44, 125.54, 125.32, 125.13, 124.46,
            125.01, 125.22, 125.48, 124.45, 125.9,
            125.83, 127.01, 126.82, 129.73, 131.83,
            143.52
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            210.55, 197.93, 186.12, 189.64, 189.63,
            190.28, 189.61, 189.6, 190.12, 191.22,
            190.9, 193.06, 188.42, 188.42
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(9.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(8.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    makeDigiSimLinks = cms.untracked.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(-4.0)
    )
)

process.hcalSimBlock = cms.PSet(
    DelivLuminosity = cms.double(0),
    HBDarkening = cms.bool(False),
    HEDarkening = cms.bool(False),
    HFDarkening = cms.bool(False),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HcalPreMixStage1 = cms.bool(False),
    HcalPreMixStage2 = cms.bool(False),
    TestNumbering = cms.bool(True),
    debugCaloSamples = cms.bool(False),
    doEmpty = cms.bool(True),
    doHFWindow = cms.bool(False),
    doIonFeedback = cms.bool(True),
    doNeutralDensityFilter = cms.bool(True),
    doNoise = cms.bool(True),
    doThermalNoise = cms.bool(True),
    doTimeSlew = cms.bool(True),
    doZDCDigi = cms.bool(True),
    hb = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            125.44, 125.54, 125.32, 125.13, 124.46,
            125.01, 125.22, 125.48, 124.45, 125.9,
            125.83, 127.01, 126.82, 129.73, 131.83,
            143.52
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    he = cms.PSet(
        binOfMaximum = cms.int32(6),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(True),
        firstRing = cms.int32(16),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            210.55, 197.93, 186.12, 189.64, 189.63,
            190.28, 189.61, 189.6, 190.12, 191.22,
            190.9, 193.06, 188.42, 188.42
        ),
        simHitToPhotoelectrons = cms.double(2000.0),
        sipmTau = cms.double(10.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(18.7),
        timePhase = cms.double(6.0),
        timeSmearing = cms.bool(True)
    ),
    hf1 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(2.79),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(9.0)
    ),
    hf2 = cms.PSet(
        binOfMaximum = cms.int32(2),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(3),
        samplingFactor = cms.double(0.37),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(3.0),
        timePhase = cms.double(8.0)
    ),
    hitsProducer = cms.string('g4SimHits'),
    ho = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(1),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoHamamatsu = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    hoZecotek = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        firstRing = cms.int32(1),
        readoutFrameSize = cms.int32(10),
        samplingFactors = cms.vdouble(
            231.0, 231.0, 231.0, 231.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0,
            360.0, 360.0, 360.0, 360.0, 360.0
        ),
        siPMCode = cms.int32(2),
        simHitToPhotoelectrons = cms.double(4000.0),
        sipmTau = cms.double(5.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(5.0),
        timeSmearing = cms.bool(False)
    ),
    ignoreGeantTime = cms.bool(False),
    injectTestHits = cms.bool(False),
    injectTestHitsCells = cms.vint32(),
    injectTestHitsEnergy = cms.vdouble(),
    injectTestHitsTime = cms.vdouble(),
    killHE = cms.bool(False),
    minFCToDelay = cms.double(5.0),
    zdc = cms.PSet(
        binOfMaximum = cms.int32(5),
        delayQIE = cms.int32(-999),
        doPhotoStatistics = cms.bool(True),
        doSiPMSmearing = cms.bool(False),
        photoelectronsToAnalog = cms.double(1.843),
        readoutFrameSize = cms.int32(10),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectrons = cms.double(6.0),
        sipmTau = cms.double(0.0),
        syncPhase = cms.bool(True),
        threshold_currentTDC = cms.double(-999.0),
        timePhase = cms.double(-4.0)
    )
)

process.hfnoseDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HFNose_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HFNoseDigis'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HFNoseDigitizer'),
    eVPerEleHolePair = cms.double(3.62),
    hitCollection = cms.string('HFNoseHits'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-33),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgceeDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisEE'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HGCEEDigitizer'),
    eVPerEleHolePair = cms.double(3.62),
    hitCollection = cms.string('HGCHitsEE'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-9),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchebackDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        algo = cms.uint32(2),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(68.75),
            adcThreshold_fC = cms.double(0.5),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(15),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(55),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(1000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        keV2MIP = cms.double(0.0014814814814814814),
        nPEperMIP = cms.double(21.0),
        nTotalPE = cms.double(7500),
        noise = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_heback')
        ),
        sdPixels = cms.double(1e-06),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisHEback'),
    digitizationType = cms.uint32(1),
    digitizer = cms.string('HGCHEbackDigitizer'),
    hitCollection = cms.string('HGCHitsHEback'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-14),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.hgchefrontDigitizer = cms.PSet(
    NoiseGeneration_Method = cms.bool(True),
    accumulatorType = cms.string('HGCDigiProducer'),
    bxTime = cms.double(25),
    digiCfg = cms.PSet(
        cceParams = cms.PSet(
            refToPSet_ = cms.string('HGCAL_cceParams_toUse')
        ),
        chargeCollectionEfficiencies = cms.PSet(
            refToPSet_ = cms.string('HGCAL_chargeCollectionEfficiencies')
        ),
        doTimeSamples = cms.bool(False),
        feCfg = cms.PSet(
            adcNbits = cms.uint32(10),
            adcPulse = cms.vdouble(
                0.0, 0.017, 0.817, 0.163, 0.003,
                0.0
            ),
            adcSaturation_fC = cms.double(100),
            adcThreshold_fC = cms.double(0.672),
            fwVersion = cms.uint32(2),
            jitterConstant_ns = cms.vdouble(0.02, 0.02, 0.02),
            jitterNoise_ns = cms.vdouble(5.0, 5.0, 5.0),
            pulseAvgT = cms.vdouble(
                0.0, 23.42298, 13.16733, 6.41062, 5.03946,
                4.532
            ),
            targetMIPvalue_ADC = cms.uint32(10),
            tdcChargeDrainParameterisation = cms.vdouble(
                -919.13, 365.36, -14.1, 0.2, -21.85,
                49.39, 22.21, 0.8, -0.28, 27.14,
                43.95, 3.89048
            ),
            tdcForToAOnset_fC = cms.vdouble(12.0, 12.0, 12.0),
            tdcNbits = cms.uint32(12),
            tdcOnset_fC = cms.double(60),
            tdcResolutionInPs = cms.double(0.001),
            tdcSaturation_fC = cms.double(10000),
            toaLSB_ns = cms.double(0.0244),
            toaMode = cms.uint32(1)
        ),
        ileakParam = cms.PSet(
            refToPSet_ = cms.string('HGCAL_ileakParam_toUse')
        ),
        keV2fC = cms.double(0.044259),
        noise_fC = cms.PSet(
            refToPSet_ = cms.string('HGCAL_noise_fC')
        ),
        thresholdFollowsMIP = cms.bool(True)
    ),
    digiCollection = cms.string('HGCDigisHEfront'),
    digitizationType = cms.uint32(0),
    digitizer = cms.string('HGCHEfrontDigitizer'),
    hitCollection = cms.string('HGCHitsHEfront'),
    hitsProducer = cms.string('g4SimHits'),
    makeDigiSimLinks = cms.bool(False),
    maxSimHitsAccTime = cms.uint32(100),
    premixStage1 = cms.bool(False),
    premixStage1MaxCharge = cms.double(1000000.0),
    premixStage1MinCharge = cms.double(0),
    tofDelay = cms.double(-11),
    useAllChannels = cms.bool(True),
    verbosity = cms.untracked.uint32(0)
)

process.histoInterpolatedMax_C3d_params = cms.PSet(
    binSumsHisto = cms.vuint32(
        13, 11, 11, 11, 9,
        9, 9, 7, 7, 7,
        7, 7, 7, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 3, 3,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    kROverZMax = cms.double(0.58),
    kROverZMin = cms.double(0.076),
    nBins_X1_histo_multicluster = cms.uint32(42),
    nBins_X2_histo_multicluster = cms.uint32(216),
    neighbour_weights = cms.vdouble(
        0, 0.25, 0, 0.25, 0,
        0.25, 0, 0.25, 0
    ),
    seed_position = cms.string('TCWeighted'),
    seed_smoothing_ecal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.1,
        1.0, 1.0, 1.0, 1.0
    ),
    seed_smoothing_hcal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 2.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0
    ),
    seeding_space = cms.string('RPhi'),
    seeds_norm_by_area = cms.bool(False),
    threshold_histo_multicluster = cms.double(20.0),
    type_histoalgo = cms.string('HistoInterpolatedMaxC3d')
)

process.histoMaxVariableDR_C3d_params = cms.PSet(
    AlgoName = cms.string('HGCalHistoClusteringWrapper'),
    EGIdentification = cms.PSet(
        CategoriesEtaMax = cms.vdouble(2.7, 3.0),
        CategoriesEtaMin = cms.vdouble(1.5, 2.7),
        CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
        CategoriesPtMin = cms.vdouble(0.0, 0.0),
        Inputs = cms.vstring(
            'cl3d_coreshowerlength',
            'cl3d_showerlength',
            'cl3d_firstlayer',
            'cl3d_maxlayer',
            'cl3d_szz',
            'cl3d_srrmean',
            'cl3d_srrtot',
            'cl3d_seetot',
            'cl3d_spptot'
        ),
        Weights = cms.vstring(
            'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
            'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
        ),
        WorkingPoints = cms.VPSet(
            cms.PSet(
                Name = cms.string('tight'),
                WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
            ),
            cms.PSet(
                Name = cms.string('loose'),
                WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
            )
        )
    ),
    cluster_association = cms.string('NearestNeighbour'),
    dR_multicluster = cms.double(0.0),
    dR_multicluster_byLayer_coefficientA = cms.vdouble(
        0, 0.015, 0.015, 0.015, 0.015,
        0.015, 0.015, 0.015, 0.02, 0.02,
        0.02, 0.02, 0.02, 0.02, 0.02,
        0.03, 0.03, 0.03, 0.03, 0.03,
        0.03, 0.03, 0.04, 0.04, 0.04,
        0.04, 0.04, 0.04, 0.04, 0.04,
        0.04, 0.04, 0.04, 0.04, 0.04,
        0.05, 0.05, 0.05, 0.05, 0.05,
        0.05, 0.05, 0.05, 0.05, 0.05,
        0.05, 0.05, 0.05, 0.05, 0.05,
        0.05, 0.05, 0.05
    ),
    dR_multicluster_byLayer_coefficientB = cms.vdouble(
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0
    ),
    minPt_multicluster = cms.double(0.5),
    shape_distance = cms.double(0.015),
    shape_threshold = cms.double(1.0)
)

process.histoMaxXYVariableDR_C3d_params = cms.PSet(
    binSumsHisto = cms.vuint32(
        13, 11, 11, 11, 9,
        9, 9, 7, 7, 7,
        7, 7, 7, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 3, 3,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    kROverZMax = cms.double(0.58),
    kROverZMin = cms.double(0.076),
    nBins_X1_histo_multicluster = cms.uint32(192),
    nBins_X2_histo_multicluster = cms.uint32(192),
    neighbour_weights = cms.vdouble(
        0, 0.25, 0, 0.25, 0,
        0.25, 0, 0.25, 0
    ),
    seed_position = cms.string('TCWeighted'),
    seed_smoothing_ecal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.1,
        1.0, 1.0, 1.0, 1.0
    ),
    seed_smoothing_hcal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 2.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0
    ),
    seeding_space = cms.string('XY'),
    seeds_norm_by_area = cms.bool(False),
    threshold_histo_multicluster = cms.double(20.0),
    type_histoalgo = cms.string('HistoMaxC3d')
)

process.histoMax_C3d_clustering_params = cms.PSet(
    EGIdentification = cms.PSet(
        CategoriesEtaMax = cms.vdouble(2.7, 3.0),
        CategoriesEtaMin = cms.vdouble(1.5, 2.7),
        CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
        CategoriesPtMin = cms.vdouble(0.0, 0.0),
        Inputs = cms.vstring(
            'cl3d_coreshowerlength',
            'cl3d_showerlength',
            'cl3d_firstlayer',
            'cl3d_maxlayer',
            'cl3d_szz',
            'cl3d_srrmean',
            'cl3d_srrtot',
            'cl3d_seetot',
            'cl3d_spptot'
        ),
        Weights = cms.vstring(
            'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
            'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
        ),
        WorkingPoints = cms.VPSet(
            cms.PSet(
                Name = cms.string('tight'),
                WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
            ),
            cms.PSet(
                Name = cms.string('loose'),
                WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
            )
        )
    ),
    cluster_association = cms.string('NearestNeighbour'),
    dR_multicluster = cms.double(0.03),
    dR_multicluster_byLayer_coefficientA = cms.vdouble(),
    dR_multicluster_byLayer_coefficientB = cms.vdouble(),
    minPt_multicluster = cms.double(0.5),
    shape_distance = cms.double(0.015),
    shape_threshold = cms.double(1.0)
)

process.histoMax_C3d_params = cms.PSet(
    histoMax_C3d_clustering_parameters = cms.PSet(
        AlgoName = cms.string('HGCalHistoClusteringWrapper'),
        EGIdentification = cms.PSet(
            CategoriesEtaMax = cms.vdouble(2.7, 3.0),
            CategoriesEtaMin = cms.vdouble(1.5, 2.7),
            CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
            CategoriesPtMin = cms.vdouble(0.0, 0.0),
            Inputs = cms.vstring(
                'cl3d_coreshowerlength',
                'cl3d_showerlength',
                'cl3d_firstlayer',
                'cl3d_maxlayer',
                'cl3d_szz',
                'cl3d_srrmean',
                'cl3d_srrtot',
                'cl3d_seetot',
                'cl3d_spptot'
            ),
            Weights = cms.vstring(
                'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
                'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
            ),
            WorkingPoints = cms.VPSet(
                cms.PSet(
                    Name = cms.string('tight'),
                    WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
                ),
                cms.PSet(
                    Name = cms.string('loose'),
                    WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
                )
            )
        ),
        cluster_association = cms.string('NearestNeighbour'),
        dR_multicluster = cms.double(0.0),
        dR_multicluster_byLayer_coefficientA = cms.vdouble(
            0, 0.015, 0.015, 0.015, 0.015,
            0.015, 0.015, 0.015, 0.02, 0.02,
            0.02, 0.02, 0.02, 0.02, 0.02,
            0.03, 0.03, 0.03, 0.03, 0.03,
            0.03, 0.03, 0.04, 0.04, 0.04,
            0.04, 0.04, 0.04, 0.04, 0.04,
            0.04, 0.04, 0.04, 0.04, 0.04,
            0.05, 0.05, 0.05, 0.05, 0.05,
            0.05, 0.05, 0.05, 0.05, 0.05,
            0.05, 0.05, 0.05, 0.05, 0.05,
            0.05, 0.05, 0.05
        ),
        dR_multicluster_byLayer_coefficientB = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        minPt_multicluster = cms.double(0.5),
        shape_distance = cms.double(0.015),
        shape_threshold = cms.double(1.0)
    ),
    histoMax_C3d_seeding_parameters = cms.PSet(
        binSumsHisto = cms.vuint32(
            13, 11, 11, 11, 9,
            9, 9, 7, 7, 7,
            7, 7, 7, 5, 5,
            5, 5, 5, 5, 5,
            5, 5, 5, 5, 5,
            5, 5, 5, 3, 3,
            3, 3, 3, 3, 3,
            3, 3, 3, 3, 3,
            3, 3
        ),
        kROverZMax = cms.double(0.58),
        kROverZMin = cms.double(0.076),
        nBins_X1_histo_multicluster = cms.uint32(42),
        nBins_X2_histo_multicluster = cms.uint32(216),
        neighbour_weights = cms.vdouble(
            0, 0.25, 0, 0.25, 0,
            0.25, 0, 0.25, 0
        ),
        seed_position = cms.string('TCWeighted'),
        seed_smoothing_ecal = cms.vdouble(
            1.0, 1.0, 1.0, 1.0, 1.1,
            1.0, 1.0, 1.0, 1.0
        ),
        seed_smoothing_hcal = cms.vdouble(
            1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 2.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0
        ),
        seeding_space = cms.string('RPhi'),
        seeds_norm_by_area = cms.bool(False),
        threshold_histo_multicluster = cms.double(20.0),
        type_histoalgo = cms.string('HistoMaxC3d')
    ),
    histoMax_C3d_sorting_truncation_parameters = cms.PSet(
        AlgoName = cms.string('HGCalSortingTruncationWrapper'),
        maxTCs = cms.uint32(80)
    ),
    type_multicluster = cms.string('Histo')
)

process.histoMax_C3d_seeding_params = cms.PSet(
    binSumsHisto = cms.vuint32(
        13, 11, 11, 11, 9,
        9, 9, 7, 7, 7,
        7, 7, 7, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 3, 3,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    kROverZMax = cms.double(0.58),
    kROverZMin = cms.double(0.076),
    nBins_X1_histo_multicluster = cms.uint32(42),
    nBins_X2_histo_multicluster = cms.uint32(216),
    neighbour_weights = cms.vdouble(
        0, 0.25, 0, 0.25, 0,
        0.25, 0, 0.25, 0
    ),
    seed_position = cms.string('TCWeighted'),
    seed_smoothing_ecal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.1,
        1.0, 1.0, 1.0, 1.0
    ),
    seed_smoothing_hcal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 2.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0
    ),
    seeding_space = cms.string('RPhi'),
    seeds_norm_by_area = cms.bool(False),
    threshold_histo_multicluster = cms.double(20.0),
    type_histoalgo = cms.string('HistoMaxC3d')
)

process.histoMax_C3d_sorting_truncation_params = cms.PSet(
    AlgoName = cms.string('HGCalSortingTruncationWrapper'),
    maxTCs = cms.uint32(80)
)

process.histoSecondaryMax_C3d_params = cms.PSet(
    binSumsHisto = cms.vuint32(
        13, 11, 11, 11, 9,
        9, 9, 7, 7, 7,
        7, 7, 7, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 3, 3,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    kROverZMax = cms.double(0.58),
    kROverZMin = cms.double(0.076),
    nBins_X1_histo_multicluster = cms.uint32(42),
    nBins_X2_histo_multicluster = cms.uint32(216),
    neighbour_weights = cms.vdouble(
        0, 0.25, 0, 0.25, 0,
        0.25, 0, 0.25, 0
    ),
    seed_position = cms.string('TCWeighted'),
    seed_smoothing_ecal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.1,
        1.0, 1.0, 1.0, 1.0
    ),
    seed_smoothing_hcal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 2.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0
    ),
    seeding_space = cms.string('RPhi'),
    seeds_norm_by_area = cms.bool(False),
    threshold_histo_multicluster = cms.double(20.0),
    type_histoalgo = cms.string('HistoSecondaryMaxC3d')
)

process.histoThreshold_C3d_params = cms.PSet(
    binSumsHisto = cms.vuint32(
        13, 11, 11, 11, 9,
        9, 9, 7, 7, 7,
        7, 7, 7, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 3, 3,
        3, 3, 3, 3, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    kROverZMax = cms.double(0.58),
    kROverZMin = cms.double(0.076),
    nBins_X1_histo_multicluster = cms.uint32(42),
    nBins_X2_histo_multicluster = cms.uint32(216),
    neighbour_weights = cms.vdouble(
        0, 0.25, 0, 0.25, 0,
        0.25, 0, 0.25, 0
    ),
    seed_position = cms.string('TCWeighted'),
    seed_smoothing_ecal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.1,
        1.0, 1.0, 1.0, 1.0
    ),
    seed_smoothing_hcal = cms.vdouble(
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 2.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0
    ),
    seeding_space = cms.string('RPhi'),
    seeds_norm_by_area = cms.bool(False),
    threshold_histo_multicluster = cms.double(20.0),
    type_histoalgo = cms.string('HistoThresholdC3d')
)

process.layer1truncation_proc = cms.PSet(
    C2d_parameters = cms.PSet(
        applyLayerCalibration = cms.bool(True),
        calibSF_cluster = cms.double(1.0),
        clusterType = cms.string('dummyC2d'),
        layerWeights = cms.vdouble(
            0.0, 0.0183664, 0.0, 0.0305622, 0.0,
            0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
            0.0, 0.0185754, 0.0, 0.0204934, 0.0,
            0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
            0.0, 0.0238385, 0.0, 0.0301146, 0.0,
            0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
            0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
            0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
            0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
            0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
            0.121674, 0.1171, 0.328053
        )
    ),
    ProcessorName = cms.string('HGCalBackendLayer1Processor'),
    truncation_parameters = cms.PSet(
        doTruncation = cms.bool(True),
        maxTcsPerBin = cms.vuint32(
            2, 7, 27, 24, 19,
            17, 16, 15, 14, 14,
            13, 13, 13, 12, 12,
            12, 11, 11, 11, 10,
            10, 10, 10, 10, 9,
            9, 10, 9, 9, 9,
            8, 8, 7, 5, 3,
            3, 3, 3, 3, 3,
            3, 3
        ),
        phiSectorEdges = cms.vdouble(
            0.98901991, 0.72722052, 0.6981317, 0.87266463, 0.93084227,
            0.90175345, 0.87266463, 0.90175345, 0.95993109, 0.95993109,
            0.93084227, 0.93084227, 0.95993109, 0.98901991, 0.95993109,
            0.95993109, 0.95993109, 0.98901991, 0.98901991, 0.95993109,
            0.95993109, 0.98901991, 0.98901991, 0.98901991, 0.98901991,
            0.98901991, 1.01810873, 0.98901991, 0.98901991, 0.98901991,
            0.98901991, 0.98901991, 0.98901991, 0.98901991, 1.04719755,
            1.04719755, 1.04719755, 1.04719755, 1.01810873, 1.04719755,
            1.01810873, 1.01810873
        ),
        rozBins = cms.uint32(42),
        rozMax = cms.double(0.55508006),
        rozMin = cms.double(0.07587128)
    )
)

process.linearization_params_sc = cms.PSet(
    adcnBits = cms.uint32(10),
    adcsaturation = cms.double(68.75),
    linLSB = cms.double(0.067138671875),
    linnBits = cms.uint32(17),
    oot_coefficients = cms.vdouble(0.0, 0.0),
    tdcOnset = cms.double(55),
    tdcnBits = cms.uint32(12),
    tdcsaturation = cms.double(1000)
)

process.linearization_params_si = cms.PSet(
    adcnBits = cms.uint32(10),
    adcsaturation = cms.double(100),
    linLSB = cms.double(0.09765625),
    linnBits = cms.uint32(17),
    oot_coefficients = cms.vdouble(0.0, 0.0),
    tdcOnset = cms.double(60),
    tdcnBits = cms.uint32(12),
    tdcsaturation = cms.double(10000)
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1),
    output = cms.optional.untracked.allowed(cms.int32,cms.PSet)
)

process.maxLuminosityBlocks = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.me0DigiCommonParameters = cms.PSet(
    ME0ElecBkgParam0 = cms.double(0.00171409),
    ME0ElecBkgParam1 = cms.double(4900.56),
    ME0ElecBkgParam2 = cms.double(710909),
    ME0ElecBkgParam3 = cms.double(-4327.25),
    ME0NeuBkgParam0 = cms.double(0.00386257),
    ME0NeuBkgParam1 = cms.double(6344.65),
    ME0NeuBkgParam2 = cms.double(16627700),
    ME0NeuBkgParam3 = cms.double(-102098),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)

process.me0PseudoDigiCommonParameters = cms.PSet(
    averageEfficiency = cms.double(0.98),
    constantPhiSpatialResolution = cms.bool(True),
    digiPreRecoModelString = cms.string('PreRecoGaussian'),
    digitizeOnlyMuons = cms.bool(False),
    etaError = cms.double(0.001),
    etaResolution = cms.double(0.0),
    gaussianSmearing = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    phiError = cms.double(0.001),
    phiResolution = cms.double(0.0),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    simulateElectronBkg = cms.bool(False),
    simulateNeutralBkg = cms.bool(False),
    timeResolution = cms.double(0.0),
    useCorrelation = cms.bool(False),
    useEtaProjectiveGEO = cms.bool(False)
)

process.mtdDigitizer = cms.PSet(
    accumulatorType = cms.string('MTDDigiProducer'),
    barrelDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            LCEpositionSlope = cms.double(0.071),
            LightCollectionEff = cms.double(0.25),
            LightCollectionSlope = cms.double(0.075),
            LightYield = cms.double(40000.0),
            PhotonDetectionEff = cms.double(0.2),
            bxTime = cms.double(25)
        ),
        ElectronicsSimulation = cms.PSet(
            ChannelTimeOffset = cms.double(0.0),
            CorrelationCoefficient = cms.double(1.0),
            DarkCountRate = cms.double(10.0),
            EnergyThreshold = cms.double(4.0),
            LightCollectionEff = cms.double(0.25),
            LightYield = cms.double(40000.0),
            Npe_to_V = cms.double(0.0064),
            Npe_to_pC = cms.double(0.016),
            PhotonDetectionEff = cms.double(0.2),
            ReferencePulseNpe = cms.double(100.0),
            ScintillatorDecayTime = cms.double(40.0),
            ScintillatorRiseTime = cms.double(1.1),
            SigmaClock = cms.double(0.015),
            SigmaElectronicNoise = cms.double(1.0),
            SigmaRelTOFHIRenergy = cms.vdouble(0.139, -4.35e-05, 3.315e-09, -1.2e-13, 1.67e-18),
            SinglePhotonTimeResolution = cms.double(0.06),
            SmearTimeForOOTtails = cms.bool(True),
            TestBeamMIPTimeRes = cms.double(4.293),
            TimeThreshold1 = cms.double(20.0),
            TimeThreshold2 = cms.double(50.0),
            adcNbits = cms.uint32(10),
            adcSaturation_MIP = cms.double(600.0),
            adcThreshold_MIP = cms.double(0.064),
            bxTime = cms.double(25),
            smearChannelTimeOffset = cms.double(0.0),
            tdcNbits = cms.uint32(10),
            toaLSB_ns = cms.double(0.02)
        ),
        digiCollectionTag = cms.string('FTLBarrel'),
        digitizerName = cms.string('BTLDigitizer'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsBarrel"),
        maxSimHitsAccTime = cms.uint32(100),
        premixStage1 = cms.bool(False),
        premixStage1MaxCharge = cms.double(1000000.0),
        premixStage1MinCharge = cms.double(0.0001)
    ),
    endcapDigitizer = cms.PSet(
        DeviceSimulation = cms.PSet(
            FluenceVsRadius = cms.string('1.937*TMath::Power(x,-1.706)'),
            IntegratedLuminosity = cms.double(1000.0),
            LGADGainDegradation = cms.string('TMath::Max(1.0, TMath::Min(x, x + 0.05/0.01 * (x - 1) + y * (1 - x)/0.01))'),
            LGADGainVsFluence = cms.string('TMath::Min(15.,30.-x)'),
            MPVElectron = cms.string('1.30030e-05 + 1.55166e-07 / (x * x)'),
            MPVKaon = cms.string('1.20998e-05 + 2.47192e-06 / (x * x * x)'),
            MPVMuon = cms.string('1.21561e-05 + 8.89462e-07 / (x * x)'),
            MPVPion = cms.string('1.24531e-05 + 7.16578e-07 / (x * x)'),
            MPVProton = cms.string('1.13666e-05 + 1.20093e-05 / (x * x)'),
            applyDegradation = cms.bool(False),
            bxTime = cms.double(25),
            meVPerMIP = cms.double(0.085),
            tofDelay = cms.double(1)
        ),
        ElectronicsSimulation = cms.PSet(
            IntegratedLuminosity = cms.double(1000.0),
            adcNbits = cms.uint32(8),
            adcSaturation_MIP = cms.double(100),
            adcThreshold_MIP = cms.double(0.025),
            bxTime = cms.double(25),
            formulaLandauNoise = cms.string('TMath::Max(0.020, 0.020 * (0.35 * (x - 1.0) + 1.0))'),
            iThreshold_MIP = cms.double(0.9525),
            noiseLevel = cms.double(0.175),
            referenceChargeColl = cms.double(1.0),
            sigmaDistorsion = cms.double(0.0),
            sigmaTDC = cms.double(0.01),
            tdcNbits = cms.uint32(11),
            toaLSB_ns = cms.double(0.013)
        ),
        digiCollectionTag = cms.string('FTLEndcap'),
        digitizerName = cms.string('ETLDigitizer'),
        inputSimHits = cms.InputTag("g4SimHits","FastTimerHitsEndcap"),
        maxSimHitsAccTime = cms.uint32(100),
        premixStage1 = cms.bool(False),
        premixStage1MaxCharge = cms.double(1000000.0),
        premixStage1MinCharge = cms.double(0.0001)
    ),
    makeDigiSimLinks = cms.bool(False),
    verbosity = cms.untracked.uint32(0)
)

process.mtdTruth = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    MaxPseudoRapidity = cms.double(5.0),
    MinEnergy = cms.double(0.5),
    accumulatorType = cms.string('MtdTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    bunchspace = cms.uint32(25),
    genParticleCollection = cms.InputTag("genParticles"),
    maximumPreviousBunchCrossing = cms.uint32(0),
    maximumSubsequentBunchCrossing = cms.uint32(0),
    premixStage1 = cms.bool(False),
    simHitCollections = cms.PSet(
        mtdCollections = cms.VInputTag(cms.InputTag("g4SimHits","FastTimerHitsBarrel"), cms.InputTag("g4SimHits","FastTimerHitsEndcap"))
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits")
)

process.nanoDQMIO_perLSoutput = cms.PSet(
    MEsToSave = cms.untracked.vstring( (
        'Hcal/DigiTask/Occupancy/depth/depth1',
        'Hcal/DigiTask/Occupancy/depth/depth2',
        'Hcal/DigiTask/Occupancy/depth/depth3',
        'Hcal/DigiTask/Occupancy/depth/depth4',
        'Hcal/DigiTask/Occupancy/depth/depth5',
        'Hcal/DigiTask/Occupancy/depth/depth6',
        'Hcal/DigiTask/Occupancy/depth/depth7',
        'Hcal/DigiTask/Occupancy/depth/depthHO',
        'Hcal/DigiTask/OccupancyCut/depth/depth1',
        'Hcal/DigiTask/OccupancyCut/depth/depth2',
        'Hcal/DigiTask/OccupancyCut/depth/depth3',
        'Hcal/DigiTask/OccupancyCut/depth/depth4',
        'Hcal/DigiTask/OccupancyCut/depth/depth5',
        'Hcal/DigiTask/OccupancyCut/depth/depth6',
        'Hcal/DigiTask/OccupancyCut/depth/depth7',
        'Hcal/DigiTask/OccupancyCut/depth/depthHO',
        'EcalBarrel/EBOccupancyTask/EBOT digi occupancy',
        'EcalEndcap/EEOccupancyTask/EEOT digi occupancy EE -',
        'EcalEndcap/EEOccupancyTask/EEOT digi occupancy EE +',
        'EcalBarrel/EBOccupancyTask/EBOT DCC entries',
        'EcalEndcap/EEOccupancyTask/EEOT DCC entries',
        'Ecal/EventInfo/processedEvents',
        'PixelPhase1/Tracks/charge_PXBarrel',
        'PixelPhase1/Tracks/charge_PXForward',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/charge_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/charge_PXDisk_-3',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/size_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/size_PXDisk_-3',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalm1',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalm2',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalm3',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalm4',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalp1',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalp2',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalp3',
        'CSC/CSCOfflineMonitor/recHits/hRHGlobalp4',
        'HLT/Vertexing/hltPixelVertices/hltPixelVertices/goodvtxNbr',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/mon_unMatched_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_eta',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_hits',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_matched_pt',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_phi',
        'HLT/Tracking/ValidationWRTOffline/hltMergedWrtHighPurityPV/ref_pt',
        'HLT/Tracking/pixelTracks/GeneralProperties/Chi2Prob_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/Chi2oNDFVsEta_ImpactPoint_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DeltaZToPVZoom_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DistanceOfClosestApproachToPVVsPhi_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/DistanceOfClosestApproachToPVZoom_GenTk',
        'HLT/Tracking/pixelTracks/GeneralProperties/NumberOfTracks_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/Chi2Prob_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/Chi2oNDFVsEta_ImpactPoint_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DeltaZToPVZoom_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DistanceOfClosestApproachToPVVsPhi_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/DistanceOfClosestApproachToPVZoom_GenTk',
        'HLT/Tracking/tracks/GeneralProperties/NumberOfTracks_GenTk',
        'HLT/Tracking/tracks/LUMIanalysis/NumberEventsVsLUMI',
        'HLT/Tracking/tracks/PUmonitoring/NumberEventsVsGoodPVtx',
        'PixelPhase1/Tracks/num_clusters_ontrack_PXBarrel',
        'PixelPhase1/Tracks/num_clusters_ontrack_PXForward',
        'PixelPhase1/Tracks/clusterposition_zphi_ontrack',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_1',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_2',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_3',
        'PixelPhase1/Tracks/PXBarrel/clusterposition_zphi_ontrack_PXLayer_4',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+1',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+2',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_+3',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-1',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-2',
        'PixelPhase1/Tracks/PXForward/clusterposition_xy_ontrack_PXDisk_-3',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/digi_occupancy_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_1',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/digi_occupancy_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_2',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/digi_occupancy_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_3',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/digi_occupancy_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_4',
        'PixelPhase1/Phase1_MechanicalView/PXForward/digi_occupancy_per_SignedDiskCoord_per_SignedBladePanelCoord_PXRing_1',
        'PixelPhase1/Phase1_MechanicalView/PXForward/digi_occupancy_per_SignedDiskCoord_per_SignedBladePanelCoord_PXRing_2',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/clusters_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_1',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/clusters_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_2',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/clusters_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_3',
        'PixelPhase1/Phase1_MechanicalView/PXBarrel/clusters_per_SignedModuleCoord_per_SignedLadderCoord_PXLayer_4',
        'PixelPhase1/Phase1_MechanicalView/PXForward/clusters_per_SignedDiskCoord_per_SignedBladePanelCoord_PXRing_1',
        'PixelPhase1/Phase1_MechanicalView/PXForward/clusters_per_SignedDiskCoord_per_SignedBladePanelCoord_PXRing_2',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/NormalizedHitResiduals_TEC__wheel__1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_2/NormalizedHitResiduals_TEC__wheel__2',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_3/NormalizedHitResiduals_TEC__wheel__3',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_4/NormalizedHitResiduals_TEC__wheel__4',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_5/NormalizedHitResiduals_TEC__wheel__5',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_6/NormalizedHitResiduals_TEC__wheel__6',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_7/NormalizedHitResiduals_TEC__wheel__7',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_8/NormalizedHitResiduals_TEC__wheel__8',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_9/NormalizedHitResiduals_TEC__wheel__9',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_1/NormalizedHitResiduals_TEC__wheel__1',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_2/NormalizedHitResiduals_TEC__wheel__2',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_3/NormalizedHitResiduals_TEC__wheel__3',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_4/NormalizedHitResiduals_TEC__wheel__4',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_5/NormalizedHitResiduals_TEC__wheel__5',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_6/NormalizedHitResiduals_TEC__wheel__6',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_7/NormalizedHitResiduals_TEC__wheel__7',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_8/NormalizedHitResiduals_TEC__wheel__8',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_9/NormalizedHitResiduals_TEC__wheel__9',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__2',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__3',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_4/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__4',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_5/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__5',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_6/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__6',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_7/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__7',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_8/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__8',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_9/Summary_ClusterStoNCorr__OnTrack__TEC__PLUS__wheel__9',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__1',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__2',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__3',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_4/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__4',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_5/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__5',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_6/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__6',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_7/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__7',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_8/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__8',
        'SiStrip/MechanicalView/TEC/MINUS/wheel_9/Summary_ClusterStoNCorr__OnTrack__TEC__MINUS__wheel__9',
        'SiStrip/MechanicalView/TIB/layer_1/NormalizedHitResiduals_TIB__Layer__1',
        'SiStrip/MechanicalView/TIB/layer_2/NormalizedHitResiduals_TIB__Layer__2',
        'SiStrip/MechanicalView/TIB/layer_3/NormalizedHitResiduals_TIB__Layer__3',
        'SiStrip/MechanicalView/TIB/layer_4/NormalizedHitResiduals_TIB__Layer__4',
        'SiStrip/MechanicalView/TIB/layer_1/Summary_ClusterStoNCorr__OnTrack__TIB__layer__1',
        'SiStrip/MechanicalView/TIB/layer_2/Summary_ClusterStoNCorr__OnTrack__TIB__layer__2',
        'SiStrip/MechanicalView/TIB/layer_3/Summary_ClusterStoNCorr__OnTrack__TIB__layer__3',
        'SiStrip/MechanicalView/TIB/layer_4/Summary_ClusterStoNCorr__OnTrack__TIB__layer__4',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/NormalizedHitResiduals_TID__wheel__1',
        'SiStrip/MechanicalView/TID/PLUS/wheel_2/NormalizedHitResiduals_TID__wheel__2',
        'SiStrip/MechanicalView/TID/PLUS/wheel_3/NormalizedHitResiduals_TID__wheel__3',
        'SiStrip/MechanicalView/TID/MINUS/wheel_1/NormalizedHitResiduals_TID__wheel__1',
        'SiStrip/MechanicalView/TID/MINUS/wheel_2/NormalizedHitResiduals_TID__wheel__2',
        'SiStrip/MechanicalView/TID/MINUS/wheel_3/NormalizedHitResiduals_TID__wheel__3',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__1',
        'SiStrip/MechanicalView/TID/PLUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__2',
        'SiStrip/MechanicalView/TID/PLUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TID__PLUS__wheel__3',
        'SiStrip/MechanicalView/TID/MINUS/wheel_1/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__1',
        'SiStrip/MechanicalView/TID/MINUS/wheel_2/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__2',
        'SiStrip/MechanicalView/TID/MINUS/wheel_3/Summary_ClusterStoNCorr__OnTrack__TID__MINUS__wheel__3',
        'SiStrip/MechanicalView/TOB/layer_1/NormalizedHitResiduals_TOB__Layer__1',
        'SiStrip/MechanicalView/TOB/layer_2/NormalizedHitResiduals_TOB__Layer__2',
        'SiStrip/MechanicalView/TOB/layer_3/NormalizedHitResiduals_TOB__Layer__3',
        'SiStrip/MechanicalView/TOB/layer_4/NormalizedHitResiduals_TOB__Layer__4',
        'SiStrip/MechanicalView/TOB/layer_5/NormalizedHitResiduals_TOB__Layer__5',
        'SiStrip/MechanicalView/TOB/layer_6/NormalizedHitResiduals_TOB__Layer__6',
        'SiStrip/MechanicalView/TOB/layer_1/Summary_ClusterStoNCorr__OnTrack__TOB__layer__1',
        'SiStrip/MechanicalView/TOB/layer_2/Summary_ClusterStoNCorr__OnTrack__TOB__layer__2',
        'SiStrip/MechanicalView/TOB/layer_3/Summary_ClusterStoNCorr__OnTrack__TOB__layer__3',
        'SiStrip/MechanicalView/TOB/layer_4/Summary_ClusterStoNCorr__OnTrack__TOB__layer__4',
        'SiStrip/MechanicalView/TOB/layer_5/Summary_ClusterStoNCorr__OnTrack__TOB__layer__5',
        'SiStrip/MechanicalView/TOB/layer_6/Summary_ClusterStoNCorr__OnTrack__TOB__layer__6',
        'SiStrip/MechanicalView/MainDiagonal Position',
        'SiStrip/MechanicalView/NumberOfClustersInPixel',
        'SiStrip/MechanicalView/NumberOfClustersInStrip',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/TkHMap_NumberOfDigi_TIDP_D1',
        'SiStrip/MechanicalView/TID/PLUS/wheel_1/TkHMap_NumberOfCluster_TIDP_D1',
        'SiStrip/MechanicalView/TIB/layer_1/TkHMap_NumberOfDigi_TIB_L1',
        'SiStrip/MechanicalView/TIB/layer_1/TkHMap_NumberOfCluster_TIB_L1',
        'SiStrip/MechanicalView/TOB/layer_1/TkHMap_NumberOfDigi_TOB_L1',
        'SiStrip/MechanicalView/TOB/layer_1/TkHMap_NumberOfCluster_TOB_L1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/TkHMap_NumberOfDigi_TECP_W1',
        'SiStrip/MechanicalView/TEC/PLUS/wheel_1/TkHMap_NumberOfCluster_TECP_W1',
        'Tracking/TrackParameters/generalTracks/LSanalysis/Chi2oNDF_lumiFlag_GenTk',
        'Tracking/TrackParameters/generalTracks/LSanalysis/NumberOfRecHitsPerTrack_lumiFlag_GenTk',
        'Tracking/TrackParameters/generalTracks/LSanalysis/NumberOfTracks_lumiFlag_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIPDxyToPV_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIPDzToPV_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/SIP3DToPV_GenTk',
        'Tracking/TrackParameters/generalTracks/HitProperties/NumberOfMissingOuterRecHitsPerTrack_GenTk',
        'Tracking/TrackParameters/generalTracks/HitProperties/NumberMORecHitsPerTrackVsPt_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/TrackEtaPhi_ImpactPoint_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/NumberOfTracks_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/HitProperties/NumberOfRecHitsPerTrack_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/TrackPt_ImpactPoint_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/Chi2oNDF_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/TrackPhi_ImpactPoint_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/TrackEta_ImpactPoint_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/HitProperties/NumberOfRecHitsPerTrack_Strip_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/HitProperties/NumberOfRecHitsPerTrack_Pixel_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/DistanceOfClosestApproachToBS_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/DistanceOfClosestApproachToBSdz_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/DistanceOfClosestApproachToBSVsPhi_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/DistanceOfClosestApproachToBSVsEta_GenTk',
        'Tracking/TrackParameters/highPurityTracks/pt_1/GeneralProperties/TrackQoverP_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/Quality_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/NumberofTracks_Hardvtx_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/NumberofTracks_PUvtx_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackPtHighpurity_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackPtTight_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackPtLoose_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackEtaHighpurity_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackEtaTight_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TrackEtaLoose_ImpactPoint_GenTk',
        'Tracking/PrimaryVertices/highPurityTracks/pt_0to1/offline/NumberOfGoodPVtx_offline',
        'Tracking/PrimaryVertices/highPurityTracks/pt_0to1/offline/GoodPVtxNumberOfTracks_offline',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/NumberofTracks_Hardvtx_PUvtx_GenTk',
        'Tracking/PrimaryVertices/highPurityTracks/pt_0to1/offline/FractionOfGoodPVtx_offline',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TkEtaPhi_Ratio_byFoldingmap_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TkEtaPhi_Ratio_byFoldingmap_op_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TkEtaPhi_RelativeDifference_byFoldingmap_ImpactPoint_GenTk',
        'Tracking/TrackParameters/generalTracks/GeneralProperties/TkEtaPhi_RelativeDifference_byFoldingmap_op_ImpactPoint_GenTk',
        'OfflinePV/offlinePrimaryVertices/tagVtxProb',
        'OfflinePV/offlinePrimaryVertices/tagType',
        'OfflinePV/Resolution/PV/pull_x',
        'OfflinePV/Resolution/PV/pull_y',
        'OfflinePV/Resolution/PV/pull_z',
        'OfflinePV/offlinePrimaryVertices/tagDiffX',
        'OfflinePV/offlinePrimaryVertices/tagDiffY',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_highPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_highPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_mediumPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_mediumPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_lowPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/CHFrac_lowPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_highPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_highPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_mediumPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_mediumPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_lowPt_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/ChMultiplicity_lowPt_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Constituents',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Eta',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Eta_uncor',
        'JetMET/Jet/Cleanedak4PFJetsCHS/JetEnergyCorr',
        'JetMET/Jet/Cleanedak4PFJetsCHS/NJets',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Phi_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsCHS/Pt',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/PtJetMET/Jet/Cleanedak4PFJetsPuppi/Phi',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/Phi_Barrel',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/Phi_EndCap',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/JetEnergyCorr',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/NJets',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/Eta',
        'JetMET/Jet/Cleanedak4PFJetsPuppi/Eta_uncor',
        'JetMET/MET/pfMETT1/Cleaned/METSig',
        'JetMET/vertices',
        'JetMET/HIJetValidation/akCs4PFJets/SumPFPt',
        'JetMET/HIJetValidation/akCs4PFJets/NJets',
        'JetMET/HIJetValidation/akCs4PFJets/NPFpart',
        'JetMET/HIJetValidation/akPu4CaloJets/SumCaloPt',
        'JetMET/HIJetValidation/akPu4CaloJets/NCalopart',
        'JetMET/HIJetValidation/akPu4CaloJets/NJets',
        'Muons/MuonRecoAnalyzer/GlbMuon_Glb_pt',
        'Muons/MuonRecoAnalyzer/GlbMuon_Glb_eta',
        'Muons/MuonRecoAnalyzer/GlbMuon_Glb_phi',
        'Muons/MuonRecoAnalyzer/Res_TkGlb_qOverlap',
        'Muons/diMuonHistograms/GlbGlbMuon_LM',
        'Muons/diMuonHistograms/GlbGlbMuon_HM',
        'Muons/Isolation/global/relPFIso_R03',
        'Muons/globalMuons/GeneralProperties/NumberOfMeanRecHitsPerTrack_glb',
        'Muons/standAloneMuonsUpdatedAtVtx/HitProperties/NumberOfValidRecHitsPerTrack_sta',
        'Muons/MuonRecoOneHLT/GlbMuon_Glb_pt',
        'Muons/MuonRecoOneHLT/GlbMuon_Glb_eta',
        'Egamma/Electrons/Ele5_TagAndProbe/ele0_vertexPt_barrel',
        'Egamma/Electrons/Ele5_TagAndProbe/ele1_vertexPt_endcaps',
        'Egamma/Electrons/Ele5_TagAndProbe/ele2_vertexEta',
        'Egamma/Electrons/Ele5_TagAndProbe/ele5_vertexZ',
        'Egamma/Electrons/Ele5_TagAndProbe/ele10_Eop_barrel',
        'Egamma/Electrons/Ele5_TagAndProbe/ele10_Eop_endcaps',
        'Egamma/Electrons/Ele5_TagAndProbe/ele101_etaEff',
        'Egamma/Electrons/Ele5_TagAndProbe/ele102_phiEff',
        'Egamma/Electrons/Ele5_TagAndProbe/ele201_mee_os'
     ) )
)

process.options = cms.untracked.PSet(
    IgnoreCompletely = cms.untracked.vstring(),
    Rethrow = cms.untracked.vstring(),
    TryToContinue = cms.untracked.vstring(),
    accelerators = cms.untracked.vstring('*'),
    allowUnscheduled = cms.obsolete.untracked.bool,
    canDeleteEarly = cms.untracked.vstring(),
    deleteNonConsumedUnscheduledModules = cms.untracked.bool(True),
    dumpOptions = cms.untracked.bool(False),
    emptyRunLumiMode = cms.obsolete.untracked.string,
    eventSetup = cms.untracked.PSet(
        forceNumberOfConcurrentIOVs = cms.untracked.PSet(
            allowAnyLabel_=cms.required.untracked.uint32
        ),
        numberOfConcurrentIOVs = cms.untracked.uint32(0)
    ),
    fileMode = cms.untracked.string('FULLMERGE'),
    forceEventSetupCacheClearOnNewRun = cms.untracked.bool(False),
    holdsReferencesToDeleteEarly = cms.untracked.VPSet(),
    makeTriggerResults = cms.obsolete.untracked.bool,
    modulesToCallForTryToContinue = cms.untracked.vstring(),
    modulesToIgnoreForDeleteEarly = cms.untracked.vstring(),
    numberOfConcurrentLuminosityBlocks = cms.untracked.uint32(0),
    numberOfConcurrentRuns = cms.untracked.uint32(1),
    numberOfStreams = cms.untracked.uint32(0),
    numberOfThreads = cms.untracked.uint32(1),
    printDependencies = cms.untracked.bool(False),
    sizeOfStackForThreadsInKB = cms.optional.untracked.uint32,
    throwIfIllegalParameter = cms.untracked.bool(True),
    wantSummary = cms.untracked.bool(False)
)

process.parameters_towers_2d = cms.PSet(
    binsEta = cms.vdouble(),
    binsPhi = cms.vdouble(),
    doNose = cms.bool(False),
    maxEta = cms.double(3.045),
    maxPhi = cms.double(3.141592653589793),
    minEta = cms.double(1.305),
    minPhi = cms.double(-3.141592653589793),
    moduleTowerMapping = cms.FileInPath('L1Trigger/L1THGCal/data/tower_per_module_silic8_scint16.txt'),
    nBinsEta = cms.int32(20),
    nBinsPhi = cms.int32(72),
    readMappingFile = cms.bool(False),
    splitModuleSum = cms.bool(True)
)

process.pileupVtxDigitizer = cms.PSet(
    accumulatorType = cms.string('PileupVertexAccumulator'),
    hitsProducer = cms.string('generator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    saveVtxTimes = cms.bool(False),
    vtxFallbackTag = cms.InputTag("generator"),
    vtxTag = cms.InputTag("generatorSmeared")
)

process.pixelDigitizer = cms.PSet(
    AdcFullScLateCR = cms.int32(255),
    AdcFullScale = cms.int32(255),
    AddNoise = cms.bool(True),
    AddNoisyPixels = cms.bool(True),
    AddPixelInefficiency = cms.bool(True),
    AddThresholdSmearing = cms.bool(True),
    Alpha2Order = cms.bool(True),
    BPix_SignalResponse_p0 = cms.double(0.00171),
    BPix_SignalResponse_p1 = cms.double(0.711),
    BPix_SignalResponse_p2 = cms.double(203.0),
    BPix_SignalResponse_p3 = cms.double(148.0),
    ChargeVCALSmearing = cms.bool(True),
    DeadModules_DB = cms.bool(True),
    DoPixelAging = cms.bool(False),
    ElectronPerAdc = cms.double(135.0),
    ElectronsPerVcal = cms.double(47),
    ElectronsPerVcal_L1 = cms.double(50),
    ElectronsPerVcal_L1_Offset = cms.double(-670),
    ElectronsPerVcal_Offset = cms.double(-60),
    FPix_SignalResponse_p0 = cms.double(0.00171),
    FPix_SignalResponse_p1 = cms.double(0.711),
    FPix_SignalResponse_p2 = cms.double(203.0),
    FPix_SignalResponse_p3 = cms.double(148.0),
    GainSmearing = cms.double(0.0),
    KillBadFEDChannels = cms.bool(True),
    LorentzAngle_DB = cms.bool(True),
    MissCalInLateCR = cms.bool(True),
    MissCalibrate = cms.bool(True),
    NoiseInElectrons = cms.double(175.0),
    NumPixelBarrel = cms.int32(4),
    NumPixelEndcap = cms.int32(3),
    OffsetSmearing = cms.double(0.0),
    PixGeometryType = cms.string('idealForDigi'),
    PrintClusters = cms.bool(False),
    PrintTemplates = cms.bool(False),
    ReadoutNoiseInElec = cms.double(350.0),
    RoutList = cms.vstring(
        'TrackerHitsPixelBarrelLowTof',
        'TrackerHitsPixelBarrelHighTof',
        'TrackerHitsPixelEndcapLowTof',
        'TrackerHitsPixelEndcapHighTof'
    ),
    SiPixelQualityLabel = cms.string('forDigitizer'),
    TanLorentzAnglePerTesla_BPix = cms.double(0.106),
    TanLorentzAnglePerTesla_FPix = cms.double(0.106),
    ThresholdInElectrons_BPix = cms.double(1600.0),
    ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
    ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
    ThresholdInElectrons_FPix = cms.double(1600.0),
    ThresholdSmearing_BPix = cms.double(245.0),
    ThresholdSmearing_BPix_L1 = cms.double(245.0),
    ThresholdSmearing_BPix_L2 = cms.double(245.0),
    ThresholdSmearing_FPix = cms.double(210.0),
    TofLowerCut = cms.double(-12.5),
    TofUpperCut = cms.double(12.5),
    UseReweighting = cms.bool(True),
    accumulatorType = cms.string('SiPixelDigitizer'),
    applyLateReweighting = cms.bool(False),
    deltaProductionCut = cms.double(0.03),
    hitsProducer = cms.string('g4SimHits'),
    killModules = cms.bool(True),
    makeDigiSimLinks = cms.untracked.bool(True),
    store_SimHitEntryExitPoints = cms.bool(False),
    useDB = cms.bool(False)
)

process.recoTrackAccumulator = cms.PSet(
    accumulatorType = cms.string('RecoTrackAccumulator'),
    makeDigiSimLinks = cms.untracked.bool(False),
    outputLabel = cms.string('generalTracks'),
    pileUpTracks = cms.InputTag("generalTracksBeforeMixing"),
    signalTracks = cms.InputTag("generalTracksBeforeMixing")
)

process.stage1truncation_proc = cms.PSet(
    ProcessorName = cms.string('HGCalBackendStage1Processor'),
    truncation_parameters = cms.PSet(
        AlgoName = cms.string('HGCalStage1TruncationWrapper'),
        doTruncation = cms.bool(True),
        maxTcsPerBin = cms.vuint32(
            2, 7, 27, 24, 19,
            17, 16, 15, 14, 14,
            13, 13, 13, 12, 12,
            12, 11, 11, 11, 10,
            10, 10, 10, 10, 9,
            9, 10, 9, 9, 9,
            8, 8, 7, 5, 3,
            3, 3, 3, 3, 3,
            3, 3
        ),
        phiSectorEdges = cms.vdouble(
            0.98901991, 0.72722052, 0.6981317, 0.87266463, 0.93084227,
            0.90175345, 0.87266463, 0.90175345, 0.95993109, 0.95993109,
            0.93084227, 0.93084227, 0.95993109, 0.98901991, 0.95993109,
            0.95993109, 0.95993109, 0.98901991, 0.98901991, 0.95993109,
            0.95993109, 0.98901991, 0.98901991, 0.98901991, 0.98901991,
            0.98901991, 1.01810873, 0.98901991, 0.98901991, 0.98901991,
            0.98901991, 0.98901991, 0.98901991, 0.98901991, 1.04719755,
            1.04719755, 1.04719755, 1.04719755, 1.01810873, 1.04719755,
            1.01810873, 1.01810873
        ),
        rozBins = cms.uint32(42),
        rozMax = cms.double(0.55508006),
        rozMin = cms.double(0.07587128)
    )
)

process.streams = cms.PSet(
    A = cms.vstring('InitialPD')
)

process.stripDigitizer = cms.PSet(
    APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
    APVSaturationFromHIP = cms.bool(False),
    APVSaturationProbScaling = cms.double(1.0),
    APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
    APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
    APVpeakmode = cms.bool(False),
    AppliedVoltage = cms.double(300.0),
    BaselineShift = cms.bool(True),
    ChargeDistributionRMS = cms.double(6.5e-10),
    ChargeMobility = cms.double(310.0),
    CommonModeNoise = cms.bool(True),
    CosmicDelayShift = cms.untracked.double(0.0),
    CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
    CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
    CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
    CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
    CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
    CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
    CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
    CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
    CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
    CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
    CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
    CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
    CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
    CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
    CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
    CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
    CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
    CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
    CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
    CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
    CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
    CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
    CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
    CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
    CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
    CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
    CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
    CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
    CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
    CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
    CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
    CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
    CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
    CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
    CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
    CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
    CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
    CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
    CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
    CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
    CouplingConstantsRunIIDecB = cms.bool(True),
    CouplingConstantsRunIIDecW = cms.bool(True),
    DeltaProductionCut = cms.double(0.120425),
    DepletionVoltage = cms.double(170.0),
    DigiModeList = cms.PSet(
        PRDigi = cms.string('ProcessedRaw'),
        SCDigi = cms.string('ScopeMode'),
        VRDigi = cms.string('VirginRaw'),
        ZSDigi = cms.string('ZeroSuppressed')
    ),
    FedAlgorithm = cms.int32(4),
    FedAlgorithm_PM = cms.int32(4),
    Gain = cms.string(''),
    GeometryType = cms.string('idealForDigi'),
    GevPerElectron = cms.double(3.61e-09),
    Inefficiency = cms.double(0.0),
    LandauFluctuations = cms.bool(True),
    LorentzAngle = cms.string(''),
    Noise = cms.bool(True),
    NoiseSigmaThreshold = cms.double(2.0),
    PedestalsOffset = cms.double(128),
    PreMixingMode = cms.bool(False),
    ROUList = cms.vstring(
        'TrackerHitsTIBLowTof',
        'TrackerHitsTIBHighTof',
        'TrackerHitsTIDLowTof',
        'TrackerHitsTIDHighTof',
        'TrackerHitsTOBLowTof',
        'TrackerHitsTOBHighTof',
        'TrackerHitsTECLowTof',
        'TrackerHitsTECHighTof'
    ),
    RealPedestals = cms.bool(True),
    SingleStripNoise = cms.bool(True),
    TOFCutForDeconvolution = cms.double(50.0),
    TOFCutForPeak = cms.double(100.0),
    Temperature = cms.double(273.0),
    TrackerConfigurationFromDB = cms.bool(False),
    ZeroSuppression = cms.bool(True),
    accumulatorType = cms.string('SiStripDigitizer'),
    apv_mVPerQ = cms.double(5.5),
    apv_maxResponse = cms.double(729),
    apv_rate = cms.double(66.2),
    apvfCPerElectron = cms.double(0.0001602),
    chargeDivisionsPerStrip = cms.int32(10),
    cmnRMStec = cms.double(2.44),
    cmnRMStib = cms.double(5.92),
    cmnRMStid = cms.double(3.08),
    cmnRMStob = cms.double(1.08),
    electronPerAdcDec = cms.double(247.0),
    electronPerAdcPeak = cms.double(262.0),
    fracOfEventsToSimAPV = cms.double(0.0),
    hitsProducer = cms.string('g4SimHits'),
    includeAPVSimulation = cms.bool(False),
    makeDigiSimLinks = cms.untracked.bool(True),
    noDiffusion = cms.bool(False)
)

process.summation_params = cms.PSet(
    noiseScintillator = cms.PSet(

    ),
    noiseSilicon = cms.PSet(

    ),
    noiseThreshold = cms.double(3),
    scintillatorCellLSB_MIP = cms.double(0.067138671875),
    siliconCellLSB_fC = cms.double(0.09765625)
)

process.superTCCompression_proc = cms.PSet(
    exponentBits = cms.uint32(4),
    mantissaBits = cms.uint32(5),
    rounding = cms.bool(True),
    truncationBits = cms.uint32(0)
)

process.supertc_conc_proc = cms.PSet(
    Method = cms.vstring(
        'superTriggerCellSelect',
        'superTriggerCellSelect',
        'superTriggerCellSelect'
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(False),
    coarseTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(False),
    stcSize = cms.vuint32(
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 4, 4,
        4, 4, 4, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16, 16, 16, 16,
        16, 16
    ),
    superTCCalibration_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCalibration_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    superTCCalibration_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    superTCCalibration_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    superTCCompression = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(5),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(0)
    ),
    type_energy_division = cms.string('superTriggerCell')
)

process.theDigitizers = cms.PSet(
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.73354, 0.64442, 0.58851, 0.55425,
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409
        ),
        EBCorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.70946, 0.58021, 0.49846, 0.45006,
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055
        ),
        EBCorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71073, 0.55721, 0.46089, 0.40449,
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481
        ),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.72698, 0.62048, 0.55691, 0.51848,
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265
        ),
        EECorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.71217, 0.47464, 0.34056, 0.26282,
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443
        ),
        EECorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71373, 0.44825, 0.30152, 0.21609,
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098
        ),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(
            1.48, -3.75, 1.81, 1.26, 2.0,
            45, 1.0
        ),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        componentAddToBarrel = cms.bool(False),
        componentDigiTag = cms.string('Component'),
        componentSeparateDigi = cms.bool(False),
        componentTimePhase = cms.double(0.0),
        componentTimeTag = cms.string('Component'),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timeDependent = cms.bool(False),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(
                0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                0.058939, 0.125497
            ),
            HFdepthOneParameterB = cms.vdouble(
                -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                0.000425, 0.000209
            ),
            HFdepthTwoParameterA = cms.vdouble(
                0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                0.051579, 0.086593
            ),
            HFdepthTwoParameterB = cms.vdouble(
                -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                0.000157, -3e-06
            )
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        doZDCDigi = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                125.44, 125.54, 125.32, 125.13, 124.46,
                125.01, 125.22, 125.48, 124.45, 125.9,
                125.83, 127.01, 126.82, 129.73, 131.83,
                143.52
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                210.55, 197.93, 186.12, 189.64, 189.63,
                190.28, 189.61, 189.6, 190.12, 191.22,
                190.9, 193.06, 188.42, 188.42
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(9.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(8.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(True),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
            )
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScLateCR = cms.int32(255),
        AdcFullScale = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        GainSmearing = cms.double(0.0),
        KillBadFEDChannels = cms.bool(True),
        LorentzAngle_DB = cms.bool(True),
        MissCalInLateCR = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        PrintClusters = cms.bool(False),
        PrintTemplates = cms.bool(False),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring(
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsPixelEndcapHighTof'
        ),
        SiPixelQualityLabel = cms.string('forDigitizer'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(1600.0),
        ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
        ThresholdInElectrons_FPix = cms.double(1600.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        UseReweighting = cms.bool(True),
        accumulatorType = cms.string('SiPixelDigitizer'),
        applyLateReweighting = cms.bool(False),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        store_SimHitEntryExitPoints = cms.bool(False),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
        APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
        CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
        CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
        CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
        CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
        CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
        CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
        CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
        CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
        CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
        CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
        CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
        CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
        CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
        CouplingConstantsRunIIDecB = cms.bool(True),
        CouplingConstantsRunIIDecW = cms.bool(True),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring(
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTOBLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTECHighTof'
        ),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        apv_mVPerQ = cms.double(5.5),
        apv_maxResponse = cms.double(729),
        apv_rate = cms.double(66.2),
        apvfCPerElectron = cms.double(0.0001602),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        fracOfEventsToSimAPV = cms.double(0.0),
        hitsProducer = cms.string('g4SimHits'),
        includeAPVSimulation = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theDigitizersValid = cms.PSet(
    ecal = cms.PSet(
        ConstantTerm = cms.double(0.003),
        EBCorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.73354, 0.64442, 0.58851, 0.55425,
            0.53082, 0.51916, 0.51097, 0.50732, 0.50409
        ),
        EBCorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.70946, 0.58021, 0.49846, 0.45006,
            0.41366, 0.39699, 0.38478, 0.37847, 0.37055
        ),
        EBCorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71073, 0.55721, 0.46089, 0.40449,
            0.35931, 0.33924, 0.32439, 0.31581, 0.30481
        ),
        EBdigiCollection = cms.string(''),
        EBs25notContainment = cms.double(0.9675),
        EECorrNoiseMatrixG01 = cms.vdouble(
            1.0, 0.72698, 0.62048, 0.55691, 0.51848,
            0.49147, 0.47813, 0.47007, 0.46621, 0.46265
        ),
        EECorrNoiseMatrixG06 = cms.vdouble(
            1.0, 0.71217, 0.47464, 0.34056, 0.26282,
            0.20287, 0.17734, 0.16256, 0.15618, 0.14443
        ),
        EECorrNoiseMatrixG12 = cms.vdouble(
            1.0, 0.71373, 0.44825, 0.30152, 0.21609,
            0.14786, 0.11772, 0.10165, 0.09465, 0.08098
        ),
        EEdigiCollection = cms.string(''),
        EEs25notContainment = cms.double(0.968),
        ESdigiCollection = cms.string(''),
        EcalPreMixStage1 = cms.bool(False),
        EcalPreMixStage2 = cms.bool(False),
        UseLCcorrection = cms.untracked.bool(True),
        accumulatorType = cms.string('EcalDigiProducer'),
        apdAddToBarrel = cms.bool(False),
        apdDigiTag = cms.string('APD'),
        apdDoPEStats = cms.bool(True),
        apdNonlParms = cms.vdouble(
            1.48, -3.75, 1.81, 1.26, 2.0,
            45, 1.0
        ),
        apdSeparateDigi = cms.bool(True),
        apdShapeTau = cms.double(40.5),
        apdShapeTstart = cms.double(74.5),
        apdSimToPEHigh = cms.double(88200000.0),
        apdSimToPELow = cms.double(2450000.0),
        apdTimeOffWidth = cms.double(0.8),
        apdTimeOffset = cms.double(-13.5),
        applyConstantTerm = cms.bool(True),
        binOfMaximum = cms.int32(6),
        componentAddToBarrel = cms.bool(False),
        componentDigiTag = cms.string('Component'),
        componentSeparateDigi = cms.bool(False),
        componentTimePhase = cms.double(0.0),
        componentTimeTag = cms.string('Component'),
        cosmicsPhase = cms.bool(False),
        cosmicsShift = cms.double(0.0),
        doEB = cms.bool(True),
        doEE = cms.bool(True),
        doENoise = cms.bool(True),
        doES = cms.bool(True),
        doESNoise = cms.bool(True),
        doFast = cms.bool(True),
        doPhotostatistics = cms.bool(True),
        hitsProducer = cms.string('g4SimHits'),
        makeDigiSimLinks = cms.untracked.bool(False),
        photoelectronsToAnalogBarrel = cms.double(0.000444444),
        photoelectronsToAnalogEndcap = cms.double(0.000555555),
        samplingFactor = cms.double(1.0),
        simHitToPhotoelectronsBarrel = cms.double(2250.0),
        simHitToPhotoelectronsEndcap = cms.double(1800.0),
        syncPhase = cms.bool(True),
        timeDependent = cms.bool(False),
        timePhase = cms.double(0.0)
    ),
    hcal = cms.PSet(
        DelivLuminosity = cms.double(0),
        HBDarkening = cms.bool(False),
        HEDarkening = cms.bool(False),
        HFDarkening = cms.bool(False),
        HFRecalParameterBlock = cms.PSet(
            HFdepthOneParameterA = cms.vdouble(
                0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                0.058939, 0.125497
            ),
            HFdepthOneParameterB = cms.vdouble(
                -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                0.000425, 0.000209
            ),
            HFdepthTwoParameterA = cms.vdouble(
                0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                0.051579, 0.086593
            ),
            HFdepthTwoParameterB = cms.vdouble(
                -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                0.000157, -3e-06
            )
        ),
        HcalPreMixStage1 = cms.bool(False),
        HcalPreMixStage2 = cms.bool(False),
        TestNumbering = cms.bool(True),
        accumulatorType = cms.string('HcalDigiProducer'),
        debugCaloSamples = cms.bool(False),
        doEmpty = cms.bool(True),
        doHFWindow = cms.bool(False),
        doIonFeedback = cms.bool(True),
        doNeutralDensityFilter = cms.bool(True),
        doNoise = cms.bool(True),
        doThermalNoise = cms.bool(True),
        doTimeSlew = cms.bool(True),
        doZDCDigi = cms.bool(True),
        hb = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                125.44, 125.54, 125.32, 125.13, 124.46,
                125.01, 125.22, 125.48, 124.45, 125.9,
                125.83, 127.01, 126.82, 129.73, 131.83,
                143.52
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        he = cms.PSet(
            binOfMaximum = cms.int32(6),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(True),
            firstRing = cms.int32(16),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                210.55, 197.93, 186.12, 189.64, 189.63,
                190.28, 189.61, 189.6, 190.12, 191.22,
                190.9, 193.06, 188.42, 188.42
            ),
            simHitToPhotoelectrons = cms.double(2000.0),
            sipmTau = cms.double(10.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(18.7),
            timePhase = cms.double(6.0),
            timeSmearing = cms.bool(True)
        ),
        hf1 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(2.79),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(9.0)
        ),
        hf2 = cms.PSet(
            binOfMaximum = cms.int32(2),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(3),
            samplingFactor = cms.double(0.37),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(3.0),
            timePhase = cms.double(8.0)
        ),
        hitsProducer = cms.string('g4SimHits'),
        ho = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(1),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoHamamatsu = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        hoZecotek = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            firstRing = cms.int32(1),
            readoutFrameSize = cms.int32(10),
            samplingFactors = cms.vdouble(
                231.0, 231.0, 231.0, 231.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0,
                360.0, 360.0, 360.0, 360.0, 360.0
            ),
            siPMCode = cms.int32(2),
            simHitToPhotoelectrons = cms.double(4000.0),
            sipmTau = cms.double(5.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(5.0),
            timeSmearing = cms.bool(False)
        ),
        ignoreGeantTime = cms.bool(False),
        injectTestHits = cms.bool(False),
        injectTestHitsCells = cms.vint32(),
        injectTestHitsEnergy = cms.vdouble(),
        injectTestHitsTime = cms.vdouble(),
        killHE = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(False),
        minFCToDelay = cms.double(5.0),
        zdc = cms.PSet(
            binOfMaximum = cms.int32(5),
            delayQIE = cms.int32(-999),
            doPhotoStatistics = cms.bool(True),
            doSiPMSmearing = cms.bool(False),
            photoelectronsToAnalog = cms.double(1.843),
            readoutFrameSize = cms.int32(10),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectrons = cms.double(6.0),
            sipmTau = cms.double(0.0),
            syncPhase = cms.bool(True),
            threshold_currentTDC = cms.double(-999.0),
            timePhase = cms.double(-4.0)
        )
    ),
    mergedtruth = cms.PSet(
        HepMCProductLabel = cms.InputTag("generatorSmeared"),
        accumulatorType = cms.string('TrackingTruthAccumulator'),
        allowDifferentSimHitProcesses = cms.bool(False),
        alwaysAddAncestors = cms.bool(True),
        createInitialVertexCollection = cms.bool(False),
        createMergedBremsstrahlung = cms.bool(True),
        createUnmergedCollection = cms.bool(True),
        genParticleCollection = cms.InputTag("genParticles"),
        ignoreTracksOutsideVolume = cms.bool(False),
        maximumPreviousBunchCrossing = cms.uint32(9999),
        maximumSubsequentBunchCrossing = cms.uint32(9999),
        removeDeadModules = cms.bool(False),
        select = cms.PSet(
            chargedOnlyTP = cms.bool(True),
            intimeOnlyTP = cms.bool(False),
            lipTP = cms.double(1000),
            maxRapidityTP = cms.double(5.0),
            minHitTP = cms.int32(0),
            minRapidityTP = cms.double(-5.0),
            pdgIdTP = cms.vint32(),
            ptMaxTP = cms.double(1e+100),
            ptMinTP = cms.double(0.1),
            signalOnlyTP = cms.bool(False),
            stableOnlyTP = cms.bool(False),
            tipTP = cms.double(1000)
        ),
        simHitCollections = cms.PSet(
            muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
            pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
            tracker = cms.VInputTag(
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
            )
        ),
        simTrackCollection = cms.InputTag("g4SimHits"),
        simVertexCollection = cms.InputTag("g4SimHits"),
        vertexDistanceCut = cms.double(0.003),
        volumeRadius = cms.double(120.0),
        volumeZ = cms.double(300.0)
    ),
    pixel = cms.PSet(
        AdcFullScLateCR = cms.int32(255),
        AdcFullScale = cms.int32(255),
        AddNoise = cms.bool(True),
        AddNoisyPixels = cms.bool(True),
        AddPixelInefficiency = cms.bool(True),
        AddThresholdSmearing = cms.bool(True),
        Alpha2Order = cms.bool(True),
        BPix_SignalResponse_p0 = cms.double(0.00171),
        BPix_SignalResponse_p1 = cms.double(0.711),
        BPix_SignalResponse_p2 = cms.double(203.0),
        BPix_SignalResponse_p3 = cms.double(148.0),
        ChargeVCALSmearing = cms.bool(True),
        DeadModules_DB = cms.bool(True),
        DoPixelAging = cms.bool(False),
        ElectronPerAdc = cms.double(135.0),
        ElectronsPerVcal = cms.double(47),
        ElectronsPerVcal_L1 = cms.double(50),
        ElectronsPerVcal_L1_Offset = cms.double(-670),
        ElectronsPerVcal_Offset = cms.double(-60),
        FPix_SignalResponse_p0 = cms.double(0.00171),
        FPix_SignalResponse_p1 = cms.double(0.711),
        FPix_SignalResponse_p2 = cms.double(203.0),
        FPix_SignalResponse_p3 = cms.double(148.0),
        GainSmearing = cms.double(0.0),
        KillBadFEDChannels = cms.bool(True),
        LorentzAngle_DB = cms.bool(True),
        MissCalInLateCR = cms.bool(True),
        MissCalibrate = cms.bool(True),
        NoiseInElectrons = cms.double(175.0),
        NumPixelBarrel = cms.int32(4),
        NumPixelEndcap = cms.int32(3),
        OffsetSmearing = cms.double(0.0),
        PixGeometryType = cms.string('idealForDigi'),
        PrintClusters = cms.bool(False),
        PrintTemplates = cms.bool(False),
        ReadoutNoiseInElec = cms.double(350.0),
        RoutList = cms.vstring(
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsPixelEndcapHighTof'
        ),
        SiPixelQualityLabel = cms.string('forDigitizer'),
        TanLorentzAnglePerTesla_BPix = cms.double(0.106),
        TanLorentzAnglePerTesla_FPix = cms.double(0.106),
        ThresholdInElectrons_BPix = cms.double(1600.0),
        ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
        ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
        ThresholdInElectrons_FPix = cms.double(1600.0),
        ThresholdSmearing_BPix = cms.double(245.0),
        ThresholdSmearing_BPix_L1 = cms.double(245.0),
        ThresholdSmearing_BPix_L2 = cms.double(245.0),
        ThresholdSmearing_FPix = cms.double(210.0),
        TofLowerCut = cms.double(-12.5),
        TofUpperCut = cms.double(12.5),
        UseReweighting = cms.bool(True),
        accumulatorType = cms.string('SiPixelDigitizer'),
        applyLateReweighting = cms.bool(False),
        deltaProductionCut = cms.double(0.03),
        hitsProducer = cms.string('g4SimHits'),
        killModules = cms.bool(True),
        makeDigiSimLinks = cms.untracked.bool(True),
        store_SimHitEntryExitPoints = cms.bool(False),
        useDB = cms.bool(False)
    ),
    puVtx = cms.PSet(
        accumulatorType = cms.string('PileupVertexAccumulator'),
        hitsProducer = cms.string('generator'),
        makeDigiSimLinks = cms.untracked.bool(False),
        saveVtxTimes = cms.bool(False),
        vtxFallbackTag = cms.InputTag("generator"),
        vtxTag = cms.InputTag("generatorSmeared")
    ),
    strip = cms.PSet(
        APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
        APVSaturationFromHIP = cms.bool(False),
        APVSaturationProbScaling = cms.double(1.0),
        APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
        APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
        APVpeakmode = cms.bool(False),
        AppliedVoltage = cms.double(300.0),
        BaselineShift = cms.bool(True),
        ChargeDistributionRMS = cms.double(6.5e-10),
        ChargeMobility = cms.double(310.0),
        CommonModeNoise = cms.bool(True),
        CosmicDelayShift = cms.untracked.double(0.0),
        CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
        CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
        CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
        CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
        CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
        CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
        CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
        CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
        CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
        CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
        CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
        CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
        CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
        CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
        CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
        CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
        CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
        CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
        CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
        CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
        CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
        CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
        CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
        CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
        CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
        CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
        CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
        CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
        CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
        CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
        CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
        CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
        CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
        CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
        CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
        CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
        CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
        CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
        CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
        CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
        CouplingConstantsRunIIDecB = cms.bool(True),
        CouplingConstantsRunIIDecW = cms.bool(True),
        DeltaProductionCut = cms.double(0.120425),
        DepletionVoltage = cms.double(170.0),
        DigiModeList = cms.PSet(
            PRDigi = cms.string('ProcessedRaw'),
            SCDigi = cms.string('ScopeMode'),
            VRDigi = cms.string('VirginRaw'),
            ZSDigi = cms.string('ZeroSuppressed')
        ),
        FedAlgorithm = cms.int32(4),
        FedAlgorithm_PM = cms.int32(4),
        Gain = cms.string(''),
        GeometryType = cms.string('idealForDigi'),
        GevPerElectron = cms.double(3.61e-09),
        Inefficiency = cms.double(0.0),
        LandauFluctuations = cms.bool(True),
        LorentzAngle = cms.string(''),
        Noise = cms.bool(True),
        NoiseSigmaThreshold = cms.double(2.0),
        PedestalsOffset = cms.double(128),
        PreMixingMode = cms.bool(False),
        ROUList = cms.vstring(
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTOBLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTECHighTof'
        ),
        RealPedestals = cms.bool(True),
        SingleStripNoise = cms.bool(True),
        TOFCutForDeconvolution = cms.double(50.0),
        TOFCutForPeak = cms.double(100.0),
        Temperature = cms.double(273.0),
        TrackerConfigurationFromDB = cms.bool(False),
        ZeroSuppression = cms.bool(True),
        accumulatorType = cms.string('SiStripDigitizer'),
        apv_mVPerQ = cms.double(5.5),
        apv_maxResponse = cms.double(729),
        apv_rate = cms.double(66.2),
        apvfCPerElectron = cms.double(0.0001602),
        chargeDivisionsPerStrip = cms.int32(10),
        cmnRMStec = cms.double(2.44),
        cmnRMStib = cms.double(5.92),
        cmnRMStid = cms.double(3.08),
        cmnRMStob = cms.double(1.08),
        electronPerAdcDec = cms.double(247.0),
        electronPerAdcPeak = cms.double(262.0),
        fracOfEventsToSimAPV = cms.double(0.0),
        hitsProducer = cms.string('g4SimHits'),
        includeAPVSimulation = cms.bool(False),
        makeDigiSimLinks = cms.untracked.bool(True),
        noDiffusion = cms.bool(False)
    )
)

process.theMixObjects = cms.PSet(
    mixCH = cms.PSet(
        crossingFrames = cms.untracked.vstring(),
        input = cms.VInputTag(
            cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"),
            cms.InputTag("g4SimHits","ZDCHITS")
        ),
        subdets = cms.vstring(
            'CastorFI',
            'EcalHitsEB',
            'EcalHitsEE',
            'EcalHitsES',
            'HcalHits',
            'ZDCHITS'
        ),
        type = cms.string('PCaloHit')
    ),
    mixHepMC = cms.PSet(
        input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
        makeCrossingFrame = cms.untracked.bool(True),
        type = cms.string('HepMCProduct')
    ),
    mixSH = cms.PSet(
        crossingFrames = cms.untracked.vstring(
            'MuonCSCHits',
            'MuonDTHits',
            'MuonRPCHits',
            'MuonGEMHits',
            'TotemHitsRP',
            'CTPPSPixelHits'
        ),
        input = cms.VInputTag(
            cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
            cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
            cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
            cms.InputTag("g4SimHits","MuonGEMHits"), cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","CTPPSPixelHits")
        ),
        pcrossingFrames = cms.untracked.vstring(),
        subdets = cms.vstring(
            'MuonCSCHits',
            'MuonDTHits',
            'MuonRPCHits',
            'TrackerHitsPixelBarrelHighTof',
            'TrackerHitsPixelBarrelLowTof',
            'TrackerHitsPixelEndcapHighTof',
            'TrackerHitsPixelEndcapLowTof',
            'TrackerHitsTECHighTof',
            'TrackerHitsTECLowTof',
            'TrackerHitsTIBHighTof',
            'TrackerHitsTIBLowTof',
            'TrackerHitsTIDHighTof',
            'TrackerHitsTIDLowTof',
            'TrackerHitsTOBHighTof',
            'TrackerHitsTOBLowTof',
            'MuonGEMHits',
            'TotemHitsRP',
            'CTPPSPixelHits'
        ),
        type = cms.string('PSimHit')
    ),
    mixTracks = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimTrack')
    ),
    mixVertices = cms.PSet(
        input = cms.VInputTag(cms.InputTag("g4SimHits")),
        makeCrossingFrame = cms.untracked.bool(False),
        type = cms.string('SimVertex')
    )
)

process.threshold_conc_proc = cms.PSet(
    Method = cms.vstring(
        'thresholdSelect',
        'thresholdSelect',
        'thresholdSelect'
    ),
    ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
    allTrigCellsInTrigSums = cms.bool(True),
    coarsenTriggerCells = cms.vuint32(0, 0, 0),
    ctcSize = cms.vuint32(
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2, 2, 2, 2,
        2, 2
    ),
    fixedDataSizePerHGCROC = cms.bool(False),
    threshold_scintillator = cms.double(2.0),
    threshold_silicon = cms.double(2.0)
)

process.tkEgAlgoParameters = cms.PSet(
    absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
    caloEtMin = cms.double(0.0),
    caloHwQual = cms.int32(4),
    compositeParametersTkEle = cms.PSet(
        loose_wp = cms.double(-0.181641),
        model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
        tight_wp = cms.double(0.0527344)
    ),
    dEtaMaxBrem = cms.double(0.02),
    dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
    dPhiMaxBrem = cms.double(0.1),
    dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
    doBremRecovery = cms.bool(False),
    doCompositeTkEle = cms.bool(False),
    doEndcapHwQual = cms.bool(False),
    doPfIso = cms.bool(True),
    doTkIso = cms.bool(True),
    filterHwQuality = cms.bool(False),
    hwIsoTypeTkEle = cms.uint32(0),
    hwIsoTypeTkEm = cms.uint32(0),
    nCompCandPerCluster = cms.uint32(3),
    nEMCALO_EGIN = cms.uint32(50),
    nEM_EGOUT = cms.uint32(50),
    nTRACK = cms.uint32(50),
    nTRACK_EGIN = cms.uint32(50),
    pfIsoParametersTkEle = cms.PSet(
        dRMax = cms.double(0.2),
        dRMin = cms.double(0.03),
        dZ = cms.double(0.6),
        tkQualityPtMin = cms.double(1.0)
    ),
    pfIsoParametersTkEm = cms.PSet(
        dRMax = cms.double(0.3),
        dRMin = cms.double(0.07),
        dZ = cms.double(0.6),
        tkQualityPtMin = cms.double(1.0)
    ),
    tkIsoParametersTkEle = cms.PSet(
        dRMax = cms.double(0.2),
        dRMin = cms.double(0.03),
        dZ = cms.double(0.6),
        tkQualityPtMin = cms.double(2.0)
    ),
    tkIsoParametersTkEm = cms.PSet(
        dRMax = cms.double(0.3),
        dRMin = cms.double(0.07),
        dZ = cms.double(0.6),
        tkQualityPtMin = cms.double(2.0)
    ),
    trkQualityPtMin = cms.double(10.0),
    writeBeforeBremRecovery = cms.bool(True),
    writeEGSta = cms.bool(False)
)

process.tkEgSorterParameters = cms.PSet(
    nObjSorted = cms.uint32(16),
    nObjToSort = cms.uint32(6)
)

process.topological_C2d_params = cms.PSet(
    applyLayerCalibration = cms.bool(True),
    calibSF_cluster = cms.double(1.0),
    clusterType = cms.string('NNC2d'),
    clustering_threshold_scintillator = cms.double(2.0),
    clustering_threshold_silicon = cms.double(2.0),
    layerWeights = cms.vdouble(
        0.0, 0.0183664, 0.0, 0.0305622, 0.0,
        0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
        0.0, 0.0185754, 0.0, 0.0204934, 0.0,
        0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
        0.0, 0.0238385, 0.0, 0.0301146, 0.0,
        0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
        0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
        0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
        0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
        0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
        0.121674, 0.1171, 0.328053
    ),
    seeding_threshold_scintillator = cms.double(5.0),
    seeding_threshold_silicon = cms.double(5.0)
)

process.tower = cms.PSet(
    ProcessorName = cms.string('HGCalTowerProcessor'),
    includeTrigCells = cms.bool(False),
    towermap_parameters = cms.PSet(
        AlgoName = cms.string('HGCalTowerMapsWrapper'),
        L1TTriggerTowerConfig = cms.PSet(
            binsEta = cms.vdouble(),
            binsPhi = cms.vdouble(),
            doNose = cms.bool(False),
            maxEta = cms.double(3.0),
            maxPhi = cms.double(3.141592653589793),
            minEta = cms.double(1.479),
            minPhi = cms.double(-3.141592653589793),
            nBinsEta = cms.int32(18),
            nBinsPhi = cms.int32(72),
            readMappingFile = cms.bool(False),
            splitModuleSum = cms.bool(False)
        ),
        layerWeights = cms.vdouble(),
        useLayerWeights = cms.bool(False)
    )
)

process.towerHFNose = cms.PSet(
    ProcessorName = cms.string('HGCalTowerProcessor'),
    includeTrigCells = cms.bool(False),
    towermap_parameters = cms.PSet(
        AlgoName = cms.string('HGCalTowerMapsWrapper'),
        L1TTriggerTowerConfig = cms.PSet(
            binsEta = cms.vdouble(),
            binsPhi = cms.vdouble(),
            doNose = cms.bool(True),
            maxEta = cms.double(4.2),
            maxPhi = cms.double(3.141592653589793),
            minEta = cms.double(3.0),
            minPhi = cms.double(-3.141592653589793),
            nBinsEta = cms.int32(18),
            nBinsPhi = cms.int32(72),
            readMappingFile = cms.bool(False),
            splitModuleSum = cms.bool(False)
        ),
        layerWeights = cms.vdouble(),
        useLayerWeights = cms.bool(False)
    )
)

process.towerHFNose_map = cms.PSet(
    ProcessorName = cms.string('HGCalTowerMapProcessor'),
    towermap_parameters = cms.PSet(
        AlgoName = cms.string('HGCalTowerMapsWrapper'),
        L1TTriggerTowerConfig = cms.PSet(
            binsEta = cms.vdouble(),
            binsPhi = cms.vdouble(),
            doNose = cms.bool(True),
            maxEta = cms.double(4.2),
            maxPhi = cms.double(3.141592653589793),
            minEta = cms.double(3.0),
            minPhi = cms.double(-3.141592653589793),
            nBinsEta = cms.int32(18),
            nBinsPhi = cms.int32(72),
            readMappingFile = cms.bool(False),
            splitModuleSum = cms.bool(False)
        ),
        layerWeights = cms.vdouble(),
        useLayerWeights = cms.bool(False)
    )
)

process.towerMap2DHFNose_parValues = cms.PSet(
    AlgoName = cms.string('HGCalTowerMapsWrapper'),
    L1TTriggerTowerConfig = cms.PSet(
        binsEta = cms.vdouble(),
        binsPhi = cms.vdouble(),
        doNose = cms.bool(True),
        maxEta = cms.double(4.2),
        maxPhi = cms.double(3.141592653589793),
        minEta = cms.double(3.0),
        minPhi = cms.double(-3.141592653589793),
        nBinsEta = cms.int32(18),
        nBinsPhi = cms.int32(72),
        readMappingFile = cms.bool(False),
        splitModuleSum = cms.bool(False)
    ),
    layerWeights = cms.vdouble(),
    useLayerWeights = cms.bool(False)
)

process.towerMap2D_parValues = cms.PSet(
    AlgoName = cms.string('HGCalTowerMapsWrapper'),
    L1TTriggerTowerConfig = cms.PSet(
        binsEta = cms.vdouble(),
        binsPhi = cms.vdouble(),
        doNose = cms.bool(False),
        maxEta = cms.double(3.0),
        maxPhi = cms.double(3.141592653589793),
        minEta = cms.double(1.479),
        minPhi = cms.double(-3.141592653589793),
        nBinsEta = cms.int32(18),
        nBinsPhi = cms.int32(72),
        readMappingFile = cms.bool(False),
        splitModuleSum = cms.bool(False)
    ),
    layerWeights = cms.vdouble(),
    useLayerWeights = cms.bool(False)
)

process.tower_map = cms.PSet(
    ProcessorName = cms.string('HGCalTowerMapProcessor'),
    towermap_parameters = cms.PSet(
        AlgoName = cms.string('HGCalTowerMapsWrapper'),
        L1TTriggerTowerConfig = cms.PSet(
            binsEta = cms.vdouble(),
            binsPhi = cms.vdouble(),
            doNose = cms.bool(False),
            maxEta = cms.double(3.0),
            maxPhi = cms.double(3.141592653589793),
            minEta = cms.double(1.479),
            minPhi = cms.double(-3.141592653589793),
            nBinsEta = cms.int32(18),
            nBinsPhi = cms.int32(72),
            readMappingFile = cms.bool(False),
            splitModuleSum = cms.bool(False)
        ),
        layerWeights = cms.vdouble(),
        useLayerWeights = cms.bool(False)
    )
)

process.tpScales = cms.PSet(
    HBHE = cms.PSet(
        LSBQIE11 = cms.double(0.0625),
        LSBQIE11Overlap = cms.double(0.0625),
        LSBQIE8 = cms.double(0.125)
    ),
    HF = cms.PSet(
        NCTShift = cms.int32(2),
        RCTShift = cms.int32(3)
    )
)

process.trackingParticles = cms.PSet(
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    accumulatorType = cms.string('TrackingTruthAccumulator'),
    allowDifferentSimHitProcesses = cms.bool(False),
    alwaysAddAncestors = cms.bool(True),
    createInitialVertexCollection = cms.bool(False),
    createMergedBremsstrahlung = cms.bool(True),
    createUnmergedCollection = cms.bool(True),
    genParticleCollection = cms.InputTag("genParticles"),
    ignoreTracksOutsideVolume = cms.bool(False),
    maximumPreviousBunchCrossing = cms.uint32(9999),
    maximumSubsequentBunchCrossing = cms.uint32(9999),
    removeDeadModules = cms.bool(False),
    select = cms.PSet(
        chargedOnlyTP = cms.bool(True),
        intimeOnlyTP = cms.bool(False),
        lipTP = cms.double(1000),
        maxRapidityTP = cms.double(5.0),
        minHitTP = cms.int32(0),
        minRapidityTP = cms.double(-5.0),
        pdgIdTP = cms.vint32(),
        ptMaxTP = cms.double(1e+100),
        ptMinTP = cms.double(0.1),
        signalOnlyTP = cms.bool(False),
        stableOnlyTP = cms.bool(False),
        tipTP = cms.double(1000)
    ),
    simHitCollections = cms.PSet(
        muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
        pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
        tracker = cms.VInputTag(
            cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
            cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
        )
    ),
    simTrackCollection = cms.InputTag("g4SimHits"),
    simVertexCollection = cms.InputTag("g4SimHits"),
    vertexDistanceCut = cms.double(0.003),
    volumeRadius = cms.double(120.0),
    volumeZ = cms.double(300.0)
)

process.trackingParticlesSelection = cms.PSet(
    chargedOnlyTP = cms.bool(True),
    intimeOnlyTP = cms.bool(False),
    lipTP = cms.double(1000),
    maxRapidityTP = cms.double(5.0),
    minHitTP = cms.int32(0),
    minRapidityTP = cms.double(-5.0),
    pdgIdTP = cms.vint32(),
    ptMaxTP = cms.double(1e+100),
    ptMinTP = cms.double(0.1),
    signalOnlyTP = cms.bool(False),
    stableOnlyTP = cms.bool(False),
    tipTP = cms.double(1000)
)

process.truncation_params = cms.PSet(
    doTruncation = cms.bool(True),
    maxTcsPerBin = cms.vuint32(
        2, 7, 27, 24, 19,
        17, 16, 15, 14, 14,
        13, 13, 13, 12, 12,
        12, 11, 11, 11, 10,
        10, 10, 10, 10, 9,
        9, 10, 9, 9, 9,
        8, 8, 7, 5, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    phiSectorEdges = cms.vdouble(
        0.98901991, 0.72722052, 0.6981317, 0.87266463, 0.93084227,
        0.90175345, 0.87266463, 0.90175345, 0.95993109, 0.95993109,
        0.93084227, 0.93084227, 0.95993109, 0.98901991, 0.95993109,
        0.95993109, 0.95993109, 0.98901991, 0.98901991, 0.95993109,
        0.95993109, 0.98901991, 0.98901991, 0.98901991, 0.98901991,
        0.98901991, 1.01810873, 0.98901991, 0.98901991, 0.98901991,
        0.98901991, 0.98901991, 0.98901991, 0.98901991, 1.04719755,
        1.04719755, 1.04719755, 1.04719755, 1.01810873, 1.04719755,
        1.01810873, 1.01810873
    ),
    rozBins = cms.uint32(42),
    rozMax = cms.double(0.55508006),
    rozMin = cms.double(0.07587128)
)

process.truncation_paramsSA = cms.PSet(
    AlgoName = cms.string('HGCalStage1TruncationWrapper'),
    doTruncation = cms.bool(True),
    maxTcsPerBin = cms.vuint32(
        2, 7, 27, 24, 19,
        17, 16, 15, 14, 14,
        13, 13, 13, 12, 12,
        12, 11, 11, 11, 10,
        10, 10, 10, 10, 9,
        9, 10, 9, 9, 9,
        8, 8, 7, 5, 3,
        3, 3, 3, 3, 3,
        3, 3
    ),
    phiSectorEdges = cms.vdouble(
        0.98901991, 0.72722052, 0.6981317, 0.87266463, 0.93084227,
        0.90175345, 0.87266463, 0.90175345, 0.95993109, 0.95993109,
        0.93084227, 0.93084227, 0.95993109, 0.98901991, 0.95993109,
        0.95993109, 0.95993109, 0.98901991, 0.98901991, 0.95993109,
        0.95993109, 0.98901991, 0.98901991, 0.98901991, 0.98901991,
        0.98901991, 1.01810873, 0.98901991, 0.98901991, 0.98901991,
        0.98901991, 0.98901991, 0.98901991, 0.98901991, 1.04719755,
        1.04719755, 1.04719755, 1.04719755, 1.01810873, 1.04719755,
        1.01810873, 1.01810873
    ),
    rozBins = cms.uint32(42),
    rozMax = cms.double(0.55508006),
    rozMin = cms.double(0.07587128)
)

process.vfe_proc = cms.PSet(
    ProcessorName = cms.string('HGCalVFEProcessorSums'),
    calibrationCfg_ee = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    calibrationCfg_hesc = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(
            values = cms.vdouble(1.0)
        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.0),
        lsb = cms.double(0.067138671875),
        thicknessCorrection = cms.vdouble(1.0)
    ),
    calibrationCfg_hesi = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0, 8.894541, 0, 21.875814, 0,
            21.875814, 0, 21.875814, 0, 21.875814,
            0, 21.865764, 0, 21.875814, 0,
            21.876338, 0, 21.876338, 0, 21.876338,
            0, 21.876338, 0, 21.876338, 0,
            21.876338, 0, 21.876338, 0, 83.906398,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
            69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
            87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
            86.92952
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
    ),
    calibrationCfg_nose = cms.PSet(
        chargeCollectionEfficiency = cms.PSet(

        ),
        dEdXweights = cms.vdouble(
            0.0, 39.500245, 39.756638, 39.756638, 39.756638,
            39.756638, 66.020266, 92.283895, 92.283895
        ),
        fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
        lsb = cms.double(0.09765625),
        thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
    ),
    compressionCfg_hdm = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(3)
    ),
    compressionCfg_ldm = cms.PSet(
        exponentBits = cms.uint32(4),
        mantissaBits = cms.uint32(3),
        rounding = cms.bool(True),
        truncationBits = cms.uint32(1)
    ),
    linearizationCfg_sc = cms.PSet(
        adcnBits = cms.uint32(10),
        adcsaturation = cms.double(68.75),
        linLSB = cms.double(0.067138671875),
        linnBits = cms.uint32(17),
        oot_coefficients = cms.vdouble(0.0, 0.0),
        tdcOnset = cms.double(55),
        tdcnBits = cms.uint32(12),
        tdcsaturation = cms.double(1000)
    ),
    linearizationCfg_si = cms.PSet(
        adcnBits = cms.uint32(10),
        adcsaturation = cms.double(100),
        linLSB = cms.double(0.09765625),
        linnBits = cms.uint32(17),
        oot_coefficients = cms.vdouble(0.0, 0.0),
        tdcOnset = cms.double(60),
        tdcnBits = cms.uint32(12),
        tdcsaturation = cms.double(10000)
    ),
    summationCfg = cms.PSet(
        noiseScintillator = cms.PSet(

        ),
        noiseSilicon = cms.PSet(

        ),
        noiseThreshold = cms.double(3),
        scintillatorCellLSB_MIP = cms.double(0.067138671875),
        siliconCellLSB_fC = cms.double(0.09765625)
    )
)

process.energy_interpretations = cms.VPSet(cms.PSet(
    dr_bylayer = cms.vdouble(
        0.015, 0.015, 0.015, 0.015, 0.015,
        0.015, 0.015, 0.015, 0.015, 0.015,
        0.015, 0.015, 0.015, 0.015, 0.015
    ),
    layer_containment_corrs = cms.vdouble(
        0.0, 0.0, 1.38, 0.97, 1.11,
        0.92, 1.06, 1.01, 1.06, 0.89,
        1.0, 1.06, 0.89, 1.62, 1.83
    ),
    scale_correction_coeff = cms.vdouble(53.94, -27.15),
    type = cms.string('HGCalTriggerClusterInterpretationEM')
))

process.CalibratedDigis = cms.EDProducer("CalibratedDigis",
    dtDigiTag = cms.InputTag("simMuonDTDigis"),
    flat_calib = cms.int32(0),
    scenario = cms.int32(0),
    tTrigMode = cms.string('DTTTrigSyncFromDB'),
    tTrigModeConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doT0Correction = cms.bool(True),
        doTOFCorrection = cms.bool(True),
        doWirePropCorrection = cms.bool(True),
        t0Label = cms.string(''),
        tTrigLabel = cms.string(''),
        tofCorrType = cms.int32(0),
        vPropWire = cms.double(24.4),
        wirePropCorrType = cms.int32(0)
    ),
    timeOffset = cms.int32(0)
)


process.L1BJetProducer = cms.EDProducer("L1BJetProducer",
    NNFileName = cms.FileInPath('L1Trigger/Phase2L1ParticleFlow/data/modelTT_PUP_Off_dXY_XYCut_Graph.pb'),
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    jets = cms.InputTag("scPFL1Puppi"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(10),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(20),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("L1VertexFinderEmulator","L1VerticesEmulation")
)


process.LHCTransport = cms.EDProducer("PPSSimTrackProducer",
    ApplyZShift = cms.bool(True),
    BeamEnergy = cms.double(7000),
    EtaCut = cms.double(8.2),
    HepMCProductLabel = cms.InputTag("generatorSmeared"),
    MomentumCut = cms.double(3000),
    PPSRegionStart_45 = cms.double(203),
    PPSRegionStart_56 = cms.double(203),
    TransportMethod = cms.string('OpticalFunctions'),
    Verbosity = cms.bool(False),
    defaultCrossingAngle = cms.double(0.0),
    empiricalAperture45_a_int = cms.double(42.8),
    empiricalAperture45_a_slp = cms.double(0.669),
    empiricalAperture45_xi0_int = cms.double(0.079),
    empiricalAperture45_xi0_slp = cms.double(0.0004211),
    empiricalAperture56_a_int = cms.double(-22.7),
    empiricalAperture56_a_slp = cms.double(1.6),
    empiricalAperture56_xi0_int = cms.double(0.074),
    empiricalAperture56_xi0_slp = cms.double(0.0006604),
    es_source = cms.PSet(
        opticalFunctions = cms.VPSet(
            cms.PSet(
                fileName = cms.FileInPath('CalibPPS/ESProducers/data/optical_functions/2021/version_pre3/110.444urad.root'),
                xangle = cms.double(110.444)
            ),
            cms.PSet(
                fileName = cms.FileInPath('CalibPPS/ESProducers/data/optical_functions/2021/version_pre3/184.017urad.root'),
                xangle = cms.double(184.017)
            )
        ),
        validityRange = cms.EventRange(0, 0, 1, 999999, 0, 0)
    ),
    lhcInfoLabel = cms.string(''),
    opticsLabel = cms.string(''),
    produceHitsRelativeToBeam = cms.bool(True),
    useBeamPositionFromLHCInfo = cms.bool(False),
    useEmpiricalApertures = cms.bool(False)
)


process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    Frequency = cms.untracked.int32(50),
    MEPathToSave = cms.untracked.string(''),
    Name = cms.untracked.string('MEtoEDMConverter'),
    Verbosity = cms.untracked.int32(0)
)


process.RPSiDetDigitizer = cms.EDProducer("RPDigiProducer",
    InputCollection = cms.string('g4SimHitsTotemHitsRP'),
    ROUList = cms.vstring('TotemHitsRP'),
    RPActiveEdgePosition = cms.double(0.034),
    RPActiveEdgeSmearing = cms.double(0.013),
    RPBottomEdgePosition = cms.double(1.5),
    RPBottomEdgeSmearing = cms.double(0.011),
    RPChargeDivisionsPerStrip = cms.int32(15),
    RPChargeDivisionsPerThickness = cms.int32(5),
    RPDeadStripProbability = cms.double(0.001),
    RPDeadStripSimulationOn = cms.bool(False),
    RPDeltaProductionCut = cms.double(0.120425),
    RPDigiSimHitRelationsPresistence = cms.bool(False),
    RPDisplacementOn = cms.bool(False),
    RPEquivalentNoiseCharge300um = cms.double(1000),
    RPGeVPerElectron = cms.double(3.61e-09),
    RPInterStripCoupling = cms.double(1),
    RPInterStripSmearing = cms.vdouble(0.011),
    RPLandauFluctuations = cms.bool(True),
    RPNoNoise = cms.bool(False),
    RPSharingSigmas = cms.double(5),
    RPTopEdgePosition = cms.double(1.5),
    RPTopEdgeSmearing = cms.double(0.011),
    RPVFATThreshold = cms.double(9000),
    RPVFATTriggerMode = cms.int32(2),
    RPVerbosity = cms.int32(0),
    mightGet = cms.optional.untracked.vstring,
    mixLabel = cms.string('mix')
)


process.RPixDetDigitizer = cms.EDProducer("CTPPSPixelDigiProducer",
    CTPPSPixelDigiSimHitRelationsPersistence = cms.bool(False),
    ChargeMapFile2E = cms.string('SimPPS/PPSPixelDigiProducer/data/PixelChargeMap.txt'),
    ChargeMapFile2E_2X = cms.string('SimPPS/PPSPixelDigiProducer/data/PixelChargeMap_2X.txt'),
    ChargeMapFile2E_2X2Y = cms.string('SimPPS/PPSPixelDigiProducer/data/PixelChargeMap_2X2Y.txt'),
    ChargeMapFile2E_2Y = cms.string('SimPPS/PPSPixelDigiProducer/data/PixelChargeMap_2Y.txt'),
    InputCollection = cms.string('g4SimHitsCTPPSPixelHits'),
    ROUList = cms.vstring('CTPPSPixelHits'),
    RPixChargeDivisions = cms.int32(20),
    RPixCoupling = cms.double(0.25),
    RPixDeadPixelProbability = cms.double(0.001),
    RPixDeadPixelSimulationOn = cms.bool(True),
    RPixDeltaProductionCut = cms.double(0.120425),
    RPixDummyROCElectronPerADC = cms.double(135),
    RPixDummyROCThreshold = cms.double(1900),
    RPixEquivalentNoiseCharge = cms.double(1000),
    RPixGeVPerElectron = cms.double(3.61e-09),
    RPixInterSmearing = cms.vdouble(0.011),
    RPixLandauFluctuations = cms.bool(True),
    RPixNoNoise = cms.bool(False),
    RPixVerbosity = cms.int32(0),
    VCaltoElectronGain = cms.int32(50),
    VCaltoElectronOffset = cms.int32(-411),
    doSingleCalibration = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    mixLabel = cms.string('mix')
)


process.SiStripDigiToRaw = cms.EDProducer("SiStripDigiToRawModule",
    CopyBufferHeader = cms.bool(False),
    FedReadoutMode = cms.string('ZERO_SUPPRESSED'),
    InputDigis = cms.InputTag("simSiStripDigis","ZeroSuppressed"),
    PacketCode = cms.string('ZERO_SUPPRESSED'),
    RawDataTag = cms.InputTag("rawDataCollector"),
    UseFedKey = cms.bool(False),
    UseWrongDigiType = cms.bool(False)
)


process.TOoLLiPProducer = cms.EDProducer("TOoLLiPProducer",
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    TOoLLiPVersion = cms.string('TOoLLiP_v1'),
    jets = cms.InputTag("scPFL1Puppi"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(10),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(20),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("L1VertexFinderEmulator","L1VerticesEmulation")
)


process.addPileupInfo = cms.EDProducer("PileupInformation",
    PileupMixingLabel = cms.InputTag("mix"),
    TrackingParticlesLabel = cms.InputTag("mergedtruth"),
    doTrackTruth = cms.untracked.bool(False),
    isPreMixed = cms.bool(False),
    pTcut_1 = cms.double(0.1),
    pTcut_2 = cms.double(0.5),
    saveVtxTimes = cms.bool(False),
    simHitLabel = cms.string('g4SimHits'),
    vertexDistanceCut = cms.double(0.003),
    volumeRadius = cms.double(1200.0),
    volumeZ = cms.double(3000.0)
)


process.ak1HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.1),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak2HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.2),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.3),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.ak8GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.bmtfStage2Raw = cms.EDProducer("L1TDigiToRaw",
    FWId = cms.uint32(2500002144),
    FedId = cms.int32(1376),
    InputLabel = cms.InputTag("simKBmtfDigis","BMTF"),
    InputLabel2 = cms.InputTag("simTwinMuxDigis"),
    Setup = cms.string('stage2::BMTFSetup')
)


process.caloLayer1RawFed1354 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1354),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloLayer1RawFed1356 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1356),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloLayer1RawFed1358 = cms.EDProducer("L1TDigiToRaw",
    CTP7 = cms.untracked.bool(True),
    FWId = cms.uint32(305419896),
    FedId = cms.int32(1358),
    Setup = cms.string('stage2::CaloLayer1Setup'),
    caloRegions = cms.InputTag("simCaloStage2Layer1Digis"),
    ecalDigis = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloStage1Raw = cms.EDProducer("L1TDigiToRaw",
    EmCandInputLabel = cms.InputTag("simRctDigis"),
    FWId = cms.uint32(1),
    FedId = cms.int32(1352),
    HFBitCountsInputLabel = cms.InputTag("simCaloStage1FinalDigis","HFBitCounts"),
    HFRingSumsInputLabel = cms.InputTag("simCaloStage1FinalDigis","HFRingSums"),
    InputLabel = cms.InputTag("simCaloStage1FinalDigis"),
    IsoTauInputLabel = cms.InputTag("simCaloStage1FinalDigis","isoTaus"),
    RegionInputLabel = cms.InputTag("simRctDigis"),
    Setup = cms.string('stage1::CaloSetup'),
    TauInputLabel = cms.InputTag("simCaloStage1FinalDigis","rlxTaus"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.caloStage2Raw = cms.EDProducer("L1TDigiToRaw",
    FWId = cms.uint32(1),
    FedId = cms.int32(1366),
    InputLabel = cms.InputTag("simCaloStage2Digis"),
    Setup = cms.string('stage2::CaloSetup'),
    TowerInputLabel = cms.InputTag("simCaloStage2Layer1Digis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.castorRawData = cms.EDProducer("CastorDigiToRaw",
    CASTOR = cms.InputTag("simCastorDigis"),
    CastorCtdc = cms.bool(False)
)


process.cscPackerDef = cms.EDProducer("CSCDigiToRawModule",
    alctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    alctWindowMax = cms.int32(3),
    alctWindowMin = cms.int32(-3),
    anodeALCTShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    anodeShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    cathodeShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    clctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    clctWindowMax = cms.int32(3),
    clctWindowMin = cms.int32(-3),
    comparatorDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    correlatedLCTDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    formatVersion = cms.uint32(2005),
    mightGet = cms.optional.untracked.vstring,
    packByCFEB = cms.bool(False),
    packEverything = cms.bool(False),
    padDigiClusterTag = cms.InputTag("simMuonGEMPadDigiClusters"),
    preTriggerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    preTriggerTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    preTriggerWindowMax = cms.int32(1),
    preTriggerWindowMin = cms.int32(-3),
    showerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    stripDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigi"),
    useCSCShowers = cms.bool(False),
    useGEMs = cms.bool(False),
    usePreTriggers = cms.bool(True),
    wireDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi")
)


process.cscTriggerPrimitiveDigis = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    GEMPadDigiClusterProducer = cms.InputTag("simMuonGEMPadDigiClusters"),
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    alctPhase1 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctPhase2 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    alctPhase2GEM = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctPhase1 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        useDeadTimeZoning = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    clctPhase2 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    clctPhase2GEM = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        enableAlctPhase2 = cms.bool(False),
        gangedME1a = cms.bool(False),
        run3 = cms.bool(True),
        runCCLUT_OTMB = cms.bool(True),
        runCCLUT_TMB = cms.bool(False),
        runME11ILT = cms.bool(True),
        runME11Up = cms.bool(True),
        runME21ILT = cms.bool(False),
        runME21Up = cms.bool(True),
        runME31Up = cms.bool(True),
        runME41Up = cms.bool(True),
        runPhase2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    copadParamGE11 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    copadParamGE21 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    debugParameters = cms.bool(True),
    keepALCTPreTriggers = cms.bool(False),
    keepCLCTPreTriggers = cms.bool(True),
    keepShowers = cms.bool(True),
    mpcParam = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        maxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    selectedChambers = cms.vstring(),
    showerParam = cms.PSet(
        anodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            showerNumTBins = cms.uint32(1),
            showerThresholds = cms.vuint32(
                140, 140, 140, 140, 140,
                140, 7, 14, 18, 23,
                56, 58, 12, 28, 32,
                21, 55, 57, 12, 26,
                34, 25, 62, 64, 12,
                27, 31
            )
        ),
        cathodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            peakCheck = cms.bool(False),
            showerNumTBins = cms.uint32(3),
            showerThresholds = cms.vuint32(
                100, 100, 100, 10000, 10000,
                10000, 10000, 10000, 10000, 14,
                33, 35, 10000, 10000, 10000,
                12, 31, 33, 10000, 10000,
                10000, 14, 34, 36, 10000,
                10000, 10000
            )
        ),
        source = cms.vuint32(
            3, 1, 1, 3, 1,
            3, 1, 3, 1
        )
    ),
    tmbPhase1 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2GE11 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    ),
    tmbPhase2GE21 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    )
)


process.cscpacker = cms.EDProducer("CSCDigiToRawModule",
    alctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    alctWindowMax = cms.int32(3),
    alctWindowMin = cms.int32(-3),
    anodeALCTShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    anodeShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    cathodeShowerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    clctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    clctWindowMax = cms.int32(3),
    clctWindowMin = cms.int32(-3),
    comparatorDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    correlatedLCTDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    formatVersion = cms.uint32(2020),
    mightGet = cms.optional.untracked.vstring,
    packByCFEB = cms.bool(False),
    packEverything = cms.bool(False),
    padDigiClusterTag = cms.InputTag("simMuonGEMPadDigiClusters"),
    preTriggerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    preTriggerTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    preTriggerWindowMax = cms.int32(1),
    preTriggerWindowMin = cms.int32(-3),
    showerDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    stripDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigi"),
    useCSCShowers = cms.bool(True),
    useGEMs = cms.bool(True),
    usePreTriggers = cms.bool(True),
    wireDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi")
)


process.csctfpacker = cms.EDProducer("CSCTFPacker",
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    activeSectors = cms.int32(4095),
    lctProducer = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    mbProducer = cms.InputTag("null"),
    nTBINs = cms.int32(7),
    outputFile = cms.string(''),
    putBufferToEvent = cms.bool(True),
    swapME1strips = cms.bool(False),
    trackProducer = cms.InputTag("simCsctfTrackDigis"),
    zeroSuppression = cms.bool(True)
)


process.ctppsPixelRawData = cms.EDProducer("CTPPSPixelDigiToRaw",
    InputLabel = cms.InputTag("RPixDetDigitizer"),
    isRun3 = cms.bool(True),
    mappingLabel = cms.string('RPix'),
    mightGet = cms.optional.untracked.vstring
)


process.ctppsTotemRawData = cms.EDProducer("CTPPSTotemDigiToRaw",
    InputLabel = cms.InputTag("RPSiDetDigitizer"),
    mightGet = cms.optional.untracked.vstring
)


process.dtTriggerPhase2PrimitiveDigis = cms.EDProducer("DTTrigPhase2Prod",
    HoughGrouping = cms.PSet(
        LowerNumber = cms.int32(4),
        MaxDistanceToWire = cms.double(0.03),
        UpperNumber = cms.int32(6),
        allowUncorrelatedPatterns = cms.bool(True),
        anglebinwidth = cms.double(1.0),
        angletan = cms.double(0.3),
        debug = cms.untracked.bool(False),
        maxdeltaAngDeg = cms.double(10),
        maxdeltaPos = cms.double(10),
        minNLayerHits = cms.int32(6),
        minSingleSLHitsMax = cms.int32(3),
        minSingleSLHitsMin = cms.int32(3),
        minUncorrelatedHits = cms.int32(3),
        posbinwidth = cms.double(2.1)
    ),
    PseudoBayesPattern = cms.PSet(
        allowDuplicates = cms.bool(False),
        allowUncorrelatedPatterns = cms.bool(True),
        allowedVariance = cms.int32(1),
        debug = cms.untracked.bool(False),
        maxPathsPerMatch = cms.int32(256),
        minNLayerHits = cms.int32(3),
        minSingleSLHitsMax = cms.int32(3),
        minSingleSLHitsMin = cms.int32(0),
        minUncorrelatedHits = cms.int32(3),
        pattern_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/PseudoBayesPatterns_uncorrelated_v0.root'),
        saveOnPlace = cms.bool(True),
        setLateralities = cms.bool(True)
    ),
    activateBuffer = cms.bool(False),
    algo = cms.int32(0),
    allow_confirmation = cms.bool(True),
    bx_window = cms.int32(1),
    chi2Th = cms.double(0.01),
    chi2corTh = cms.double(0.1),
    clean_chi2_correlation = cms.bool(True),
    co_option = cms.int32(1),
    co_quality = cms.int32(1),
    dBX_correlate_TP = cms.int32(0),
    dT0_correlate_TP = cms.double(25.0),
    dTanPsi_correlate_TP = cms.double(99999.0),
    debug = cms.untracked.bool(False),
    df_extended = cms.int32(0),
    digiTag = cms.InputTag("CalibratedDigis"),
    dump = cms.untracked.bool(False),
    global_coords_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/global_coord_perp_x_phi0.txt'),
    lut_2sl = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/fitterlut_2sl.dat'),
    lut_sl1 = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/fitterlut_sl1.dat'),
    lut_sl2 = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/fitterlut_slx.dat'),
    lut_sl3 = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/fitterlut_sl3.dat'),
    max_primitives = cms.int32(999),
    max_quality_to_overwrite_t0 = cms.int32(9),
    maxdrift_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/simple_vdrift.txt'),
    minHits4Fit = cms.int32(3),
    minx_match_2digis = cms.double(1.0),
    output_confirmed = cms.bool(False),
    output_latpredictor = cms.bool(False),
    output_matcher = cms.bool(False),
    output_mixer = cms.bool(False),
    output_slfilter = cms.bool(False),
    output_slfitter = cms.bool(False),
    phi_window = cms.double(50.0),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    scenario = cms.int32(0),
    shift_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/wire_rawId_x.txt'),
    shift_theta_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/theta_shift.txt'),
    splitPathPerSL = cms.bool(True),
    storeAllRPCHits = cms.bool(False),
    superCellspacewidth = cms.int32(20),
    superCelltimewidth = cms.double(400),
    tanPhiTh = cms.double(1.0),
    tanPhiThw0 = cms.double(0.5),
    tanPhiThw1max = cms.double(0.9),
    tanPhiThw1min = cms.double(0.2),
    tanPhiThw2max = cms.double(1.3),
    tanPhiThw2min = cms.double(0.5),
    ttrig_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/wire_rawId_ttrig.txt'),
    useBX_correlation = cms.bool(False),
    useRPC = cms.bool(False),
    z_filename = cms.FileInPath('L1Trigger/DTTriggerPhase2/data/wire_rawId_z.txt')
)


process.dtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    DTTFSectorNumbering = cms.bool(True),
    debug = cms.untracked.bool(False),
    digiTag = cms.InputTag("muonDTDigis"),
    lutBtic = cms.untracked.int32(31),
    lutDumpFlag = cms.untracked.bool(False)
)


process.dtpacker = cms.EDProducer("DTuROSDigiToRaw",
    debug = cms.untracked.bool(True),
    digiColl = cms.InputTag("simMuonDTDigis")
)


process.dttfpacker = cms.EDProducer("DTTFFEDSim",
    DTDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    DTTracks_Source = cms.InputTag("simDttfDigis","DTTF")
)


process.ecalPacker = cms.EDProducer("EcalDigiToRaw",
    DoBarrel = cms.untracked.bool(True),
    DoEndCap = cms.untracked.bool(True),
    InstanceEB = cms.string('ebDigis'),
    InstanceEE = cms.string('eeDigis'),
    Label = cms.string('simEcalDigis'),
    WriteSRFlags = cms.untracked.bool(True),
    WriteTCCBlock = cms.untracked.bool(True),
    WriteTowerBlock = cms.untracked.bool(True),
    debug = cms.untracked.bool(False),
    labelEBSRFlags = cms.InputTag("simEcalDigis","ebSrFlags"),
    labelEESRFlags = cms.InputTag("simEcalDigis","eeSrFlags"),
    labelTT = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    listDCCId = cms.untracked.vint32(
        1, 2, 3, 4, 5,
        6, 7, 8, 9, 10,
        11, 12, 13, 14, 15,
        16, 17, 18, 19, 20,
        21, 22, 23, 24, 25,
        26, 27, 28, 29, 30,
        31, 32, 33, 34, 35,
        36, 37, 38, 39, 40,
        41, 42, 43, 44, 45,
        46, 47, 48, 49, 50,
        51, 52, 53, 54
    )
)


process.esDigiToRaw = cms.EDProducer("ESDigiToRaw",
    InstanceES = cms.string(''),
    Label = cms.string('simEcalPreshowerDigis'),
    LookupTable = cms.untracked.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    debugMode = cms.untracked.bool(False)
)


process.gctDigiToRaw = cms.EDProducer("GctDigiToRaw",
    gctFedId = cms.int32(745),
    gctInputLabel = cms.InputTag("simGctDigis"),
    packRctCalo = cms.untracked.bool(True),
    packRctEm = cms.untracked.bool(True),
    rctInputLabel = cms.InputTag("simRctDigis"),
    verbose = cms.untracked.bool(False)
)


process.ge0TriggerConvertedPseudoDigis = cms.EDProducer("GE0TriggerPseudoProducer",
    DeltaPhiResolution = cms.untracked.double(0.25),
    ME0SegmentProducer = cms.InputTag("gemSegments"),
    info = cms.untracked.int32(0)
)


process.gemPacker = cms.EDProducer("GEMDigiToRawModule",
    eventType = cms.int32(0),
    gemDigi = cms.InputTag("simMuonGEMDigis"),
    maxBunch = cms.int32(4),
    mightGet = cms.optional.untracked.vstring,
    minBunch = cms.int32(-3),
    simulatePulseStretching = cms.bool(True),
    useDBEMap = cms.bool(True)
)


process.gemRecHits = cms.EDProducer("GEMRecHitProducer",
    applyMasking = cms.bool(False),
    deadFile = cms.optional.FileInPath,
    ge21Off = cms.bool(True),
    gemDigiLabel = cms.InputTag("muonGEMDigis"),
    maskFile = cms.optional.FileInPath,
    mightGet = cms.optional.untracked.vstring,
    recAlgo = cms.string('GEMRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.gemRecHitsDef = cms.EDProducer("GEMRecHitProducer",
    applyMasking = cms.bool(False),
    deadFile = cms.optional.FileInPath,
    ge21Off = cms.bool(False),
    gemDigiLabel = cms.InputTag("muonGEMDigis"),
    maskFile = cms.optional.FileInPath,
    mightGet = cms.optional.untracked.vstring,
    recAlgo = cms.string('GEMRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.gemSegments = cms.EDProducer("GEMSegmentProducer",
    algo_name = cms.string('GEMSegmentAlgorithm'),
    algo_pset = cms.PSet(
        GEMDebug = cms.untracked.bool(False),
        clusterOnlySameBXRecHits = cms.bool(True),
        dEtaChainBoxMax = cms.double(0.05),
        dPhiChainBoxMax = cms.double(0.02),
        dXclusBoxMax = cms.double(1),
        dYclusBoxMax = cms.double(5),
        maxRecHitsInCluster = cms.int32(4),
        minHitsPerSegment = cms.uint32(2),
        preClustering = cms.bool(True),
        preClusteringUseChaining = cms.bool(True)
    ),
    enableGE0 = cms.bool(True),
    enableGE12 = cms.bool(False),
    ge0_name = cms.string('GE0SegAlgoRU'),
    ge0_pset = cms.PSet(
        allowWideSegments = cms.bool(True),
        doCollisions = cms.bool(True),
        maxChi2Additional = cms.double(100),
        maxChi2GoodSeg = cms.double(50),
        maxChi2Prune = cms.double(50),
        maxETASeeds = cms.double(0.1),
        maxNumberOfHits = cms.uint32(300),
        maxNumberOfHitsPerLayer = cms.uint32(100),
        maxPhiAdditional = cms.double(0.001096605744),
        maxPhiSeeds = cms.double(0.001096605744),
        maxTOFDiff = cms.double(25),
        minNumberOfHits = cms.uint32(4),
        requireCentralBX = cms.bool(True)
    ),
    gemRecHitLabel = cms.InputTag("gemRecHits"),
    mightGet = cms.optional.untracked.vstring
)


process.genCandidatesForMET = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39, 12, 13, 14, 16
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genMetCalo = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetCalo'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(True),
    src = cms.InputTag("genCandidatesForMET"),
    usePt = cms.bool(True)
)


process.genMetCaloAndNonPrompt = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetCaloAndNonPrompt'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(True),
    src = cms.InputTag("genParticlesForJets"),
    usePt = cms.bool(True)
)


process.genMetIC5GenJets = cms.EDProducer("ElseMETProducer",
    InputType = cms.string('CandidateCollection'),
    METType = cms.string('MET'),
    alias = cms.string('genMetIC5GenJets'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    noHF = cms.bool(False),
    src = cms.InputTag("iterativeCone5GenJets"),
    usePt = cms.bool(True)
)


process.genMetTrue = cms.EDProducer("GenMETProducer",
    alias = cms.string('genMetTrue'),
    applyFiducialThresholdForFractions = cms.bool(False),
    globalThreshold = cms.double(0.0),
    onlyFiducialParticles = cms.bool(False),
    src = cms.InputTag("genParticlesForMETAllVisible"),
    usePt = cms.bool(True)
)


process.genPUProtons = cms.EDProducer("GenPUProtonProducer",
    bunchCrossingList = cms.vint32(0),
    minPz = cms.double(2400.0),
    mix = cms.string('mix')
)


process.genParticleCandidates = cms.EDProducer("FastGenParticleCandidateProducer",
    abortOnUnknownPDGCode = cms.untracked.bool(False),
    saveBarCodes = cms.untracked.bool(False),
    src = cms.InputTag("generatorSmeared")
)


process.genParticles = cms.EDProducer("GenParticleProducer",
    abortOnUnknownPDGCode = cms.untracked.bool(False),
    saveBarCodes = cms.untracked.bool(True),
    src = cms.InputTag("generatorSmeared")
)


process.genParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoMuNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39, 12, 13, 14, 16
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39, 12, 14, 16
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.genParticlesForMETAllVisible = cms.EDProducer("InputGenJetsParticleSelector",
    excludeFromResonancePids = cms.vuint32(),
    excludeResonances = cms.bool(False),
    ignoreParticleIDs = cms.vuint32(
        1000022, 1000012, 1000014, 1000016, 2000012,
        2000014, 2000016, 1000039, 5100039, 4000012,
        4000014, 4000016, 9900012, 9900014, 9900016,
        39, 12, 14, 16
    ),
    partonicFinalState = cms.bool(False),
    src = cms.InputTag("genParticles"),
    tausAsJets = cms.bool(False)
)


process.generatorSmeared = cms.EDProducer("GeneratorSmearedProducer",
    currentTag = cms.untracked.InputTag("VtxSmeared"),
    mightGet = cms.optional.untracked.vstring,
    previousTag = cms.untracked.InputTag("generator")
)


process.gmtFwdMuons = cms.EDProducer("Phase2L1TGMTFwdMuonTranslator",
    emtfTracks = cms.InputTag("simEmtfDigisPhase2"),
    omtfTracks = cms.InputTag("simOmtfPhase2Digis","OMTF"),
    stubs = cms.InputTag("gmtStubs","tps")
)


process.gmtKMTFMuons = cms.EDProducer("Phase2L1TGMTKMTFProducer",
    Ndisplaced = cms.uint32(12),
    Nprompt = cms.uint32(12),
    algo = cms.PSet(
        aPhi = cms.vdouble(5.6533349391874275, 0.03477876333443834, 0.032506522838098864, 0.024752809174909053),
        aPhiB = cms.vdouble(-2.02, -0.2994087741381382, -0.4033668521165302, -0.3592231728688621),
        aPhiBNLO = cms.vdouble(9.04133e-05, 0, 0, 0),
        bPhi = cms.vdouble(-1, 0.18245, 0.20898, 0.17286),
        bPhiB = cms.vdouble(-1, 1.18245, 1.20898, 1.17286),
        chiSquareCutDisp = cms.vint32(),
        chiSquareCutDispPattern = cms.vint32(),
        chiSquareCutOffDisp = cms.vint32(),
        chiSquareCutOffPrompt = cms.vint32(),
        chiSquareCutPrompt = cms.vint32(),
        chiSquareCutPromptPattern = cms.vint32(),
        chiSquareDisp1 = cms.vdouble(0.241, 0.575, 0.892),
        chiSquareDisp2 = cms.vdouble(0.347, 0.707),
        chiSquareDisp3 = cms.vdouble(0.336),
        chiSquareErrADisp1 = cms.vint32(21, 23, 45),
        chiSquareErrADisp2 = cms.vint32(14, 28),
        chiSquareErrADisp3 = cms.vint32(29),
        chiSquareErrAPrompt1 = cms.vint32(21, 24, 33),
        chiSquareErrAPrompt2 = cms.vint32(18, 14),
        chiSquareErrAPrompt3 = cms.vint32(21),
        chiSquareErrBDisp1 = cms.vdouble(0.54, 0.805, 0.74),
        chiSquareErrBDisp2 = cms.vdouble(0.73, 0.9450000000000001),
        chiSquareErrBDisp3 = cms.vdouble(0.5),
        chiSquareErrBPrompt1 = cms.vdouble(0.045, 0.08, 0.06),
        chiSquareErrBPrompt2 = cms.vdouble(0.065, 0.275),
        chiSquareErrBPrompt3 = cms.vdouble(0.05),
        chiSquarePrompt1 = cms.vdouble(-0.323, -0.508, -0.578),
        chiSquarePrompt2 = cms.vdouble(-0.228, -0.343),
        chiSquarePrompt3 = cms.vdouble(-0.1),
        combos1 = cms.vint32(),
        combos2 = cms.vint32(3),
        combos3 = cms.vint32(5, 6, 7),
        combos4 = cms.vint32(
            9, 10, 11, 12, 13,
            14, 15
        ),
        curvResolution1 = cms.vdouble(1, 2360.97, 873.003, 258138.0),
        curvResolution2 = cms.vdouble(1, 4.903692, 48.7941, 0),
        eLoss = cms.vdouble(6.77765e-05, 0, 0, 0),
        etaLUT0 = cms.vdouble(8.946, 7.508, 6.279, 6.399),
        etaLUT1 = cms.vdouble(0.159, 0.116, 0.088, 0.128),
        initialK = cms.vdouble(-0.4576229536749278, -0.6364802777566145, -1.0305030909883524, -1.7272067322624118),
        initialK2 = cms.vdouble(-6.442002637356136e-05, -9.582709649965545e-05, -0.0002741064246218815, -0.0014910074450869175),
        lutFile = cms.string('L1Trigger/Phase2L1GMT/data/packedGainLUTs.root'),
        mScatteringPhi = cms.vdouble(0.1169021113298598, 0.00016777763395543814, 0.0004322078772344548, 0.00024985881710722107),
        mScatteringPhiB = cms.vdouble(0.0522762, 0.01762000062188365, 0.03508319015441297, 0.03126825551530328),
        phiAt2 = cms.double(0.17917991867483288),
        pointResolutionPhi = cms.double(1.0),
        pointResolutionPhiB = cms.double(12493.7429036),
        pointResolutionPhiBH = cms.vdouble(19925.62953113343, 15583.06791339368, 10258.11768352221, 15462.112839170433),
        pointResolutionPhiBL = cms.vdouble(161519.85395846734, 155051.58394241595, 149693.88179343447, 174896.46766622085),
        pointResolutionVertex = cms.double(1.0),
        useOfflineAlgo = cms.bool(False),
        verbose = cms.bool(False)
    ),
    stubs = cms.InputTag("gmtStubs","kmtf"),
    verbose = cms.int32(0)
)


process.gmtSAMuons = cms.EDProducer("Phase2L1TGMTSAMuonGhostCleaner",
    barrelDisp = cms.InputTag("gmtKMTFMuons","displaced"),
    barrelPrompt = cms.InputTag("gmtKMTFMuons","prompt"),
    forwardDisp = cms.InputTag("gmtFwdMuons","displaced"),
    forwardPrompt = cms.InputTag("gmtFwdMuons","prompt")
)


process.gmtStage2Raw = cms.EDProducer("L1TDigiToRaw",
    BMTFInputLabel = cms.InputTag("simKBmtfDigis","BMTF"),
    EMTFInputLabel = cms.InputTag("simEmtfDigis","EMTF"),
    EMTFShowerInputLabel = cms.InputTag("simEmtfShowers","EMTF"),
    FWId = cms.uint32(134283264),
    FedId = cms.int32(1402),
    ImdInputLabelBMTF = cms.InputTag("simGmtStage2Digis","imdMuonsBMTF"),
    ImdInputLabelEMTFNeg = cms.InputTag("simGmtStage2Digis","imdMuonsEMTFNeg"),
    ImdInputLabelEMTFPos = cms.InputTag("simGmtStage2Digis","imdMuonsEMTFPos"),
    ImdInputLabelOMTFNeg = cms.InputTag("simGmtStage2Digis","imdMuonsOMTFNeg"),
    ImdInputLabelOMTFPos = cms.InputTag("simGmtStage2Digis","imdMuonsOMTFPos"),
    InputLabel = cms.InputTag("simGmtStage2Digis"),
    OMTFInputLabel = cms.InputTag("simOmtfDigis","OMTF"),
    Setup = cms.string('stage2::GMTSetup'),
    ShowerInputLabel = cms.InputTag("simGmtShowerDigis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.gmtStubs = cms.EDProducer("Phase2L1TGMTStubProducer",
    Barrel = cms.PSet(
        coarseEta_1 = cms.vint32(0, 23, 41),
        coarseEta_2 = cms.vint32(0, 20, 36),
        coarseEta_3 = cms.vint32(0, 17, 31),
        coarseEta_4 = cms.vint32(0, 14, 27),
        etaLSB = cms.double(0.024586688),
        eta_1 = cms.vint32(
            -46, -45, -43, -41, -39,
            -37, -35, -30, -28, -26,
            -23, -20, -18, -15, -9,
            -6, -3, -1, 1, 3,
            6, 9, 15, 18, 20,
            23, 26, 28, 30, 35,
            37, 39, 41, 43, 45,
            1503
        ),
        eta_2 = cms.vint32(
            -41, -39, -38, -36, -34,
            -32, -30, -26, -24, -22,
            -20, -18, -15, -13, -8,
            -5, -3, -1, 1, 3,
            5, 8, 13, 15, 18,
            20, 22, 24, 26, 30,
            32, 34, 36, 38, 39,
            1334
        ),
        eta_3 = cms.vint32(
            -35, -34, -32, -31, -29,
            -27, -26, -22, -20, -19,
            -17, -15, -13, -11, -6,
            -4, -2, -1, 1, 2,
            4, 6, 11, 13, 15,
            17, 19, 20, 22, 26,
            27, 29, 31, 32, 34,
            1148
        ),
        maxBX = cms.int32(0),
        minBX = cms.int32(0),
        minPhiQuality = cms.int32(0),
        minThetaQuality = cms.int32(0),
        phiBDivider = cms.int32(1),
        phiLSB = cms.double(2.396845e-05),
        phiOffset = cms.vint32(0, 0, 0, 0),
        verbose = cms.int32(0)
    ),
    Endcap = cms.PSet(
        coord1LSB = cms.double(0.00613281248),
        coord2LSB = cms.double(0.00613281248),
        eta1LSB = cms.double(0.024586688),
        eta2LSB = cms.double(0.024586688),
        etaMatch = cms.double(0.1),
        maxBX = cms.int32(0),
        minBX = cms.int32(0),
        phiMatch = cms.double(0.05),
        verbose = cms.uint32(0)
    ),
    srcCSC = cms.InputTag("simCscTriggerPrimitiveDigis"),
    srcDT = cms.InputTag("dtTriggerPhase2PrimitiveDigis"),
    srcDTTheta = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcRPC = cms.InputTag("simMuonRPCDigis"),
    verbose = cms.int32(0)
)


process.gmtTkMuons = cms.EDProducer("Phase2L1TGMTTkMuonProducer",
    isolation = cms.PSet(
        AbsIsoThresholdL = cms.int32(160),
        AbsIsoThresholdM = cms.int32(120),
        AbsIsoThresholdT = cms.int32(80),
        IsodumpForHLS = cms.int32(0),
        RelIsoThresholdL = cms.double(0.1),
        RelIsoThresholdM = cms.double(0.05),
        RelIsoThresholdT = cms.double(0.01),
        verbose = cms.int32(0)
    ),
    minTrackStubs = cms.int32(4),
    muonBXMax = cms.int32(0),
    muonBXMin = cms.int32(0),
    srcStubs = cms.InputTag("gmtStubs","tps"),
    srcTracks = cms.InputTag("l1tTTTracksFromTrackletEmulation","Level1TTTracks"),
    tauto3mu = cms.PSet(

    ),
    trackConverter = cms.PSet(
        verbose = cms.int32(0)
    ),
    trackMatching = cms.PSet(
        verbose = cms.int32(0)
    ),
    verbose = cms.int32(0)
)


process.gtStage2Raw = cms.EDProducer("L1TDigiToRaw",
    CICADAScoreInputTag = cms.InputTag("simCaloStage2Layer1Summary","CICADAScore"),
    EGammaInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumZDCInputTag = cms.InputTag("l1tZDCEtSums"),
    ExtInputTag = cms.InputTag("simGtExtFakeStage2Digis"),
    FWId = cms.uint32(4432),
    FedId = cms.int32(1404),
    GtInputTag = cms.InputTag("simGtStage2Digis"),
    JetInputTag = cms.InputTag("simCaloStage2Digis"),
    MuonInputTag = cms.InputTag("simGmtStage2Digis"),
    Setup = cms.string('stage2::GTSetup'),
    ShowerInputLabel = cms.InputTag("simGmtShowerDigis"),
    TauInputTag = cms.InputTag("simCaloStage2Digis"),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.hcalRawDataVME = cms.EDProducer("HcalDigiToRaw",
    HBHE = cms.untracked.InputTag(""),
    HF = cms.untracked.InputTag(""),
    HO = cms.untracked.InputTag("simHcalDigis"),
    TRIG = cms.untracked.InputTag(""),
    ZDC = cms.untracked.InputTag("simHcalUnsuppressedDigis")
)


process.hcalRawDatauHTR = cms.EDProducer("HcalDigiToRawuHTR",
    ElectronicsMap = cms.string(''),
    HBHEqie8 = cms.InputTag("simHcalDigis"),
    HFqie8 = cms.InputTag("simHcalDigis"),
    QIE10 = cms.InputTag("simHcalDigis","HFQIE10DigiCollection"),
    QIE11 = cms.InputTag("simHcalDigis","HBHEQIE11DigiCollection"),
    TP = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    Verbosity = cms.untracked.int32(0),
    mightGet = cms.optional.untracked.vstring,
    packHBTDC = cms.bool(True),
    premix = cms.bool(False),
    tdc1 = cms.vint32(
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12, 12,
        12, 12, 12, 12
    ),
    tdc2 = cms.vint32(
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14, 14,
        14, 14, 14, 14
    )
)


process.heavyIon = cms.EDProducer("GenHIEventProducer",
    src = cms.InputTag("mix","generatorSmeared")
)


process.hltFEDSelector = cms.EDProducer("EvFFEDSelector",
    fedList = cms.vuint32(1023, 1024),
    inputTag = cms.InputTag("rawDataCollector")
)


process.hltGtStage2Digis = cms.EDProducer("L1TRawToDigi",
    CTP7 = cms.untracked.bool(False),
    DmxFWId = cms.uint32(0),
    FWId = cms.uint32(0),
    FWOverride = cms.bool(False),
    FedIds = cms.vint32(1404),
    InputLabel = cms.InputTag("rawDataCollector"),
    MTF7 = cms.untracked.bool(False),
    MinFeds = cms.uint32(0),
    Setup = cms.string('stage2::GTSetup'),
    TMTCheck = cms.bool(True),
    debug = cms.untracked.bool(False),
    lenAMC13Header = cms.untracked.int32(8),
    lenAMC13Trailer = cms.untracked.int32(8),
    lenAMCHeader = cms.untracked.int32(8),
    lenAMCTrailer = cms.untracked.int32(0),
    lenSlinkHeader = cms.untracked.int32(8),
    lenSlinkTrailer = cms.untracked.int32(8)
)


process.hltGtStage2ObjectMap = cms.EDProducer("L1TGlobalProducer",
    AlgoBlkInputTag = cms.InputTag("hltGtStage2Digis"),
    AlgorithmTriggersUnmasked = cms.bool(True),
    AlgorithmTriggersUnprescaled = cms.bool(True),
    AlternativeNrBxBoardDaq = cms.uint32(0),
    BstLengthBytes = cms.int32(-1),
    CICADAInputTag = cms.InputTag(""),
    EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    EmulateBxInEvent = cms.int32(1),
    EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    EtSumZdcInputTag = cms.InputTag("hltGtStage2Digis","EtSumZDC"),
    ExtInputTag = cms.InputTag("hltGtStage2Digis"),
    GetPrescaleColumnFromData = cms.bool(False),
    JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1DataBxInEvent = cms.int32(5),
    MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    MuonShowerInputTag = cms.InputTag("hltGtStage2Digis","MuonShower"),
    PrescaleSet = cms.uint32(1),
    PrintL1Menu = cms.untracked.bool(False),
    ProduceL1GtDaqRecord = cms.bool(True),
    ProduceL1GtObjectMapRecord = cms.bool(True),
    RequireMenuToMatchAlgoBlkInput = cms.bool(True),
    TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    TriggerMenuLuminosity = cms.string('startup'),
    Verbosity = cms.untracked.int32(0),
    produceAXOL1TLScore = cms.bool(False),
    resetPSCountersEachLumiSec = cms.bool(True),
    semiRandomInitialPSCounters = cms.bool(False),
    useMuonShowers = cms.bool(True)
)


process.hltOnlineBeamSpot = cms.EDProducer("BeamSpotOnlineProducer",
    beamMode = cms.untracked.uint32(11),
    changeToCMSCoordinates = cms.bool(False),
    gtEvmLabel = cms.InputTag(""),
    maxRadius = cms.double(2.0),
    maxZ = cms.double(40.0),
    setSigmaZ = cms.double(0.0),
    src = cms.InputTag("hltScalersRawToDigi"),
    useTransientRecord = cms.bool(False)
)


process.hltScalersRawToDigi = cms.EDProducer("ScalersRawToDigi",
    scalersInputTag = cms.InputTag("rawDataCollector")
)


process.hltTriggerSummaryAOD = cms.EDProducer("TriggerSummaryProducerAOD",
    moduleLabelPatternsToMatch = cms.vstring('hlt*'),
    moduleLabelPatternsToSkip = cms.vstring(),
    processName = cms.string('@'),
    throw = cms.bool(False)
)


process.hltTriggerSummaryRAW = cms.EDProducer("TriggerSummaryProducerRAW",
    processName = cms.string('@')
)


process.iterativeCone5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('IterativeCone'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.iterativeCone7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('IterativeCone'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.kt4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.kt6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.0),
    Rho_EtaMax = cms.double(4.5),
    applyWeight = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("genParticlesForJets"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True)
)


process.l1GtEvmPack = cms.EDProducer("L1GTEvmDigiToRaw",
    ActiveBoardsMask = cms.uint32(65535),
    EvmGtFedId = cms.untracked.int32(812),
    EvmGtInputTag = cms.InputTag("simGtDigis")
)


process.l1GtPack = cms.EDProducer("L1GTDigiToRaw",
    ActiveBoardsMask = cms.uint32(65535),
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("simGtDigis"),
    MuGmtInputTag = cms.InputTag("simGmtDigis")
)


process.l1SeedConePFJetEmulatorProducer = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer1","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1SeedConePFJetProducer = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(False),
    L1PFObjects = cms.InputTag("l1tLayer1","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tBJetProducerPuppi = cms.EDProducer("L1BJetProducer",
    NNFileName = cms.FileInPath('L1Trigger/Phase2L1ParticleFlow/data/modelTT_PUP_Off_dXY_XYCut_Graph.pb'),
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    jets = cms.InputTag("l1tSC4PFL1PuppiExtended"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(6),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(10),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tBJetProducerPuppiCorrectedEmulator = cms.EDProducer("L1BJetProducer",
    NNFileName = cms.FileInPath('L1Trigger/Phase2L1ParticleFlow/data/modelTT_PUP_Off_dXY_XYCut_Graph.pb'),
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    jets = cms.InputTag("l1tSC4PFL1PuppiExtendedCorrectedEmulator"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(6),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(10),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tCaloJet = cms.EDProducer("L1CaloJetProducer",
    EcalTpEtMin = cms.double(0.5),
    EtMinForCollection = cms.double(10),
    EtMinForSeedHit = cms.double(2.5),
    EtMinForTauCollection = cms.double(10),
    HFTpEtMin = cms.double(0.5),
    HGCalEmTpEtMin = cms.double(0.5),
    HGCalHadTpEtMin = cms.double(0.5),
    HcalTpEtMin = cms.double(0.5),
    L1CrystalClustersInputTag = cms.InputTag("l1tEGammaClusterEmuProducer"),
    absEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    absEtaBinsHF = cms.vdouble(3.0, 3.6, 6.0),
    absEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    debug = cms.bool(False),
    emFractionBinsBarrel = cms.vdouble(
        0.0, 0.31, 0.4, 0.47, 0.53,
        0.58, 0.63, 0.69, 0.76, 0.84,
        1.05
    ),
    emFractionBinsHF = cms.vdouble(0.0, 1.05),
    emFractionBinsHGCal = cms.vdouble(0.0, 0.55, 0.67, 0.77, 1.05),
    jetCalibrationsBarrel = cms.vdouble( (
        1.64, 1.626, 1.617, 1.608, 1.599,
        1.591, 1.583, 1.574, 1.566, 1.559,
        1.551, 1.54, 1.525, 1.512, 1.498,
        1.486, 1.474, 1.462, 1.451, 1.441,
        1.431, 1.421, 1.412, 1.404, 1.396,
        1.385, 1.372, 1.36, 1.35, 1.341,
        1.334, 1.329, 1.325, 1.322, 1.32,
        1.32, 1.325, 1.336, 1.352, 1.373,
        1.428, 1.553, 1.855, 1.839, 1.829,
        1.819, 1.809, 1.8, 1.79, 1.781,
        1.771, 1.762, 1.753, 1.74, 1.723,
        1.706, 1.69, 1.674, 1.659, 1.645,
        1.631, 1.617, 1.604, 1.591, 1.579,
        1.568, 1.556, 1.54, 1.52, 1.501,
        1.484, 1.469, 1.454, 1.441, 1.43,
        1.419, 1.41, 1.396, 1.382, 1.374,
        1.37, 1.372, 1.386, 1.443, 1.993,
        1.978, 1.967, 1.957, 1.947, 1.937,
        1.927, 1.918, 1.908, 1.898, 1.889,
        1.875, 1.857, 1.839, 1.822, 1.805,
        1.789, 1.773, 1.757, 1.742, 1.727,
        1.713, 1.699, 1.685, 1.672, 1.653,
        1.629, 1.606, 1.584, 1.564, 1.545,
        1.527, 1.511, 1.495, 1.481, 1.459,
        1.434, 1.414, 1.4, 1.392, 1.391,
        1.431, 2.155, 2.135, 2.123, 2.11,
        2.097, 2.085, 2.073, 2.061, 2.049,
        2.037, 2.026, 2.009, 1.987, 1.965,
        1.944, 1.924, 1.905, 1.885, 1.867,
        1.849, 1.832, 1.815, 1.798, 1.783,
        1.767, 1.745, 1.717, 1.691, 1.666,
        1.643, 1.622, 1.602, 1.583, 1.566,
        1.55, 1.525, 1.495, 1.47, 1.451,
        1.437, 1.422, 1.424, 2.305, 2.284,
        2.271, 2.257, 2.244, 2.231, 2.218,
        2.205, 2.193, 2.18, 2.168, 2.15,
        2.126, 2.103, 2.081, 2.059, 2.037,
        2.017, 1.996, 1.976, 1.957, 1.938,
        1.92, 1.902, 1.884, 1.859, 1.827,
        1.797, 1.768, 1.741, 1.715, 1.691,
        1.668, 1.647, 1.627, 1.595, 1.556,
        1.523, 1.497, 1.477, 1.451, 1.446,
        2.555, 2.528, 2.51, 2.492, 2.474,
        2.457, 2.44, 2.423, 2.406, 2.39,
        2.373, 2.349, 2.318, 2.288, 2.258,
        2.229, 2.201, 2.174, 2.148, 2.122,
        2.097, 2.072, 2.049, 2.026, 2.004,
        1.971, 1.93, 1.892, 1.856, 1.822,
        1.79, 1.761, 1.733, 1.707, 1.683,
        1.645, 1.6, 1.563, 1.535, 1.515,
        1.493, 1.505, 2.85, 2.815, 2.792,
        2.77, 2.747, 2.725, 2.703, 2.682,
        2.661, 2.64, 2.619, 2.589, 2.549,
        2.511, 2.473, 2.437, 2.401, 2.367,
        2.334, 2.301, 2.27, 2.239, 2.209,
        2.181, 2.153, 2.112, 2.062, 2.014,
        1.969, 1.927, 1.888, 1.852, 1.818,
        1.787, 1.758, 1.712, 1.658, 1.616,
        1.585, 1.563, 1.544, 1.576, 3.386,
        3.325, 3.286, 3.248, 3.21, 3.174,
        3.138, 3.103, 3.069, 3.036, 3.004,
        2.956, 2.896, 2.838, 2.783, 2.73,
        2.68, 2.632, 2.586, 2.543, 2.501,
        2.461, 2.423, 2.387, 2.352, 2.303,
        2.242, 2.187, 2.136, 2.09, 2.047,
        2.008, 1.973, 1.94, 1.91, 1.863,
        1.806, 1.76, 1.721, 1.688, 1.636,
        1.572, 4.45, 4.344, 4.276, 4.21,
        4.146, 4.083, 4.022, 3.962, 3.904,
        3.847, 3.792, 3.712, 3.61, 3.513,
        3.42, 3.333, 3.25, 3.171, 3.096,
        3.025, 2.958, 2.894, 2.833, 2.776,
        2.721, 2.645, 2.552, 2.468, 2.393,
        2.325, 2.265, 2.21, 2.162, 2.118,
        2.079, 2.021, 1.956, 1.908, 1.873,
        1.849, 1.822, 1.818, 6.912, 6.764,
        6.667, 6.571, 6.477, 6.384, 6.293,
        6.203, 6.114, 6.027, 5.941, 5.814,
        5.65, 5.491, 5.336, 5.187, 5.042,
        4.903, 4.767, 4.637, 4.511, 4.389,
        4.272, 4.159, 4.05, 3.894, 3.7,
        3.522, 3.359, 3.21, 3.076, 2.954,
        2.846, 2.75, 2.667, 2.549, 2.438,
        2.39, 2.4, 2.463, 2.731, 3.577,
        1.536, 1.527, 1.521, 1.515, 1.509,
        1.503, 1.497, 1.491, 1.486, 1.48,
        1.475, 1.467, 1.457, 1.447, 1.437,
        1.428, 1.419, 1.411, 1.403, 1.395,
        1.388, 1.38, 1.374, 1.367, 1.361,
        1.353, 1.342, 1.333, 1.325, 1.319,
        1.313, 1.309, 1.305, 1.303, 1.302,
        1.302, 1.307, 1.317, 1.333, 1.354,
        1.409, 1.544, 1.74, 1.73, 1.723,
        1.716, 1.709, 1.702, 1.696, 1.689,
        1.683, 1.676, 1.67, 1.661, 1.648,
        1.636, 1.624, 1.613, 1.602, 1.59,
        1.58, 1.569, 1.559, 1.549, 1.539,
        1.53, 1.521, 1.507, 1.49, 1.474,
        1.459, 1.445, 1.432, 1.42, 1.409,
        1.399, 1.389, 1.375, 1.36, 1.35,
        1.345, 1.346, 1.363, 1.439, 1.869,
        1.858, 1.851, 1.843, 1.836, 1.829,
        1.822, 1.815, 1.808, 1.801, 1.795,
        1.785, 1.771, 1.758, 1.746, 1.733,
        1.721, 1.709, 1.697, 1.686, 1.674,
        1.663, 1.652, 1.642, 1.631, 1.616,
        1.597, 1.578, 1.56, 1.543, 1.527,
        1.512, 1.498, 1.485, 1.472, 1.452,
        1.427, 1.408, 1.393, 1.383, 1.377,
        1.407, 2.01, 1.997, 1.988, 1.98,
        1.971, 1.963, 1.954, 1.946, 1.938,
        1.93, 1.922, 1.91, 1.894, 1.879,
        1.864, 1.849, 1.834, 1.82, 1.806,
        1.792, 1.779, 1.766, 1.753, 1.74,
        1.728, 1.709, 1.686, 1.664, 1.642,
        1.622, 1.603, 1.584, 1.567, 1.55,
        1.534, 1.509, 1.478, 1.451, 1.43,
        1.414, 1.396, 1.407, 2.171, 2.155,
        2.144, 2.134, 2.123, 2.113, 2.103,
        2.093, 2.083, 2.073, 2.063, 2.049,
        2.03, 2.012, 1.994, 1.976, 1.959,
        1.942, 1.925, 1.909, 1.893, 1.877,
        1.862, 1.847, 1.833, 1.812, 1.785,
        1.759, 1.734, 1.71, 1.688, 1.667,
        1.646, 1.627, 1.609, 1.579, 1.542,
        1.509, 1.482, 1.459, 1.426, 1.401,
        2.366, 2.345, 2.332, 2.319, 2.306,
        2.293, 2.28, 2.268, 2.255, 2.243,
        2.231, 2.213, 2.189, 2.166, 2.144,
        2.122, 2.1, 2.079, 2.058, 2.038,
        2.018, 1.999, 1.98, 1.962, 1.944,
        1.918, 1.884, 1.853, 1.822, 1.794,
        1.766, 1.741, 1.716, 1.693, 1.671,
        1.636, 1.591, 1.554, 1.522, 1.497,
        1.461, 1.441, 2.68, 2.647, 2.626,
        2.605, 2.584, 2.564, 2.544, 2.525,
        2.506, 2.487, 2.469, 2.442, 2.407,
        2.373, 2.34, 2.309, 2.278, 2.249,
        2.221, 2.193, 2.167, 2.142, 2.117,
        2.093, 2.07, 2.038, 1.996, 1.958,
        1.922, 1.888, 1.857, 1.828, 1.801,
        1.775, 1.751, 1.713, 1.666, 1.626,
        1.592, 1.563, 1.516, 1.459, 3.093,
        3.051, 3.023, 2.995, 2.969, 2.942,
        2.916, 2.89, 2.865, 2.84, 2.816,
        2.78, 2.733, 2.688, 2.644, 2.602,
        2.561, 2.522, 2.484, 2.447, 2.411,
        2.376, 2.343, 2.311, 2.28, 2.235,
        2.178, 2.126, 2.077, 2.031, 1.988,
        1.949, 1.912, 1.878, 1.846, 1.796,
        1.735, 1.685, 1.646, 1.614, 1.571,
        1.543, 4.08, 3.996, 3.941, 3.888,
        3.836, 3.785, 3.735, 3.686, 3.638,
        3.591, 3.546, 3.479, 3.393, 3.312,
        3.233, 3.159, 3.087, 3.019, 2.953,
        2.891, 2.831, 2.774, 2.72, 2.668,
        2.618, 2.548, 2.462, 2.383, 2.312,
        2.247, 2.188, 2.134, 2.086, 2.042,
        2.003, 1.943, 1.875, 1.825, 1.788,
        1.763, 1.738, 1.747, 6.659, 6.494,
        6.387, 6.282, 6.179, 6.078, 5.978,
        5.881, 5.785, 5.691, 5.599, 5.463,
        5.289, 5.122, 4.961, 4.806, 4.657,
        4.514, 4.378, 4.246, 4.121, 4.001,
        3.886, 3.776, 3.671, 3.522, 3.341,
        3.177, 3.03, 2.899, 2.783, 2.682,
        2.594, 2.519, 2.456, 2.373, 2.311,
        2.307, 2.355, 2.447, 2.743, 3.536,
        1.519, 1.512, 1.507, 1.502, 1.498,
        1.493, 1.488, 1.484, 1.479, 1.475,
        1.471, 1.464, 1.456, 1.448, 1.44,
        1.433, 1.425, 1.418, 1.412, 1.405,
        1.399, 1.393, 1.387, 1.381, 1.376,
        1.369, 1.359, 1.351, 1.344, 1.337,
        1.332, 1.327, 1.323, 1.32, 1.318,
        1.317, 1.319, 1.326, 1.339, 1.356,
        1.404, 1.53, 1.719, 1.71, 1.705,
        1.699, 1.693, 1.688, 1.682, 1.677,
        1.671, 1.666, 1.661, 1.653, 1.642,
        1.632, 1.622, 1.613, 1.603, 1.594,
        1.584, 1.575, 1.567, 1.558, 1.55,
        1.541, 1.533, 1.522, 1.507, 1.492,
        1.479, 1.466, 1.454, 1.443, 1.432,
        1.422, 1.413, 1.399, 1.382, 1.369,
        1.361, 1.356, 1.359, 1.401, 1.86,
        1.851, 1.844, 1.838, 1.832, 1.826,
        1.82, 1.814, 1.808, 1.802, 1.796,
        1.787, 1.775, 1.764, 1.753, 1.742,
        1.731, 1.72, 1.71, 1.699, 1.689,
        1.679, 1.669, 1.66, 1.65, 1.636,
        1.618, 1.601, 1.584, 1.568, 1.553,
        1.538, 1.524, 1.511, 1.498, 1.478,
        1.451, 1.428, 1.41, 1.394, 1.374,
        1.373, 1.993, 1.982, 1.974, 1.967,
        1.96, 1.953, 1.946, 1.938, 1.931,
        1.924, 1.917, 1.907, 1.894, 1.88,
        1.867, 1.854, 1.841, 1.828, 1.816,
        1.804, 1.792, 1.78, 1.768, 1.757,
        1.746, 1.729, 1.708, 1.687, 1.667,
        1.648, 1.629, 1.612, 1.595, 1.578,
        1.563, 1.537, 1.504, 1.475, 1.451,
        1.43, 1.402, 1.388, 2.146, 2.131,
        2.122, 2.113, 2.104, 2.095, 2.086,
        2.077, 2.068, 2.059, 2.051, 2.038,
        2.021, 2.004, 1.988, 1.972, 1.957,
        1.941, 1.926, 1.911, 1.897, 1.883,
        1.869, 1.855, 1.842, 1.822, 1.797,
        1.773, 1.749, 1.727, 1.706, 1.685,
        1.665, 1.647, 1.629, 1.599, 1.561,
        1.527, 1.497, 1.472, 1.431, 1.389,
        2.336, 2.319, 2.307, 2.296, 2.285,
        2.273, 2.262, 2.251, 2.24, 2.23,
        2.219, 2.203, 2.182, 2.162, 2.142,
        2.122, 2.103, 2.084, 2.065, 2.047,
        2.029, 2.012, 1.994, 1.978, 1.961,
        1.937, 1.906, 1.876, 1.848, 1.82,
        1.794, 1.769, 1.745, 1.722, 1.7,
        1.665, 1.618, 1.578, 1.543, 1.512,
        1.465, 1.42, 2.594, 2.571, 2.556,
        2.541, 2.526, 2.511, 2.497, 2.482,
        2.468, 2.453, 2.439, 2.419, 2.391,
        2.364, 2.338, 2.312, 2.287, 2.262,
        2.238, 2.214, 2.191, 2.168, 2.146,
        2.124, 2.103, 2.072, 2.032, 1.993,
        1.957, 1.922, 1.889, 1.857, 1.827,
        1.799, 1.772, 1.728, 1.672, 1.625,
        1.585, 1.552, 1.507, 1.482, 3.016,
        2.982, 2.959, 2.937, 2.915, 2.893,
        2.872, 2.851, 2.83, 2.809, 2.788,
        2.758, 2.718, 2.679, 2.641, 2.604,
        2.568, 2.533, 2.499, 2.465, 2.432,
        2.4, 2.369, 2.339, 2.309, 2.266,
        2.211, 2.16, 2.111, 2.064, 2.02,
        1.979, 1.94, 1.904, 1.87, 1.815,
        1.749, 1.694, 1.651, 1.618, 1.58,
        1.59, 4.054, 3.966, 3.909, 3.854,
        3.8, 3.747, 3.696, 3.646, 3.597,
        3.549, 3.503, 3.435, 3.348, 3.266,
        3.187, 3.112, 3.041, 2.974, 2.909,
        2.848, 2.79, 2.734, 2.681, 2.631,
        2.583, 2.516, 2.434, 2.36, 2.292,
        2.232, 2.178, 2.128, 2.084, 2.045,
        2.009, 1.955, 1.895, 1.85, 1.817,
        1.794, 1.769, 1.766, 6.752, 6.57,
        6.452, 6.337, 6.224, 6.113, 6.004,
        5.898, 5.795, 5.693, 5.594, 5.449,
        5.263, 5.085, 4.915, 4.752, 4.597,
        4.449, 4.308, 4.173, 4.045, 3.923,
        3.808, 3.697, 3.593, 3.446, 3.269,
        3.11, 2.969, 2.846, 2.738, 2.644,
        2.564, 2.497, 2.442, 2.372, 2.323,
        2.327, 2.374, 2.459, 2.718, 3.371,
        1.615, 1.605, 1.599, 1.593, 1.587,
        1.581, 1.575, 1.57, 1.564, 1.558,
        1.553, 1.545, 1.534, 1.524, 1.514,
        1.504, 1.494, 1.485, 1.476, 1.468,
        1.46, 1.452, 1.444, 1.437, 1.429,
        1.419, 1.407, 1.395, 1.385, 1.375,
        1.367, 1.36, 1.353, 1.348, 1.344,
        1.339, 1.336, 1.34, 1.349, 1.364,
        1.41, 1.537, 1.867, 1.856, 1.849,
        1.841, 1.834, 1.827, 1.82, 1.813,
        1.806, 1.799, 1.792, 1.782, 1.768,
        1.755, 1.742, 1.73, 1.718, 1.705,
        1.694, 1.682, 1.671, 1.66, 1.649,
        1.638, 1.628, 1.613, 1.594, 1.575,
        1.558, 1.542, 1.526, 1.512, 1.498,
        1.485, 1.474, 1.455, 1.433, 1.417,
        1.406, 1.401, 1.404, 1.458, 2.037,
        2.025, 2.017, 2.009, 2.001, 1.993,
        1.985, 1.977, 1.97, 1.962, 1.954,
        1.943, 1.928, 1.914, 1.899, 1.885,
        1.871, 1.858, 1.844, 1.831, 1.818,
        1.805, 1.793, 1.781, 1.769, 1.751,
        1.728, 1.707, 1.686, 1.666, 1.647,
        1.629, 1.612, 1.596, 1.58, 1.555,
        1.524, 1.498, 1.477, 1.462, 1.445,
        1.461, 2.206, 2.192, 2.183, 2.174,
        2.165, 2.156, 2.148, 2.139, 2.13,
        2.122, 2.113, 2.101, 2.084, 2.068,
        2.052, 2.037, 2.021, 2.006, 1.992,
        1.977, 1.963, 1.949, 1.935, 1.922,
        1.908, 1.889, 1.864, 1.84, 1.817,
        1.795, 1.773, 1.753, 1.733, 1.714,
        1.696, 1.666, 1.628, 1.593, 1.562,
        1.536, 1.492, 1.444, 2.401, 2.385,
        2.375, 2.365, 2.355, 2.346, 2.336,
        2.326, 2.317, 2.307, 2.298, 2.284,
        2.265, 2.247, 2.229, 2.212, 2.195,
        2.178, 2.161, 2.144, 2.128, 2.112,
        2.097, 2.081, 2.066, 2.044, 2.015,
        1.988, 1.961, 1.935, 1.91, 1.886,
        1.862, 1.84, 1.818, 1.782, 1.735,
        1.692, 1.653, 1.618, 1.559, 1.487,
        2.637, 2.62, 2.609, 2.599, 2.588,
        2.577, 2.567, 2.556, 2.546, 2.536,
        2.525, 2.51, 2.49, 2.47, 2.451,
        2.432, 2.413, 2.394, 2.376, 2.357,
        2.339, 2.322, 2.304, 2.287, 2.27,
        2.245, 2.213, 2.182, 2.151, 2.122,
        2.093, 2.065, 2.038, 2.012, 1.986,
        1.944, 1.887, 1.835, 1.787, 1.742,
        1.665, 1.561, 2.952, 2.935, 2.924,
        2.913, 2.902, 2.891, 2.879, 2.868,
        2.858, 2.847, 2.836, 2.82, 2.798,
        2.777, 2.756, 2.736, 2.715, 2.695,
        2.675, 2.655, 2.635, 2.616, 2.597,
        2.578, 2.559, 2.531, 2.495, 2.459,
        2.424, 2.39, 2.357, 2.325, 2.293,
        2.262, 2.233, 2.182, 2.114, 2.05,
        1.992, 1.938, 1.844, 1.721, 3.403,
        3.388, 3.378, 3.368, 3.359, 3.349,
        3.339, 3.33, 3.32, 3.311, 3.301,
        3.287, 3.268, 3.249, 3.231, 3.213,
        3.194, 3.176, 3.158, 3.14, 3.123,
        3.105, 3.088, 3.07, 3.053, 3.028,
        2.994, 2.961, 2.928, 2.896, 2.865,
        2.834, 2.803, 2.773, 2.743, 2.692,
        2.621, 2.554, 2.488, 2.425, 2.307,
        2.12, 4.386, 4.363, 4.347, 4.332,
        4.317, 4.302, 4.287, 4.272, 4.258,
        4.243, 4.229, 4.208, 4.18, 4.153,
        4.127, 4.101, 4.075, 4.051, 4.026,
        4.003, 3.979, 3.956, 3.934, 3.912,
        3.891, 3.86, 3.821, 3.783, 3.747,
        3.712, 3.68, 3.649, 3.62, 3.592,
        3.566, 3.524, 3.471, 3.427, 3.39,
        3.361, 3.323, 3.312, 6.918, 6.864,
        6.829, 6.794, 6.759, 6.724, 6.69,
        6.656, 6.623, 6.589, 6.556, 6.507,
        6.443, 6.38, 6.319, 6.258, 6.199,
        6.142, 6.085, 6.03, 5.976, 5.923,
        5.872, 5.821, 5.773, 5.702, 5.612,
        5.528, 5.449, 5.376, 5.308, 5.245,
        5.189, 5.138, 5.092, 5.027, 4.964,
        4.939, 4.953, 5.005, 5.233, 6.041
     ) ),
    jetCalibrationsHF = cms.vdouble(
        3.223, 2.14, 1.683, 1.364, 1.142,
        0.987, 0.879, 0.804, 0.752, 0.716,
        0.691, 0.667, 0.651, 0.644, 0.641,
        0.641, 0.641, 0.642, 0.644, 0.645,
        0.647, 0.648, 0.65, 0.651, 0.653,
        0.655, 0.658, 0.662, 0.665, 0.668,
        0.671, 0.674, 0.677, 0.681, 0.684,
        0.689, 0.697, 0.705, 0.713, 0.721,
        0.736, 0.764, 2.598, 1.813, 1.462,
        1.206, 1.019, 0.883, 0.783, 0.711,
        0.658, 0.62, 0.592, 0.564, 0.543,
        0.532, 0.526, 0.524, 0.523, 0.524,
        0.524, 0.525, 0.526, 0.527, 0.528,
        0.529, 0.53, 0.532, 0.534, 0.536,
        0.538, 0.541, 0.543, 0.545, 0.547,
        0.549, 0.552, 0.556, 0.561, 0.567,
        0.572, 0.578, 0.589, 0.608
    ),
    jetCalibrationsHGCal = cms.vdouble( (
        1.395, 1.394, 1.394, 1.394, 1.394,
        1.394, 1.393, 1.393, 1.393, 1.393,
        1.393, 1.393, 1.392, 1.392, 1.392,
        1.391, 1.391, 1.391, 1.39, 1.39,
        1.39, 1.389, 1.389, 1.389, 1.388,
        1.388, 1.387, 1.387, 1.386, 1.385,
        1.385, 1.384, 1.383, 1.383, 1.382,
        1.381, 1.379, 1.378, 1.376, 1.374,
        1.371, 1.365, 1.575, 1.574, 1.574,
        1.574, 1.574, 1.574, 1.573, 1.573,
        1.573, 1.573, 1.572, 1.572, 1.572,
        1.571, 1.571, 1.57, 1.57, 1.569,
        1.569, 1.569, 1.568, 1.568, 1.567,
        1.567, 1.566, 1.566, 1.565, 1.564,
        1.563, 1.562, 1.561, 1.56, 1.559,
        1.559, 1.558, 1.556, 1.554, 1.552,
        1.549, 1.547, 1.543, 1.535, 1.846,
        1.845, 1.845, 1.844, 1.844, 1.843,
        1.843, 1.842, 1.842, 1.841, 1.841,
        1.84, 1.839, 1.839, 1.838, 1.837,
        1.836, 1.835, 1.834, 1.833, 1.832,
        1.831, 1.83, 1.829, 1.829, 1.827,
        1.825, 1.824, 1.822, 1.82, 1.818,
        1.816, 1.814, 1.813, 1.811, 1.808,
        1.803, 1.799, 1.794, 1.79, 1.78,
        1.765, 3.377, 3.355, 3.341, 3.326,
        3.312, 3.298, 3.283, 3.269, 3.255,
        3.242, 3.228, 3.207, 3.18, 3.154,
        3.128, 3.102, 3.077, 3.051, 3.027,
        3.002, 2.979, 2.955, 2.932, 2.909,
        2.886, 2.853, 2.811, 2.769, 2.729,
        2.691, 2.654, 2.618, 2.584, 2.551,
        2.519, 2.467, 2.4, 2.341, 2.291,
        2.248, 2.186, 2.149, 1.085, 1.087,
        1.088, 1.089, 1.09, 1.091, 1.092,
        1.093, 1.094, 1.095, 1.097, 1.098,
        1.1, 1.103, 1.105, 1.107, 1.109,
        1.111, 1.113, 1.116, 1.118, 1.12,
        1.122, 1.124, 1.126, 1.13, 1.134,
        1.138, 1.143, 1.147, 1.151, 1.156,
        1.16, 1.164, 1.169, 1.176, 1.187,
        1.198, 1.209, 1.22, 1.242, 1.28,
        61.559, 11.087, 4.083, 1.971, 1.335,
        1.145, 1.09, 1.074, 1.072, 1.072,
        1.074, 1.078, 1.083, 1.088, 1.093,
        1.098, 1.103, 1.108, 1.112, 1.117,
        1.122, 1.127, 1.132, 1.137, 1.142,
        1.149, 1.159, 1.169, 1.179, 1.189,
        1.199, 1.209, 1.218, 1.228, 1.238,
        1.255, 1.28, 1.305, 1.329, 1.354,
        1.403, 1.49, 89.821, 15.567, 5.416,
        2.387, 1.485, 1.218, 1.14, 1.119,
        1.115, 1.116, 1.118, 1.123, 1.129,
        1.135, 1.141, 1.147, 1.153, 1.159,
        1.165, 1.171, 1.178, 1.184, 1.19,
        1.196, 1.202, 1.211, 1.223, 1.236,
        1.248, 1.26, 1.272, 1.284, 1.297,
        1.309, 1.321, 1.342, 1.373, 1.403,
        1.434, 1.464, 1.525, 1.632, 83.76,
        19.529, 8.102, 3.961, 2.461, 1.918,
        1.721, 1.65, 1.624, 1.615, 1.612,
        1.611, 1.611, 1.611, 1.612, 1.612,
        1.613, 1.613, 1.614, 1.614, 1.615,
        1.616, 1.616, 1.617, 1.617, 1.618,
        1.619, 1.62, 1.621, 1.622, 1.623,
        1.624, 1.625, 1.626, 1.628, 1.629,
        1.632, 1.635, 1.637, 1.64, 1.645,
        1.655, 1.262, 1.261, 1.26, 1.259,
        1.259, 1.258, 1.257, 1.256, 1.256,
        1.255, 1.254, 1.253, 1.252, 1.25,
        1.249, 1.247, 1.246, 1.244, 1.243,
        1.242, 1.24, 1.239, 1.237, 1.236,
        1.234, 1.232, 1.229, 1.226, 1.223,
        1.221, 1.218, 1.215, 1.212, 1.209,
        1.206, 1.201, 1.194, 1.186, 1.179,
        1.172, 1.157, 1.132, 1.328, 1.327,
        1.326, 1.326, 1.325, 1.325, 1.324,
        1.324, 1.323, 1.323, 1.322, 1.322,
        1.321, 1.32, 1.319, 1.318, 1.317,
        1.316, 1.315, 1.314, 1.313, 1.312,
        1.311, 1.31, 1.309, 1.308, 1.306,
        1.304, 1.302, 1.3, 1.298, 1.296,
        1.294, 1.292, 1.29, 1.287, 1.282,
        1.277, 1.272, 1.267, 1.257, 1.24,
        1.463, 1.461, 1.46, 1.459, 1.458,
        1.457, 1.456, 1.455, 1.454, 1.453,
        1.452, 1.451, 1.449, 1.447, 1.445,
        1.443, 1.44, 1.438, 1.436, 1.434,
        1.432, 1.43, 1.428, 1.426, 1.424,
        1.421, 1.417, 1.413, 1.409, 1.405,
        1.401, 1.397, 1.393, 1.389, 1.385,
        1.377, 1.367, 1.357, 1.347, 1.337,
        1.316, 1.281, 44.899, 14.731, 7.692,
        4.568, 3.18, 2.562, 2.285, 2.159,
        2.101, 2.072, 2.057, 2.043, 2.031,
        2.021, 2.011, 2.001, 1.991, 1.982,
        1.972, 1.962, 1.952, 1.942, 1.932,
        1.922, 1.912, 1.897, 1.878, 1.858,
        1.838, 1.818, 1.798, 1.779, 1.759,
        1.739, 1.719, 1.685, 1.635, 1.586,
        1.536, 1.487, 1.387, 1.214
     ) ),
    jetPtBins = cms.vdouble(
        0.0, 5.0, 7.5, 10.0, 12.5,
        15.0, 17.5, 20.0, 22.5, 25.0,
        27.5, 30.0, 35.0, 40.0, 45.0,
        50.0, 55.0, 60.0, 65.0, 70.0,
        75.0, 80.0, 85.0, 90.0, 95.0,
        100.0, 110.0, 120.0, 130.0, 140.0,
        150.0, 160.0, 170.0, 180.0, 190.0,
        200.0, 225.0, 250.0, 275.0, 300.0,
        325.0, 400.0, 500.0
    ),
    l1CaloTowers = cms.InputTag("l1tTowerCalibration","L1CaloTowerCalibratedCollection"),
    tauAbsEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    tauAbsEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    tauCalibrationsBarrel = cms.vdouble( (
        1.917, 1.714, 1.605, 1.514, 1.437,
        1.344, 1.252, 1.188, 1.142, 1.11,
        1.087, 1.071, 1.059, 1.051, 1.044,
        1.038, 1.034, 1.032, 1.032, 1.856,
        1.729, 1.655, 1.589, 1.53, 1.453,
        1.369, 1.301, 1.248, 1.205, 1.17,
        1.143, 1.121, 1.103, 1.084, 1.066,
        1.05, 1.037, 1.034, 2.053, 1.884,
        1.788, 1.702, 1.627, 1.53, 1.426,
        1.345, 1.282, 1.233, 1.194, 1.164,
        1.141, 1.122, 1.102, 1.084, 1.07,
        1.059, 1.057, 1.783, 1.659, 1.588,
        1.524, 1.466, 1.391, 1.309, 1.244,
        1.191, 1.149, 1.116, 1.089, 1.068,
        1.05, 1.031, 1.013, 0.998, 0.986,
        0.983, 1.896, 1.713, 1.613, 1.527,
        1.453, 1.362, 1.27, 1.202, 1.152,
        1.115, 1.088, 1.069, 1.054, 1.044,
        1.033, 1.024, 1.018, 1.015, 1.014,
        1.936, 1.677, 1.544, 1.437, 1.35,
        1.249, 1.156, 1.095, 1.055, 1.028,
        1.011, 1.0, 0.992, 0.987, 0.983,
        0.98, 0.978, 0.978, 0.978, 1.85,
        1.683, 1.59, 1.509, 1.439, 1.351,
        1.258, 1.188, 1.135, 1.096, 1.065,
        1.043, 1.025, 1.012, 0.999, 0.987,
        0.979, 0.973, 0.972, 2.066, 1.784,
        1.638, 1.517, 1.418, 1.301, 1.189,
        1.114, 1.063, 1.029, 1.006, 0.99,
        0.979, 0.972, 0.965, 0.961, 0.958,
        0.957, 0.957, 1.074, 1.063, 1.056,
        1.05, 1.043, 1.034, 1.022, 1.011,
        1.001, 0.992, 0.983, 0.974, 0.966,
        0.959, 0.949, 0.937, 0.921, 0.895,
        0.874, 2.053, 1.757, 1.609, 1.489,
        1.394, 1.285, 1.186, 1.123, 1.083,
        1.057, 1.04, 1.029, 1.022, 1.018,
        1.014, 1.012, 1.01, 1.01, 1.01,
        1.733, 1.628, 1.567, 1.513, 1.463,
        1.399, 1.328, 1.27, 1.224, 1.187,
        1.157, 1.133, 1.114, 1.098, 1.081,
        1.064, 1.05, 1.038, 1.035, 2.009,
        1.852, 1.762, 1.682, 1.611, 1.518,
        1.417, 1.337, 1.274, 1.224, 1.184,
        1.153, 1.128, 1.108, 1.086, 1.066,
        1.049, 1.036, 1.033, 1.806, 1.669,
        1.591, 1.522, 1.461, 1.382, 1.296,
        1.23, 1.177, 1.136, 1.103, 1.078,
        1.058, 1.043, 1.025, 1.01, 0.998,
        0.988, 0.986, 1.944, 1.725, 1.609,
        1.512, 1.431, 1.334, 1.239, 1.173,
        1.126, 1.094, 1.071, 1.056, 1.045,
        1.037, 1.03, 1.024, 1.021, 1.019,
        1.019, 1.9, 1.631, 1.496, 1.389,
        1.304, 1.208, 1.122, 1.068, 1.034,
        1.012, 0.999, 0.99, 0.984, 0.981,
        0.978, 0.976, 0.975, 0.975, 0.975,
        1.682, 1.577, 1.516, 1.46, 1.409,
        1.342, 1.266, 1.203, 1.152, 1.109,
        1.075, 1.046, 1.022, 1.003, 0.98,
        0.958, 0.937, 0.918, 0.913, 1.928,
        1.693, 1.569, 1.466, 1.381, 1.28,
        1.183, 1.116, 1.07, 1.038, 1.016,
        1.001, 0.991, 0.984, 0.977, 0.973,
        0.97, 0.969, 0.969, 1.067, 1.058,
        1.052, 1.047, 1.041, 1.033, 1.023,
        1.014, 1.005, 0.997, 0.989, 0.981,
        0.974, 0.968, 0.959, 0.948, 0.933,
        0.908, 0.886, 1.883, 1.663, 1.548,
        1.453, 1.375, 1.282, 1.193, 1.133,
        1.091, 1.063, 1.044, 1.031, 1.022,
        1.016, 1.01, 1.006, 1.004, 1.003,
        1.003, 1.688, 1.595, 1.541, 1.492,
        1.448, 1.39, 1.325, 1.271, 1.228,
        1.193, 1.164, 1.14, 1.121, 1.105,
        1.087, 1.07, 1.055, 1.041, 1.037,
        2.251, 2.02, 1.891, 1.779, 1.682,
        1.561, 1.434, 1.339, 1.267, 1.213,
        1.173, 1.142, 1.119, 1.102, 1.084,
        1.069, 1.058, 1.051, 1.05, 1.799,
        1.654, 1.572, 1.501, 1.438, 1.359,
        1.275, 1.211, 1.162, 1.125, 1.096,
        1.074, 1.057, 1.044, 1.03, 1.019,
        1.009, 1.003, 1.002, 1.78, 1.63,
        1.547, 1.475, 1.413, 1.335, 1.254,
        1.193, 1.148, 1.114, 1.089, 1.07,
        1.056, 1.045, 1.034, 1.025, 1.018,
        1.014, 1.013, 1.75, 1.549, 1.445,
        1.359, 1.288, 1.205, 1.126, 1.072,
        1.036, 1.012, 0.995, 0.984, 0.976,
        0.971, 0.966, 0.963, 0.961, 0.96,
        0.96, 1.736, 1.61, 1.537, 1.472,
        1.414, 1.339, 1.257, 1.192, 1.141,
        1.1, 1.067, 1.041, 1.021, 1.005,
        0.986, 0.97, 0.956, 0.945, 0.942,
        1.961, 1.712, 1.582, 1.474, 1.386,
        1.281, 1.181, 1.114, 1.068, 1.036,
        1.015, 1.001, 0.991, 0.984, 0.978,
        0.974, 0.971, 0.97, 0.97, 1.065,
        1.056, 1.051, 1.046, 1.04, 1.033,
        1.023, 1.014, 1.005, 0.997, 0.989,
        0.982, 0.974, 0.968, 0.958, 0.946,
        0.93, 0.9, 0.872, 2.047, 1.81,
        1.683, 1.575, 1.485, 1.375, 1.266,
        1.188, 1.133, 1.094, 1.066, 1.046,
        1.032, 1.022, 1.012, 1.005, 1.0,
        0.998, 0.997, 2.022, 1.861, 1.768,
        1.686, 1.613, 1.519, 1.418, 1.338,
        1.275, 1.226, 1.187, 1.157, 1.133,
        1.114, 1.093, 1.074, 1.059, 1.047,
        1.045, 2.503, 2.236, 2.087, 1.956,
        1.843, 1.699, 1.548, 1.434, 1.347,
        1.281, 1.231, 1.192, 1.164, 1.142,
        1.118, 1.099, 1.084, 1.074, 1.072,
        2.253, 2.007, 1.872, 1.755, 1.654,
        1.529, 1.401, 1.305, 1.235, 1.182,
        1.143, 1.115, 1.093, 1.078, 1.061,
        1.048, 1.039, 1.033, 1.033, 2.228,
        2.01, 1.888, 1.782, 1.69, 1.574,
        1.453, 1.361, 1.292, 1.239, 1.2,
        1.17, 1.147, 1.13, 1.112, 1.097,
        1.085, 1.078, 1.077, 2.527, 2.136,
        1.934, 1.769, 1.633, 1.475, 1.326,
        1.226, 1.159, 1.114, 1.084, 1.064,
        1.051, 1.042, 1.034, 1.028, 1.025,
        1.024, 1.024, 2.097, 1.908, 1.801,
        1.706, 1.622, 1.514, 1.398, 1.308,
        1.238, 1.183, 1.14, 1.106, 1.08,
        1.06, 1.038, 1.018, 1.002, 0.991,
        0.988, 2.479, 2.106, 1.912, 1.753,
        1.623, 1.47, 1.326, 1.229, 1.163,
        1.12, 1.09, 1.07, 1.057, 1.048,
        1.04, 1.034, 1.031, 1.029, 1.029,
        2.097, 1.906, 1.796, 1.699, 1.612,
        1.5, 1.378, 1.281, 1.205, 1.145,
        1.098, 1.06, 1.031, 1.007, 0.981,
        0.958, 0.939, 0.923, 0.92
     ) ),
    tauCalibrationsHGCal = cms.vdouble(
        1.665, 1.556, 1.495, 1.443, 1.398,
        1.342, 1.285, 1.242, 1.211, 1.188,
        1.17, 1.158, 1.148, 1.141, 1.134,
        1.128, 1.124, 1.122, 1.121, 1.646,
        1.525, 1.459, 1.402, 1.353, 1.293,
        1.231, 1.186, 1.153, 1.129, 1.112,
        1.099, 1.089, 1.082, 1.075, 1.069,
        1.065, 1.063, 1.063, 1.826, 1.63,
        1.528, 1.444, 1.376, 1.294, 1.218,
        1.166, 1.13, 1.107, 1.091, 1.08,
        1.072, 1.067, 1.063, 1.06, 1.058,
        1.057, 1.057, 2.031, 1.762, 1.624,
        1.514, 1.424, 1.321, 1.226, 1.164,
        1.124, 1.098, 1.081, 1.069, 1.062,
        1.057, 1.053, 1.05, 1.049, 1.048,
        1.048, 1.396, 1.328, 1.291, 1.259,
        1.232, 1.198, 1.164, 1.139, 1.12,
        1.107, 1.097, 1.089, 1.084, 1.08,
        1.076, 1.073, 1.071, 1.07, 1.07,
        1.242, 1.214, 1.197, 1.182, 1.168,
        1.149, 1.128, 1.111, 1.097, 1.085,
        1.075, 1.067, 1.06, 1.055, 1.048,
        1.042, 1.036, 1.03, 1.029, 1.491,
        1.368, 1.305, 1.253, 1.211, 1.161,
        1.115, 1.084, 1.064, 1.05, 1.041,
        1.035, 1.031, 1.028, 1.026, 1.024,
        1.023, 1.023, 1.023, 1.348, 1.289,
        1.255, 1.225, 1.199, 1.165, 1.127,
        1.098, 1.075, 1.057, 1.043, 1.031,
        1.022, 1.016, 1.008, 1.001, 0.995,
        0.991, 0.99, 1.422, 1.373, 1.345,
        1.32, 1.297, 1.266, 1.232, 1.205,
        1.183, 1.165, 1.15, 1.138, 1.128,
        1.12, 1.111, 1.102, 1.095, 1.088,
        1.086, 1.35, 1.322, 1.304, 1.288,
        1.272, 1.25, 1.224, 1.201, 1.18,
        1.162, 1.146, 1.132, 1.119, 1.108,
        1.093, 1.078, 1.061, 1.038, 1.026,
        1.44, 1.373, 1.334, 1.3, 1.27,
        1.231, 1.189, 1.155, 1.129, 1.108,
        1.092, 1.079, 1.069, 1.061, 1.053,
        1.045, 1.038, 1.033, 1.032, 1.356,
        1.317, 1.293, 1.271, 1.25, 1.221,
        1.186, 1.156, 1.129, 1.105, 1.085,
        1.067, 1.051, 1.037, 1.019, 1.0,
        0.98, 0.954, 0.941
    ),
    tauL1egInfoBarrel = cms.VPSet(
        cms.PSet(
            l1egCount = cms.double(0.0),
            l1egEmFractions = cms.vdouble(0.0, 0.091, 0.317, 1.05)
        ),
        cms.PSet(
            l1egCount = cms.double(1.0),
            l1egEmFractions = cms.vdouble(0.0, 0.634, 0.888, 1.05)
        ),
        cms.PSet(
            l1egCount = cms.double(2.0),
            l1egEmFractions = cms.vdouble(0.0, 0.821, 0.957, 1.05)
        )
    ),
    tauL1egInfoHGCal = cms.VPSet(cms.PSet(
        l1egCount = cms.double(0.0),
        l1egEmFractions = cms.vdouble(0.0, 0.473, 0.72, 0.894, 1.05)
    )),
    tauPtBins = cms.vdouble(
        0.0, 5.0, 7.5, 10.0, 12.5,
        15.0, 20.0, 25.0, 30.0, 35.0,
        40.0, 45.0, 50.0, 55.0, 60.0,
        70.0, 80.0, 100.0, 150.0, 200.0
    )
)


process.l1tCaloJetHTT = cms.EDProducer("L1CaloJetHTTProducer",
    BXVCaloJetsInputTag = cms.InputTag("L1CaloJet","CaloJets"),
    EtaMax = cms.double(2.4),
    PtMin = cms.double(30.0),
    debug = cms.bool(False),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    use_gen_jets = cms.bool(False)
)


process.l1tCaloJetHTTProducer = cms.EDProducer("L1CaloJetHTTProducer",
    BXVCaloJetsInputTag = cms.InputTag("l1tCaloJetProducer","L1CaloJetCollectionBXV"),
    EtaMax = cms.double(2.4),
    PtMin = cms.double(30.0),
    debug = cms.bool(False),
    genJets = cms.InputTag("ak4GenJetsNoNu"),
    use_gen_jets = cms.bool(False)
)


process.l1tCaloJetProducer = cms.EDProducer("L1CaloJetProducer",
    EcalTpEtMin = cms.double(0.5),
    EtMinForCollection = cms.double(10),
    EtMinForSeedHit = cms.double(2.5),
    EtMinForTauCollection = cms.double(10),
    HFTpEtMin = cms.double(0.5),
    HGCalEmTpEtMin = cms.double(0.5),
    HGCalHadTpEtMin = cms.double(0.5),
    HcalTpEtMin = cms.double(0.5),
    L1CrystalClustersInputTag = cms.InputTag("l1tEGammaClusterEmuProducer","L1EGXtalClusterEmulator"),
    absEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    absEtaBinsHF = cms.vdouble(3.0, 3.6, 6.0),
    absEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    debug = cms.bool(False),
    emFractionBinsBarrel = cms.vdouble(
        0.0, 0.31, 0.4, 0.47, 0.53,
        0.58, 0.63, 0.69, 0.76, 0.84,
        1.05
    ),
    emFractionBinsHF = cms.vdouble(0.0, 1.05),
    emFractionBinsHGCal = cms.vdouble(0.0, 0.55, 0.67, 0.77, 1.05),
    jetCalibrationsBarrel = cms.vdouble( (
        1.64, 1.626, 1.617, 1.608, 1.599,
        1.591, 1.583, 1.574, 1.566, 1.559,
        1.551, 1.54, 1.525, 1.512, 1.498,
        1.486, 1.474, 1.462, 1.451, 1.441,
        1.431, 1.421, 1.412, 1.404, 1.396,
        1.385, 1.372, 1.36, 1.35, 1.341,
        1.334, 1.329, 1.325, 1.322, 1.32,
        1.32, 1.325, 1.336, 1.352, 1.373,
        1.428, 1.553, 1.855, 1.839, 1.829,
        1.819, 1.809, 1.8, 1.79, 1.781,
        1.771, 1.762, 1.753, 1.74, 1.723,
        1.706, 1.69, 1.674, 1.659, 1.645,
        1.631, 1.617, 1.604, 1.591, 1.579,
        1.568, 1.556, 1.54, 1.52, 1.501,
        1.484, 1.469, 1.454, 1.441, 1.43,
        1.419, 1.41, 1.396, 1.382, 1.374,
        1.37, 1.372, 1.386, 1.443, 1.993,
        1.978, 1.967, 1.957, 1.947, 1.937,
        1.927, 1.918, 1.908, 1.898, 1.889,
        1.875, 1.857, 1.839, 1.822, 1.805,
        1.789, 1.773, 1.757, 1.742, 1.727,
        1.713, 1.699, 1.685, 1.672, 1.653,
        1.629, 1.606, 1.584, 1.564, 1.545,
        1.527, 1.511, 1.495, 1.481, 1.459,
        1.434, 1.414, 1.4, 1.392, 1.391,
        1.431, 2.155, 2.135, 2.123, 2.11,
        2.097, 2.085, 2.073, 2.061, 2.049,
        2.037, 2.026, 2.009, 1.987, 1.965,
        1.944, 1.924, 1.905, 1.885, 1.867,
        1.849, 1.832, 1.815, 1.798, 1.783,
        1.767, 1.745, 1.717, 1.691, 1.666,
        1.643, 1.622, 1.602, 1.583, 1.566,
        1.55, 1.525, 1.495, 1.47, 1.451,
        1.437, 1.422, 1.424, 2.305, 2.284,
        2.271, 2.257, 2.244, 2.231, 2.218,
        2.205, 2.193, 2.18, 2.168, 2.15,
        2.126, 2.103, 2.081, 2.059, 2.037,
        2.017, 1.996, 1.976, 1.957, 1.938,
        1.92, 1.902, 1.884, 1.859, 1.827,
        1.797, 1.768, 1.741, 1.715, 1.691,
        1.668, 1.647, 1.627, 1.595, 1.556,
        1.523, 1.497, 1.477, 1.451, 1.446,
        2.555, 2.528, 2.51, 2.492, 2.474,
        2.457, 2.44, 2.423, 2.406, 2.39,
        2.373, 2.349, 2.318, 2.288, 2.258,
        2.229, 2.201, 2.174, 2.148, 2.122,
        2.097, 2.072, 2.049, 2.026, 2.004,
        1.971, 1.93, 1.892, 1.856, 1.822,
        1.79, 1.761, 1.733, 1.707, 1.683,
        1.645, 1.6, 1.563, 1.535, 1.515,
        1.493, 1.505, 2.85, 2.815, 2.792,
        2.77, 2.747, 2.725, 2.703, 2.682,
        2.661, 2.64, 2.619, 2.589, 2.549,
        2.511, 2.473, 2.437, 2.401, 2.367,
        2.334, 2.301, 2.27, 2.239, 2.209,
        2.181, 2.153, 2.112, 2.062, 2.014,
        1.969, 1.927, 1.888, 1.852, 1.818,
        1.787, 1.758, 1.712, 1.658, 1.616,
        1.585, 1.563, 1.544, 1.576, 3.386,
        3.325, 3.286, 3.248, 3.21, 3.174,
        3.138, 3.103, 3.069, 3.036, 3.004,
        2.956, 2.896, 2.838, 2.783, 2.73,
        2.68, 2.632, 2.586, 2.543, 2.501,
        2.461, 2.423, 2.387, 2.352, 2.303,
        2.242, 2.187, 2.136, 2.09, 2.047,
        2.008, 1.973, 1.94, 1.91, 1.863,
        1.806, 1.76, 1.721, 1.688, 1.636,
        1.572, 4.45, 4.344, 4.276, 4.21,
        4.146, 4.083, 4.022, 3.962, 3.904,
        3.847, 3.792, 3.712, 3.61, 3.513,
        3.42, 3.333, 3.25, 3.171, 3.096,
        3.025, 2.958, 2.894, 2.833, 2.776,
        2.721, 2.645, 2.552, 2.468, 2.393,
        2.325, 2.265, 2.21, 2.162, 2.118,
        2.079, 2.021, 1.956, 1.908, 1.873,
        1.849, 1.822, 1.818, 6.912, 6.764,
        6.667, 6.571, 6.477, 6.384, 6.293,
        6.203, 6.114, 6.027, 5.941, 5.814,
        5.65, 5.491, 5.336, 5.187, 5.042,
        4.903, 4.767, 4.637, 4.511, 4.389,
        4.272, 4.159, 4.05, 3.894, 3.7,
        3.522, 3.359, 3.21, 3.076, 2.954,
        2.846, 2.75, 2.667, 2.549, 2.438,
        2.39, 2.4, 2.463, 2.731, 3.577,
        1.536, 1.527, 1.521, 1.515, 1.509,
        1.503, 1.497, 1.491, 1.486, 1.48,
        1.475, 1.467, 1.457, 1.447, 1.437,
        1.428, 1.419, 1.411, 1.403, 1.395,
        1.388, 1.38, 1.374, 1.367, 1.361,
        1.353, 1.342, 1.333, 1.325, 1.319,
        1.313, 1.309, 1.305, 1.303, 1.302,
        1.302, 1.307, 1.317, 1.333, 1.354,
        1.409, 1.544, 1.74, 1.73, 1.723,
        1.716, 1.709, 1.702, 1.696, 1.689,
        1.683, 1.676, 1.67, 1.661, 1.648,
        1.636, 1.624, 1.613, 1.602, 1.59,
        1.58, 1.569, 1.559, 1.549, 1.539,
        1.53, 1.521, 1.507, 1.49, 1.474,
        1.459, 1.445, 1.432, 1.42, 1.409,
        1.399, 1.389, 1.375, 1.36, 1.35,
        1.345, 1.346, 1.363, 1.439, 1.869,
        1.858, 1.851, 1.843, 1.836, 1.829,
        1.822, 1.815, 1.808, 1.801, 1.795,
        1.785, 1.771, 1.758, 1.746, 1.733,
        1.721, 1.709, 1.697, 1.686, 1.674,
        1.663, 1.652, 1.642, 1.631, 1.616,
        1.597, 1.578, 1.56, 1.543, 1.527,
        1.512, 1.498, 1.485, 1.472, 1.452,
        1.427, 1.408, 1.393, 1.383, 1.377,
        1.407, 2.01, 1.997, 1.988, 1.98,
        1.971, 1.963, 1.954, 1.946, 1.938,
        1.93, 1.922, 1.91, 1.894, 1.879,
        1.864, 1.849, 1.834, 1.82, 1.806,
        1.792, 1.779, 1.766, 1.753, 1.74,
        1.728, 1.709, 1.686, 1.664, 1.642,
        1.622, 1.603, 1.584, 1.567, 1.55,
        1.534, 1.509, 1.478, 1.451, 1.43,
        1.414, 1.396, 1.407, 2.171, 2.155,
        2.144, 2.134, 2.123, 2.113, 2.103,
        2.093, 2.083, 2.073, 2.063, 2.049,
        2.03, 2.012, 1.994, 1.976, 1.959,
        1.942, 1.925, 1.909, 1.893, 1.877,
        1.862, 1.847, 1.833, 1.812, 1.785,
        1.759, 1.734, 1.71, 1.688, 1.667,
        1.646, 1.627, 1.609, 1.579, 1.542,
        1.509, 1.482, 1.459, 1.426, 1.401,
        2.366, 2.345, 2.332, 2.319, 2.306,
        2.293, 2.28, 2.268, 2.255, 2.243,
        2.231, 2.213, 2.189, 2.166, 2.144,
        2.122, 2.1, 2.079, 2.058, 2.038,
        2.018, 1.999, 1.98, 1.962, 1.944,
        1.918, 1.884, 1.853, 1.822, 1.794,
        1.766, 1.741, 1.716, 1.693, 1.671,
        1.636, 1.591, 1.554, 1.522, 1.497,
        1.461, 1.441, 2.68, 2.647, 2.626,
        2.605, 2.584, 2.564, 2.544, 2.525,
        2.506, 2.487, 2.469, 2.442, 2.407,
        2.373, 2.34, 2.309, 2.278, 2.249,
        2.221, 2.193, 2.167, 2.142, 2.117,
        2.093, 2.07, 2.038, 1.996, 1.958,
        1.922, 1.888, 1.857, 1.828, 1.801,
        1.775, 1.751, 1.713, 1.666, 1.626,
        1.592, 1.563, 1.516, 1.459, 3.093,
        3.051, 3.023, 2.995, 2.969, 2.942,
        2.916, 2.89, 2.865, 2.84, 2.816,
        2.78, 2.733, 2.688, 2.644, 2.602,
        2.561, 2.522, 2.484, 2.447, 2.411,
        2.376, 2.343, 2.311, 2.28, 2.235,
        2.178, 2.126, 2.077, 2.031, 1.988,
        1.949, 1.912, 1.878, 1.846, 1.796,
        1.735, 1.685, 1.646, 1.614, 1.571,
        1.543, 4.08, 3.996, 3.941, 3.888,
        3.836, 3.785, 3.735, 3.686, 3.638,
        3.591, 3.546, 3.479, 3.393, 3.312,
        3.233, 3.159, 3.087, 3.019, 2.953,
        2.891, 2.831, 2.774, 2.72, 2.668,
        2.618, 2.548, 2.462, 2.383, 2.312,
        2.247, 2.188, 2.134, 2.086, 2.042,
        2.003, 1.943, 1.875, 1.825, 1.788,
        1.763, 1.738, 1.747, 6.659, 6.494,
        6.387, 6.282, 6.179, 6.078, 5.978,
        5.881, 5.785, 5.691, 5.599, 5.463,
        5.289, 5.122, 4.961, 4.806, 4.657,
        4.514, 4.378, 4.246, 4.121, 4.001,
        3.886, 3.776, 3.671, 3.522, 3.341,
        3.177, 3.03, 2.899, 2.783, 2.682,
        2.594, 2.519, 2.456, 2.373, 2.311,
        2.307, 2.355, 2.447, 2.743, 3.536,
        1.519, 1.512, 1.507, 1.502, 1.498,
        1.493, 1.488, 1.484, 1.479, 1.475,
        1.471, 1.464, 1.456, 1.448, 1.44,
        1.433, 1.425, 1.418, 1.412, 1.405,
        1.399, 1.393, 1.387, 1.381, 1.376,
        1.369, 1.359, 1.351, 1.344, 1.337,
        1.332, 1.327, 1.323, 1.32, 1.318,
        1.317, 1.319, 1.326, 1.339, 1.356,
        1.404, 1.53, 1.719, 1.71, 1.705,
        1.699, 1.693, 1.688, 1.682, 1.677,
        1.671, 1.666, 1.661, 1.653, 1.642,
        1.632, 1.622, 1.613, 1.603, 1.594,
        1.584, 1.575, 1.567, 1.558, 1.55,
        1.541, 1.533, 1.522, 1.507, 1.492,
        1.479, 1.466, 1.454, 1.443, 1.432,
        1.422, 1.413, 1.399, 1.382, 1.369,
        1.361, 1.356, 1.359, 1.401, 1.86,
        1.851, 1.844, 1.838, 1.832, 1.826,
        1.82, 1.814, 1.808, 1.802, 1.796,
        1.787, 1.775, 1.764, 1.753, 1.742,
        1.731, 1.72, 1.71, 1.699, 1.689,
        1.679, 1.669, 1.66, 1.65, 1.636,
        1.618, 1.601, 1.584, 1.568, 1.553,
        1.538, 1.524, 1.511, 1.498, 1.478,
        1.451, 1.428, 1.41, 1.394, 1.374,
        1.373, 1.993, 1.982, 1.974, 1.967,
        1.96, 1.953, 1.946, 1.938, 1.931,
        1.924, 1.917, 1.907, 1.894, 1.88,
        1.867, 1.854, 1.841, 1.828, 1.816,
        1.804, 1.792, 1.78, 1.768, 1.757,
        1.746, 1.729, 1.708, 1.687, 1.667,
        1.648, 1.629, 1.612, 1.595, 1.578,
        1.563, 1.537, 1.504, 1.475, 1.451,
        1.43, 1.402, 1.388, 2.146, 2.131,
        2.122, 2.113, 2.104, 2.095, 2.086,
        2.077, 2.068, 2.059, 2.051, 2.038,
        2.021, 2.004, 1.988, 1.972, 1.957,
        1.941, 1.926, 1.911, 1.897, 1.883,
        1.869, 1.855, 1.842, 1.822, 1.797,
        1.773, 1.749, 1.727, 1.706, 1.685,
        1.665, 1.647, 1.629, 1.599, 1.561,
        1.527, 1.497, 1.472, 1.431, 1.389,
        2.336, 2.319, 2.307, 2.296, 2.285,
        2.273, 2.262, 2.251, 2.24, 2.23,
        2.219, 2.203, 2.182, 2.162, 2.142,
        2.122, 2.103, 2.084, 2.065, 2.047,
        2.029, 2.012, 1.994, 1.978, 1.961,
        1.937, 1.906, 1.876, 1.848, 1.82,
        1.794, 1.769, 1.745, 1.722, 1.7,
        1.665, 1.618, 1.578, 1.543, 1.512,
        1.465, 1.42, 2.594, 2.571, 2.556,
        2.541, 2.526, 2.511, 2.497, 2.482,
        2.468, 2.453, 2.439, 2.419, 2.391,
        2.364, 2.338, 2.312, 2.287, 2.262,
        2.238, 2.214, 2.191, 2.168, 2.146,
        2.124, 2.103, 2.072, 2.032, 1.993,
        1.957, 1.922, 1.889, 1.857, 1.827,
        1.799, 1.772, 1.728, 1.672, 1.625,
        1.585, 1.552, 1.507, 1.482, 3.016,
        2.982, 2.959, 2.937, 2.915, 2.893,
        2.872, 2.851, 2.83, 2.809, 2.788,
        2.758, 2.718, 2.679, 2.641, 2.604,
        2.568, 2.533, 2.499, 2.465, 2.432,
        2.4, 2.369, 2.339, 2.309, 2.266,
        2.211, 2.16, 2.111, 2.064, 2.02,
        1.979, 1.94, 1.904, 1.87, 1.815,
        1.749, 1.694, 1.651, 1.618, 1.58,
        1.59, 4.054, 3.966, 3.909, 3.854,
        3.8, 3.747, 3.696, 3.646, 3.597,
        3.549, 3.503, 3.435, 3.348, 3.266,
        3.187, 3.112, 3.041, 2.974, 2.909,
        2.848, 2.79, 2.734, 2.681, 2.631,
        2.583, 2.516, 2.434, 2.36, 2.292,
        2.232, 2.178, 2.128, 2.084, 2.045,
        2.009, 1.955, 1.895, 1.85, 1.817,
        1.794, 1.769, 1.766, 6.752, 6.57,
        6.452, 6.337, 6.224, 6.113, 6.004,
        5.898, 5.795, 5.693, 5.594, 5.449,
        5.263, 5.085, 4.915, 4.752, 4.597,
        4.449, 4.308, 4.173, 4.045, 3.923,
        3.808, 3.697, 3.593, 3.446, 3.269,
        3.11, 2.969, 2.846, 2.738, 2.644,
        2.564, 2.497, 2.442, 2.372, 2.323,
        2.327, 2.374, 2.459, 2.718, 3.371,
        1.615, 1.605, 1.599, 1.593, 1.587,
        1.581, 1.575, 1.57, 1.564, 1.558,
        1.553, 1.545, 1.534, 1.524, 1.514,
        1.504, 1.494, 1.485, 1.476, 1.468,
        1.46, 1.452, 1.444, 1.437, 1.429,
        1.419, 1.407, 1.395, 1.385, 1.375,
        1.367, 1.36, 1.353, 1.348, 1.344,
        1.339, 1.336, 1.34, 1.349, 1.364,
        1.41, 1.537, 1.867, 1.856, 1.849,
        1.841, 1.834, 1.827, 1.82, 1.813,
        1.806, 1.799, 1.792, 1.782, 1.768,
        1.755, 1.742, 1.73, 1.718, 1.705,
        1.694, 1.682, 1.671, 1.66, 1.649,
        1.638, 1.628, 1.613, 1.594, 1.575,
        1.558, 1.542, 1.526, 1.512, 1.498,
        1.485, 1.474, 1.455, 1.433, 1.417,
        1.406, 1.401, 1.404, 1.458, 2.037,
        2.025, 2.017, 2.009, 2.001, 1.993,
        1.985, 1.977, 1.97, 1.962, 1.954,
        1.943, 1.928, 1.914, 1.899, 1.885,
        1.871, 1.858, 1.844, 1.831, 1.818,
        1.805, 1.793, 1.781, 1.769, 1.751,
        1.728, 1.707, 1.686, 1.666, 1.647,
        1.629, 1.612, 1.596, 1.58, 1.555,
        1.524, 1.498, 1.477, 1.462, 1.445,
        1.461, 2.206, 2.192, 2.183, 2.174,
        2.165, 2.156, 2.148, 2.139, 2.13,
        2.122, 2.113, 2.101, 2.084, 2.068,
        2.052, 2.037, 2.021, 2.006, 1.992,
        1.977, 1.963, 1.949, 1.935, 1.922,
        1.908, 1.889, 1.864, 1.84, 1.817,
        1.795, 1.773, 1.753, 1.733, 1.714,
        1.696, 1.666, 1.628, 1.593, 1.562,
        1.536, 1.492, 1.444, 2.401, 2.385,
        2.375, 2.365, 2.355, 2.346, 2.336,
        2.326, 2.317, 2.307, 2.298, 2.284,
        2.265, 2.247, 2.229, 2.212, 2.195,
        2.178, 2.161, 2.144, 2.128, 2.112,
        2.097, 2.081, 2.066, 2.044, 2.015,
        1.988, 1.961, 1.935, 1.91, 1.886,
        1.862, 1.84, 1.818, 1.782, 1.735,
        1.692, 1.653, 1.618, 1.559, 1.487,
        2.637, 2.62, 2.609, 2.599, 2.588,
        2.577, 2.567, 2.556, 2.546, 2.536,
        2.525, 2.51, 2.49, 2.47, 2.451,
        2.432, 2.413, 2.394, 2.376, 2.357,
        2.339, 2.322, 2.304, 2.287, 2.27,
        2.245, 2.213, 2.182, 2.151, 2.122,
        2.093, 2.065, 2.038, 2.012, 1.986,
        1.944, 1.887, 1.835, 1.787, 1.742,
        1.665, 1.561, 2.952, 2.935, 2.924,
        2.913, 2.902, 2.891, 2.879, 2.868,
        2.858, 2.847, 2.836, 2.82, 2.798,
        2.777, 2.756, 2.736, 2.715, 2.695,
        2.675, 2.655, 2.635, 2.616, 2.597,
        2.578, 2.559, 2.531, 2.495, 2.459,
        2.424, 2.39, 2.357, 2.325, 2.293,
        2.262, 2.233, 2.182, 2.114, 2.05,
        1.992, 1.938, 1.844, 1.721, 3.403,
        3.388, 3.378, 3.368, 3.359, 3.349,
        3.339, 3.33, 3.32, 3.311, 3.301,
        3.287, 3.268, 3.249, 3.231, 3.213,
        3.194, 3.176, 3.158, 3.14, 3.123,
        3.105, 3.088, 3.07, 3.053, 3.028,
        2.994, 2.961, 2.928, 2.896, 2.865,
        2.834, 2.803, 2.773, 2.743, 2.692,
        2.621, 2.554, 2.488, 2.425, 2.307,
        2.12, 4.386, 4.363, 4.347, 4.332,
        4.317, 4.302, 4.287, 4.272, 4.258,
        4.243, 4.229, 4.208, 4.18, 4.153,
        4.127, 4.101, 4.075, 4.051, 4.026,
        4.003, 3.979, 3.956, 3.934, 3.912,
        3.891, 3.86, 3.821, 3.783, 3.747,
        3.712, 3.68, 3.649, 3.62, 3.592,
        3.566, 3.524, 3.471, 3.427, 3.39,
        3.361, 3.323, 3.312, 6.918, 6.864,
        6.829, 6.794, 6.759, 6.724, 6.69,
        6.656, 6.623, 6.589, 6.556, 6.507,
        6.443, 6.38, 6.319, 6.258, 6.199,
        6.142, 6.085, 6.03, 5.976, 5.923,
        5.872, 5.821, 5.773, 5.702, 5.612,
        5.528, 5.449, 5.376, 5.308, 5.245,
        5.189, 5.138, 5.092, 5.027, 4.964,
        4.939, 4.953, 5.005, 5.233, 6.041
     ) ),
    jetCalibrationsHF = cms.vdouble(
        3.223, 2.14, 1.683, 1.364, 1.142,
        0.987, 0.879, 0.804, 0.752, 0.716,
        0.691, 0.667, 0.651, 0.644, 0.641,
        0.641, 0.641, 0.642, 0.644, 0.645,
        0.647, 0.648, 0.65, 0.651, 0.653,
        0.655, 0.658, 0.662, 0.665, 0.668,
        0.671, 0.674, 0.677, 0.681, 0.684,
        0.689, 0.697, 0.705, 0.713, 0.721,
        0.736, 0.764, 2.598, 1.813, 1.462,
        1.206, 1.019, 0.883, 0.783, 0.711,
        0.658, 0.62, 0.592, 0.564, 0.543,
        0.532, 0.526, 0.524, 0.523, 0.524,
        0.524, 0.525, 0.526, 0.527, 0.528,
        0.529, 0.53, 0.532, 0.534, 0.536,
        0.538, 0.541, 0.543, 0.545, 0.547,
        0.549, 0.552, 0.556, 0.561, 0.567,
        0.572, 0.578, 0.589, 0.608
    ),
    jetCalibrationsHGCal = cms.vdouble( (
        1.395, 1.394, 1.394, 1.394, 1.394,
        1.394, 1.393, 1.393, 1.393, 1.393,
        1.393, 1.393, 1.392, 1.392, 1.392,
        1.391, 1.391, 1.391, 1.39, 1.39,
        1.39, 1.389, 1.389, 1.389, 1.388,
        1.388, 1.387, 1.387, 1.386, 1.385,
        1.385, 1.384, 1.383, 1.383, 1.382,
        1.381, 1.379, 1.378, 1.376, 1.374,
        1.371, 1.365, 1.575, 1.574, 1.574,
        1.574, 1.574, 1.574, 1.573, 1.573,
        1.573, 1.573, 1.572, 1.572, 1.572,
        1.571, 1.571, 1.57, 1.57, 1.569,
        1.569, 1.569, 1.568, 1.568, 1.567,
        1.567, 1.566, 1.566, 1.565, 1.564,
        1.563, 1.562, 1.561, 1.56, 1.559,
        1.559, 1.558, 1.556, 1.554, 1.552,
        1.549, 1.547, 1.543, 1.535, 1.846,
        1.845, 1.845, 1.844, 1.844, 1.843,
        1.843, 1.842, 1.842, 1.841, 1.841,
        1.84, 1.839, 1.839, 1.838, 1.837,
        1.836, 1.835, 1.834, 1.833, 1.832,
        1.831, 1.83, 1.829, 1.829, 1.827,
        1.825, 1.824, 1.822, 1.82, 1.818,
        1.816, 1.814, 1.813, 1.811, 1.808,
        1.803, 1.799, 1.794, 1.79, 1.78,
        1.765, 3.377, 3.355, 3.341, 3.326,
        3.312, 3.298, 3.283, 3.269, 3.255,
        3.242, 3.228, 3.207, 3.18, 3.154,
        3.128, 3.102, 3.077, 3.051, 3.027,
        3.002, 2.979, 2.955, 2.932, 2.909,
        2.886, 2.853, 2.811, 2.769, 2.729,
        2.691, 2.654, 2.618, 2.584, 2.551,
        2.519, 2.467, 2.4, 2.341, 2.291,
        2.248, 2.186, 2.149, 1.085, 1.087,
        1.088, 1.089, 1.09, 1.091, 1.092,
        1.093, 1.094, 1.095, 1.097, 1.098,
        1.1, 1.103, 1.105, 1.107, 1.109,
        1.111, 1.113, 1.116, 1.118, 1.12,
        1.122, 1.124, 1.126, 1.13, 1.134,
        1.138, 1.143, 1.147, 1.151, 1.156,
        1.16, 1.164, 1.169, 1.176, 1.187,
        1.198, 1.209, 1.22, 1.242, 1.28,
        61.559, 11.087, 4.083, 1.971, 1.335,
        1.145, 1.09, 1.074, 1.072, 1.072,
        1.074, 1.078, 1.083, 1.088, 1.093,
        1.098, 1.103, 1.108, 1.112, 1.117,
        1.122, 1.127, 1.132, 1.137, 1.142,
        1.149, 1.159, 1.169, 1.179, 1.189,
        1.199, 1.209, 1.218, 1.228, 1.238,
        1.255, 1.28, 1.305, 1.329, 1.354,
        1.403, 1.49, 89.821, 15.567, 5.416,
        2.387, 1.485, 1.218, 1.14, 1.119,
        1.115, 1.116, 1.118, 1.123, 1.129,
        1.135, 1.141, 1.147, 1.153, 1.159,
        1.165, 1.171, 1.178, 1.184, 1.19,
        1.196, 1.202, 1.211, 1.223, 1.236,
        1.248, 1.26, 1.272, 1.284, 1.297,
        1.309, 1.321, 1.342, 1.373, 1.403,
        1.434, 1.464, 1.525, 1.632, 83.76,
        19.529, 8.102, 3.961, 2.461, 1.918,
        1.721, 1.65, 1.624, 1.615, 1.612,
        1.611, 1.611, 1.611, 1.612, 1.612,
        1.613, 1.613, 1.614, 1.614, 1.615,
        1.616, 1.616, 1.617, 1.617, 1.618,
        1.619, 1.62, 1.621, 1.622, 1.623,
        1.624, 1.625, 1.626, 1.628, 1.629,
        1.632, 1.635, 1.637, 1.64, 1.645,
        1.655, 1.262, 1.261, 1.26, 1.259,
        1.259, 1.258, 1.257, 1.256, 1.256,
        1.255, 1.254, 1.253, 1.252, 1.25,
        1.249, 1.247, 1.246, 1.244, 1.243,
        1.242, 1.24, 1.239, 1.237, 1.236,
        1.234, 1.232, 1.229, 1.226, 1.223,
        1.221, 1.218, 1.215, 1.212, 1.209,
        1.206, 1.201, 1.194, 1.186, 1.179,
        1.172, 1.157, 1.132, 1.328, 1.327,
        1.326, 1.326, 1.325, 1.325, 1.324,
        1.324, 1.323, 1.323, 1.322, 1.322,
        1.321, 1.32, 1.319, 1.318, 1.317,
        1.316, 1.315, 1.314, 1.313, 1.312,
        1.311, 1.31, 1.309, 1.308, 1.306,
        1.304, 1.302, 1.3, 1.298, 1.296,
        1.294, 1.292, 1.29, 1.287, 1.282,
        1.277, 1.272, 1.267, 1.257, 1.24,
        1.463, 1.461, 1.46, 1.459, 1.458,
        1.457, 1.456, 1.455, 1.454, 1.453,
        1.452, 1.451, 1.449, 1.447, 1.445,
        1.443, 1.44, 1.438, 1.436, 1.434,
        1.432, 1.43, 1.428, 1.426, 1.424,
        1.421, 1.417, 1.413, 1.409, 1.405,
        1.401, 1.397, 1.393, 1.389, 1.385,
        1.377, 1.367, 1.357, 1.347, 1.337,
        1.316, 1.281, 44.899, 14.731, 7.692,
        4.568, 3.18, 2.562, 2.285, 2.159,
        2.101, 2.072, 2.057, 2.043, 2.031,
        2.021, 2.011, 2.001, 1.991, 1.982,
        1.972, 1.962, 1.952, 1.942, 1.932,
        1.922, 1.912, 1.897, 1.878, 1.858,
        1.838, 1.818, 1.798, 1.779, 1.759,
        1.739, 1.719, 1.685, 1.635, 1.586,
        1.536, 1.487, 1.387, 1.214
     ) ),
    jetPtBins = cms.vdouble(
        0.0, 5.0, 7.5, 10.0, 12.5,
        15.0, 17.5, 20.0, 22.5, 25.0,
        27.5, 30.0, 35.0, 40.0, 45.0,
        50.0, 55.0, 60.0, 65.0, 70.0,
        75.0, 80.0, 85.0, 90.0, 95.0,
        100.0, 110.0, 120.0, 130.0, 140.0,
        150.0, 160.0, 170.0, 180.0, 190.0,
        200.0, 225.0, 250.0, 275.0, 300.0,
        325.0, 400.0, 500.0
    ),
    l1CaloTowers = cms.InputTag("l1tTowerCalibrationProducer","L1CaloTowerCalibratedCollection"),
    tauAbsEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    tauAbsEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    tauCalibrationsBarrel = cms.vdouble( (
        1.917, 1.714, 1.605, 1.514, 1.437,
        1.344, 1.252, 1.188, 1.142, 1.11,
        1.087, 1.071, 1.059, 1.051, 1.044,
        1.038, 1.034, 1.032, 1.032, 1.856,
        1.729, 1.655, 1.589, 1.53, 1.453,
        1.369, 1.301, 1.248, 1.205, 1.17,
        1.143, 1.121, 1.103, 1.084, 1.066,
        1.05, 1.037, 1.034, 2.053, 1.884,
        1.788, 1.702, 1.627, 1.53, 1.426,
        1.345, 1.282, 1.233, 1.194, 1.164,
        1.141, 1.122, 1.102, 1.084, 1.07,
        1.059, 1.057, 1.783, 1.659, 1.588,
        1.524, 1.466, 1.391, 1.309, 1.244,
        1.191, 1.149, 1.116, 1.089, 1.068,
        1.05, 1.031, 1.013, 0.998, 0.986,
        0.983, 1.896, 1.713, 1.613, 1.527,
        1.453, 1.362, 1.27, 1.202, 1.152,
        1.115, 1.088, 1.069, 1.054, 1.044,
        1.033, 1.024, 1.018, 1.015, 1.014,
        1.936, 1.677, 1.544, 1.437, 1.35,
        1.249, 1.156, 1.095, 1.055, 1.028,
        1.011, 1.0, 0.992, 0.987, 0.983,
        0.98, 0.978, 0.978, 0.978, 1.85,
        1.683, 1.59, 1.509, 1.439, 1.351,
        1.258, 1.188, 1.135, 1.096, 1.065,
        1.043, 1.025, 1.012, 0.999, 0.987,
        0.979, 0.973, 0.972, 2.066, 1.784,
        1.638, 1.517, 1.418, 1.301, 1.189,
        1.114, 1.063, 1.029, 1.006, 0.99,
        0.979, 0.972, 0.965, 0.961, 0.958,
        0.957, 0.957, 1.074, 1.063, 1.056,
        1.05, 1.043, 1.034, 1.022, 1.011,
        1.001, 0.992, 0.983, 0.974, 0.966,
        0.959, 0.949, 0.937, 0.921, 0.895,
        0.874, 2.053, 1.757, 1.609, 1.489,
        1.394, 1.285, 1.186, 1.123, 1.083,
        1.057, 1.04, 1.029, 1.022, 1.018,
        1.014, 1.012, 1.01, 1.01, 1.01,
        1.733, 1.628, 1.567, 1.513, 1.463,
        1.399, 1.328, 1.27, 1.224, 1.187,
        1.157, 1.133, 1.114, 1.098, 1.081,
        1.064, 1.05, 1.038, 1.035, 2.009,
        1.852, 1.762, 1.682, 1.611, 1.518,
        1.417, 1.337, 1.274, 1.224, 1.184,
        1.153, 1.128, 1.108, 1.086, 1.066,
        1.049, 1.036, 1.033, 1.806, 1.669,
        1.591, 1.522, 1.461, 1.382, 1.296,
        1.23, 1.177, 1.136, 1.103, 1.078,
        1.058, 1.043, 1.025, 1.01, 0.998,
        0.988, 0.986, 1.944, 1.725, 1.609,
        1.512, 1.431, 1.334, 1.239, 1.173,
        1.126, 1.094, 1.071, 1.056, 1.045,
        1.037, 1.03, 1.024, 1.021, 1.019,
        1.019, 1.9, 1.631, 1.496, 1.389,
        1.304, 1.208, 1.122, 1.068, 1.034,
        1.012, 0.999, 0.99, 0.984, 0.981,
        0.978, 0.976, 0.975, 0.975, 0.975,
        1.682, 1.577, 1.516, 1.46, 1.409,
        1.342, 1.266, 1.203, 1.152, 1.109,
        1.075, 1.046, 1.022, 1.003, 0.98,
        0.958, 0.937, 0.918, 0.913, 1.928,
        1.693, 1.569, 1.466, 1.381, 1.28,
        1.183, 1.116, 1.07, 1.038, 1.016,
        1.001, 0.991, 0.984, 0.977, 0.973,
        0.97, 0.969, 0.969, 1.067, 1.058,
        1.052, 1.047, 1.041, 1.033, 1.023,
        1.014, 1.005, 0.997, 0.989, 0.981,
        0.974, 0.968, 0.959, 0.948, 0.933,
        0.908, 0.886, 1.883, 1.663, 1.548,
        1.453, 1.375, 1.282, 1.193, 1.133,
        1.091, 1.063, 1.044, 1.031, 1.022,
        1.016, 1.01, 1.006, 1.004, 1.003,
        1.003, 1.688, 1.595, 1.541, 1.492,
        1.448, 1.39, 1.325, 1.271, 1.228,
        1.193, 1.164, 1.14, 1.121, 1.105,
        1.087, 1.07, 1.055, 1.041, 1.037,
        2.251, 2.02, 1.891, 1.779, 1.682,
        1.561, 1.434, 1.339, 1.267, 1.213,
        1.173, 1.142, 1.119, 1.102, 1.084,
        1.069, 1.058, 1.051, 1.05, 1.799,
        1.654, 1.572, 1.501, 1.438, 1.359,
        1.275, 1.211, 1.162, 1.125, 1.096,
        1.074, 1.057, 1.044, 1.03, 1.019,
        1.009, 1.003, 1.002, 1.78, 1.63,
        1.547, 1.475, 1.413, 1.335, 1.254,
        1.193, 1.148, 1.114, 1.089, 1.07,
        1.056, 1.045, 1.034, 1.025, 1.018,
        1.014, 1.013, 1.75, 1.549, 1.445,
        1.359, 1.288, 1.205, 1.126, 1.072,
        1.036, 1.012, 0.995, 0.984, 0.976,
        0.971, 0.966, 0.963, 0.961, 0.96,
        0.96, 1.736, 1.61, 1.537, 1.472,
        1.414, 1.339, 1.257, 1.192, 1.141,
        1.1, 1.067, 1.041, 1.021, 1.005,
        0.986, 0.97, 0.956, 0.945, 0.942,
        1.961, 1.712, 1.582, 1.474, 1.386,
        1.281, 1.181, 1.114, 1.068, 1.036,
        1.015, 1.001, 0.991, 0.984, 0.978,
        0.974, 0.971, 0.97, 0.97, 1.065,
        1.056, 1.051, 1.046, 1.04, 1.033,
        1.023, 1.014, 1.005, 0.997, 0.989,
        0.982, 0.974, 0.968, 0.958, 0.946,
        0.93, 0.9, 0.872, 2.047, 1.81,
        1.683, 1.575, 1.485, 1.375, 1.266,
        1.188, 1.133, 1.094, 1.066, 1.046,
        1.032, 1.022, 1.012, 1.005, 1.0,
        0.998, 0.997, 2.022, 1.861, 1.768,
        1.686, 1.613, 1.519, 1.418, 1.338,
        1.275, 1.226, 1.187, 1.157, 1.133,
        1.114, 1.093, 1.074, 1.059, 1.047,
        1.045, 2.503, 2.236, 2.087, 1.956,
        1.843, 1.699, 1.548, 1.434, 1.347,
        1.281, 1.231, 1.192, 1.164, 1.142,
        1.118, 1.099, 1.084, 1.074, 1.072,
        2.253, 2.007, 1.872, 1.755, 1.654,
        1.529, 1.401, 1.305, 1.235, 1.182,
        1.143, 1.115, 1.093, 1.078, 1.061,
        1.048, 1.039, 1.033, 1.033, 2.228,
        2.01, 1.888, 1.782, 1.69, 1.574,
        1.453, 1.361, 1.292, 1.239, 1.2,
        1.17, 1.147, 1.13, 1.112, 1.097,
        1.085, 1.078, 1.077, 2.527, 2.136,
        1.934, 1.769, 1.633, 1.475, 1.326,
        1.226, 1.159, 1.114, 1.084, 1.064,
        1.051, 1.042, 1.034, 1.028, 1.025,
        1.024, 1.024, 2.097, 1.908, 1.801,
        1.706, 1.622, 1.514, 1.398, 1.308,
        1.238, 1.183, 1.14, 1.106, 1.08,
        1.06, 1.038, 1.018, 1.002, 0.991,
        0.988, 2.479, 2.106, 1.912, 1.753,
        1.623, 1.47, 1.326, 1.229, 1.163,
        1.12, 1.09, 1.07, 1.057, 1.048,
        1.04, 1.034, 1.031, 1.029, 1.029,
        2.097, 1.906, 1.796, 1.699, 1.612,
        1.5, 1.378, 1.281, 1.205, 1.145,
        1.098, 1.06, 1.031, 1.007, 0.981,
        0.958, 0.939, 0.923, 0.92
     ) ),
    tauCalibrationsHGCal = cms.vdouble(
        1.665, 1.556, 1.495, 1.443, 1.398,
        1.342, 1.285, 1.242, 1.211, 1.188,
        1.17, 1.158, 1.148, 1.141, 1.134,
        1.128, 1.124, 1.122, 1.121, 1.646,
        1.525, 1.459, 1.402, 1.353, 1.293,
        1.231, 1.186, 1.153, 1.129, 1.112,
        1.099, 1.089, 1.082, 1.075, 1.069,
        1.065, 1.063, 1.063, 1.826, 1.63,
        1.528, 1.444, 1.376, 1.294, 1.218,
        1.166, 1.13, 1.107, 1.091, 1.08,
        1.072, 1.067, 1.063, 1.06, 1.058,
        1.057, 1.057, 2.031, 1.762, 1.624,
        1.514, 1.424, 1.321, 1.226, 1.164,
        1.124, 1.098, 1.081, 1.069, 1.062,
        1.057, 1.053, 1.05, 1.049, 1.048,
        1.048, 1.396, 1.328, 1.291, 1.259,
        1.232, 1.198, 1.164, 1.139, 1.12,
        1.107, 1.097, 1.089, 1.084, 1.08,
        1.076, 1.073, 1.071, 1.07, 1.07,
        1.242, 1.214, 1.197, 1.182, 1.168,
        1.149, 1.128, 1.111, 1.097, 1.085,
        1.075, 1.067, 1.06, 1.055, 1.048,
        1.042, 1.036, 1.03, 1.029, 1.491,
        1.368, 1.305, 1.253, 1.211, 1.161,
        1.115, 1.084, 1.064, 1.05, 1.041,
        1.035, 1.031, 1.028, 1.026, 1.024,
        1.023, 1.023, 1.023, 1.348, 1.289,
        1.255, 1.225, 1.199, 1.165, 1.127,
        1.098, 1.075, 1.057, 1.043, 1.031,
        1.022, 1.016, 1.008, 1.001, 0.995,
        0.991, 0.99, 1.422, 1.373, 1.345,
        1.32, 1.297, 1.266, 1.232, 1.205,
        1.183, 1.165, 1.15, 1.138, 1.128,
        1.12, 1.111, 1.102, 1.095, 1.088,
        1.086, 1.35, 1.322, 1.304, 1.288,
        1.272, 1.25, 1.224, 1.201, 1.18,
        1.162, 1.146, 1.132, 1.119, 1.108,
        1.093, 1.078, 1.061, 1.038, 1.026,
        1.44, 1.373, 1.334, 1.3, 1.27,
        1.231, 1.189, 1.155, 1.129, 1.108,
        1.092, 1.079, 1.069, 1.061, 1.053,
        1.045, 1.038, 1.033, 1.032, 1.356,
        1.317, 1.293, 1.271, 1.25, 1.221,
        1.186, 1.156, 1.129, 1.105, 1.085,
        1.067, 1.051, 1.037, 1.019, 1.0,
        0.98, 0.954, 0.941
    ),
    tauL1egInfoBarrel = cms.VPSet(
        cms.PSet(
            l1egCount = cms.double(0.0),
            l1egEmFractions = cms.vdouble(0.0, 0.091, 0.317, 1.05)
        ),
        cms.PSet(
            l1egCount = cms.double(1.0),
            l1egEmFractions = cms.vdouble(0.0, 0.634, 0.888, 1.05)
        ),
        cms.PSet(
            l1egCount = cms.double(2.0),
            l1egEmFractions = cms.vdouble(0.0, 0.821, 0.957, 1.05)
        )
    ),
    tauL1egInfoHGCal = cms.VPSet(cms.PSet(
        l1egCount = cms.double(0.0),
        l1egEmFractions = cms.vdouble(0.0, 0.473, 0.72, 0.894, 1.05)
    )),
    tauPtBins = cms.vdouble(
        0.0, 5.0, 7.5, 10.0, 12.5,
        15.0, 20.0, 25.0, 30.0, 35.0,
        40.0, 45.0, 50.0, 55.0, 60.0,
        70.0, 80.0, 100.0, 150.0, 200.0
    )
)


process.l1tEGammaClusterEmuProducer = cms.EDProducer("L1EGCrystalClusterEmulatorProducer",
    calib = cms.PSet(
        etaBins = cms.vdouble(
            0.087, 0.174, 0.261, 0.348, 0.435,
            0.522, 0.609, 0.696, 0.783, 0.87,
            0.957, 1.044, 1.131, 1.218, 1.305,
            1.392, 1.479
        ),
        ptBins = cms.vdouble(
            12, 20, 30, 40, 55,
            90, 1000000.0
        ),
        scale = cms.vdouble(
            1.298, 1.287, 1.309, 1.298, 1.309,
            1.309, 1.309, 1.298, 1.309, 1.298,
            1.309, 1.309, 1.309, 1.32, 1.309,
            1.32, 1.309, 1.1742, 1.1639, 1.1639,
            1.1639, 1.1639, 1.1639, 1.1639, 1.1742,
            1.1742, 1.1639, 1.1639, 1.1742, 1.1639,
            1.1639, 1.1742, 1.1742, 1.1536000000000002, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.1, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.07, 1.07,
            1.07, 1.07, 1.07, 1.07, 1.07,
            1.08, 1.07, 1.07, 1.08, 1.08,
            1.07, 1.08, 1.08, 1.08, 1.08,
            1.06, 1.06, 1.06, 1.06, 1.05,
            1.05, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.04, 1.04, 1.04,
            1.04, 1.05, 1.04, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05
        )
    ),
    ecalTPEB = cms.InputTag("simEcalEBTriggerPrimitiveDigis"),
    hcalTP = cms.InputTag("simHcalTriggerPrimitiveDigis")
)


process.l1tFwdMuonsGmt = cms.EDProducer("Phase2L1TGMTFwdMuonTranslator",
    emtfTracks = cms.InputTag("simEmtfDigisPhase2"),
    omtfTracks = cms.InputTag("simOmtfPhase2Digis","OMTF"),
    stubs = cms.InputTag("l1tStubsGmt","tps")
)


process.l1tGMTFilteredMuons = cms.EDProducer("Phase2L1TGMTFilter",
    applyLowPtFilter = cms.bool(True),
    etaBE = cms.double(0.9),
    ptBarrelMin = cms.int32(8),
    ptEndcapMin = cms.int32(8),
    srcMuons = cms.InputTag("l1tTkMuonsGmt")
)


process.l1tGTTInputProducer = cms.EDProducer("L1GTTInputProducer",
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tTTTracksFromTrackletEmulation","Level1TTTracks"),
    outputCollectionName = cms.string('Level1TTTracksConverted'),
    setTrackWordBits = cms.bool(True)
)


process.l1tGTTInputProducerExtended = cms.EDProducer("L1GTTInputProducer",
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tTTTracksFromExtendedTrackletEmulation","Level1TTTracks"),
    outputCollectionName = cms.string('Level1TTTracksExtendedConverted'),
    setTrackWordBits = cms.bool(True)
)


process.l1tHFnoseVFEProducer = cms.EDProducer("HFNoseVFEProducer",
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalVFEProcessorSums'),
        calibrationCfg_ee = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        calibrationCfg_hesc = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(
                values = cms.vdouble(1.0)
            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.0),
            lsb = cms.double(0.067138671875),
            thicknessCorrection = cms.vdouble(1.0)
        ),
        calibrationCfg_hesi = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
        ),
        calibrationCfg_nose = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0.0, 39.500245, 39.756638, 39.756638, 39.756638,
                39.756638, 66.020266, 92.283895, 92.283895
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        compressionCfg_hdm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(3)
        ),
        compressionCfg_ldm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(1)
        ),
        linearizationCfg_sc = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(68.75),
            linLSB = cms.double(0.067138671875),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(55),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(1000)
        ),
        linearizationCfg_si = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(100),
            linLSB = cms.double(0.09765625),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(60),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(10000)
        ),
        summationCfg = cms.PSet(
            noiseScintillator = cms.PSet(

            ),
            noiseSilicon = cms.PSet(

            ),
            noiseThreshold = cms.double(3),
            scintillatorCellLSB_MIP = cms.double(0.067138671875),
            siliconCellLSB_fC = cms.double(0.09765625)
        )
    ),
    noseDigis = cms.InputTag("simHFNoseUnsuppressedDigis","HFNose")
)


process.l1tHGCalBackEndLayer1Producer = cms.EDProducer("HGCalBackendLayer1Producer",
    InputTriggerCells = cms.InputTag("l1tHGCalConcentratorProducer","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        C2d_parameters = cms.PSet(
            applyLayerCalibration = cms.bool(True),
            calibSF_cluster = cms.double(1.0),
            clusterType = cms.string('dummyC2d'),
            layerWeights = cms.vdouble(
                0.0, 0.0183664, 0.0, 0.0305622, 0.0,
                0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
                0.0, 0.0185754, 0.0, 0.0204934, 0.0,
                0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
                0.0, 0.0238385, 0.0, 0.0301146, 0.0,
                0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
                0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
                0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
                0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
                0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
                0.121674, 0.1171, 0.328053
            )
        ),
        ProcessorName = cms.string('HGCalBackendLayer1Processor2DClustering')
    )
)


process.l1tHGCalBackEndLayer1ProducerHFNose = cms.EDProducer("HGCalBackendLayer1Producer",
    InputTriggerCells = cms.InputTag("l1tHGCalConcentratorProducerHFNose","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        C2d_parameters = cms.PSet(
            applyLayerCalibration = cms.bool(True),
            calibSF_cluster = cms.double(1.0),
            clusterType = cms.string('dummyC2d'),
            layerWeights = cms.vdouble(
                0.0, 0.0183664, 0.0, 0.0305622, 0.0,
                0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
                0.0, 0.0185754, 0.0, 0.0204934, 0.0,
                0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
                0.0, 0.0238385, 0.0, 0.0301146, 0.0,
                0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
                0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
                0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
                0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
                0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
                0.121674, 0.1171, 0.328053
            )
        ),
        ProcessorName = cms.string('HGCalBackendLayer1Processor2DClustering')
    )
)


process.l1tHGCalBackEndLayer2Producer = cms.EDProducer("HGCalBackendLayer2Producer",
    InputCluster = cms.InputTag("l1tHGCalBackEndLayer1Producer","HGCalBackendLayer1Processor2DClustering"),
    ProcessorParameters = cms.PSet(
        C3d_parameters = cms.PSet(
            histoMax_C3d_clustering_parameters = cms.PSet(
                AlgoName = cms.string('HGCalHistoClusteringWrapper'),
                EGIdentification = cms.PSet(
                    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
                    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
                    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
                    CategoriesPtMin = cms.vdouble(0.0, 0.0),
                    Inputs = cms.vstring(
                        'cl3d_coreshowerlength',
                        'cl3d_showerlength',
                        'cl3d_firstlayer',
                        'cl3d_maxlayer',
                        'cl3d_szz',
                        'cl3d_srrmean',
                        'cl3d_srrtot',
                        'cl3d_seetot',
                        'cl3d_spptot'
                    ),
                    Weights = cms.vstring(
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
                    ),
                    WorkingPoints = cms.VPSet(
                        cms.PSet(
                            Name = cms.string('tight'),
                            WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
                        ),
                        cms.PSet(
                            Name = cms.string('loose'),
                            WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
                        )
                    )
                ),
                cluster_association = cms.string('NearestNeighbour'),
                dR_multicluster = cms.double(0.0),
                dR_multicluster_byLayer_coefficientA = cms.vdouble(
                    0, 0.015, 0.015, 0.015, 0.015,
                    0.015, 0.015, 0.015, 0.02, 0.02,
                    0.02, 0.02, 0.02, 0.02, 0.02,
                    0.03, 0.03, 0.03, 0.03, 0.03,
                    0.03, 0.03, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05
                ),
                dR_multicluster_byLayer_coefficientB = cms.vdouble(
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0
                ),
                minPt_multicluster = cms.double(0.5),
                shape_distance = cms.double(0.015),
                shape_threshold = cms.double(1.0)
            ),
            histoMax_C3d_seeding_parameters = cms.PSet(
                binSumsHisto = cms.vuint32(
                    13, 11, 11, 11, 9,
                    9, 9, 7, 7, 7,
                    7, 7, 7, 5, 5,
                    5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5,
                    5, 5, 5, 3, 3,
                    3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3,
                    3, 3
                ),
                kROverZMax = cms.double(0.58),
                kROverZMin = cms.double(0.076),
                nBins_X1_histo_multicluster = cms.uint32(42),
                nBins_X2_histo_multicluster = cms.uint32(216),
                neighbour_weights = cms.vdouble(
                    0, 0.25, 0, 0.25, 0,
                    0.25, 0, 0.25, 0
                ),
                seed_position = cms.string('TCWeighted'),
                seed_smoothing_ecal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.1,
                    1.0, 1.0, 1.0, 1.0
                ),
                seed_smoothing_hcal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 2.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0
                ),
                seeding_space = cms.string('RPhi'),
                seeds_norm_by_area = cms.bool(False),
                threshold_histo_multicluster = cms.double(20.0),
                type_histoalgo = cms.string('HistoMaxC3d')
            ),
            histoMax_C3d_sorting_truncation_parameters = cms.PSet(
                AlgoName = cms.string('HGCalSortingTruncationWrapper'),
                maxTCs = cms.uint32(80)
            ),
            type_multicluster = cms.string('Histo')
        ),
        ProcessorName = cms.string('HGCalBackendLayer2Processor3DClustering'),
        energy_interpretations = cms.VPSet(cms.PSet(
            dr_bylayer = cms.vdouble(
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015
            ),
            layer_containment_corrs = cms.vdouble(
                0.0, 0.0, 1.38, 0.97, 1.11,
                0.92, 1.06, 1.01, 1.06, 0.89,
                1.0, 1.06, 0.89, 1.62, 1.83
            ),
            scale_correction_coeff = cms.vdouble(53.94, -27.15),
            type = cms.string('HGCalTriggerClusterInterpretationEM')
        ))
    )
)


process.l1tHGCalBackEndLayer2ProducerHFNose = cms.EDProducer("HGCalBackendLayer2Producer",
    InputCluster = cms.InputTag("l1tHGCalBackEndLayer1ProducerHFNose","HGCalBackendLayer1Processor2DClustering"),
    ProcessorParameters = cms.PSet(
        C3d_parameters = cms.PSet(
            histoMax_C3d_clustering_parameters = cms.PSet(
                AlgoName = cms.string('HGCalHistoClusteringWrapper'),
                EGIdentification = cms.PSet(
                    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
                    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
                    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
                    CategoriesPtMin = cms.vdouble(0.0, 0.0),
                    Inputs = cms.vstring(
                        'cl3d_coreshowerlength',
                        'cl3d_showerlength',
                        'cl3d_firstlayer',
                        'cl3d_maxlayer',
                        'cl3d_szz',
                        'cl3d_srrmean',
                        'cl3d_srrtot',
                        'cl3d_seetot',
                        'cl3d_spptot'
                    ),
                    Weights = cms.vstring(
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
                    ),
                    WorkingPoints = cms.VPSet(
                        cms.PSet(
                            Name = cms.string('tight'),
                            WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
                        ),
                        cms.PSet(
                            Name = cms.string('loose'),
                            WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
                        )
                    )
                ),
                cluster_association = cms.string('NearestNeighbour'),
                dR_multicluster = cms.double(0.0),
                dR_multicluster_byLayer_coefficientA = cms.vdouble(
                    0, 0.015, 0.015, 0.015, 0.015,
                    0.015, 0.015, 0.015, 0.02, 0.02,
                    0.02, 0.02, 0.02, 0.02, 0.02,
                    0.03, 0.03, 0.03, 0.03, 0.03,
                    0.03, 0.03, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05
                ),
                dR_multicluster_byLayer_coefficientB = cms.vdouble(
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0
                ),
                minPt_multicluster = cms.double(0.5),
                shape_distance = cms.double(0.015),
                shape_threshold = cms.double(1.0)
            ),
            histoMax_C3d_seeding_parameters = cms.PSet(
                binSumsHisto = cms.vuint32(13, 11, 9, 9),
                kROverZMax = cms.double(0.1),
                kROverZMin = cms.double(0.025),
                nBins_X1_histo_multicluster = cms.uint32(4),
                nBins_X2_histo_multicluster = cms.uint32(216),
                neighbour_weights = cms.vdouble(
                    0, 0.25, 0, 0.25, 0,
                    0.25, 0, 0.25, 0
                ),
                seed_position = cms.string('TCWeighted'),
                seed_smoothing_ecal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.1,
                    1.0, 1.0, 1.0, 1.0
                ),
                seed_smoothing_hcal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 2.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0
                ),
                seeding_space = cms.string('RPhi'),
                seeds_norm_by_area = cms.bool(False),
                threshold_histo_multicluster = cms.double(20.0),
                type_histoalgo = cms.string('HistoMaxC3d')
            ),
            histoMax_C3d_sorting_truncation_parameters = cms.PSet(
                AlgoName = cms.string('HGCalSortingTruncationWrapper'),
                maxTCs = cms.uint32(80)
            ),
            type_multicluster = cms.string('Histo')
        ),
        ProcessorName = cms.string('HGCalBackendLayer2Processor3DClustering'),
        energy_interpretations = cms.VPSet(cms.PSet(
            dr_bylayer = cms.vdouble(
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015
            ),
            layer_containment_corrs = cms.vdouble(
                0.0, 0.0, 1.38, 0.97, 1.11,
                0.92, 1.06, 1.01, 1.06, 0.89,
                1.0, 1.06, 0.89, 1.62, 1.83
            ),
            scale_correction_coeff = cms.vdouble(53.94, -27.15),
            type = cms.string('HGCalTriggerClusterInterpretationEM')
        ))
    )
)


process.l1tHGCalBackEndStage1Producer = cms.EDProducer("HGCalBackendStage1Producer",
    C2d_parameters = cms.PSet(
        applyLayerCalibration = cms.bool(True),
        calibSF_cluster = cms.double(1.0),
        clusterType = cms.string('dummyC2d'),
        layerWeights = cms.vdouble(
            0.0, 0.0183664, 0.0, 0.0305622, 0.0,
            0.0162589, 0.0, 0.0143918, 0.0, 0.0134475,
            0.0, 0.0185754, 0.0, 0.0204934, 0.0,
            0.016901, 0.0, 0.0207958, 0.0, 0.0167985,
            0.0, 0.0238385, 0.0, 0.0301146, 0.0,
            0.0274622, 0.0, 0.0468671, 0.0, 0.078819,
            0.0555831, 0.0609312, 0.0610768, 0.0657626, 0.0465653,
            0.0629383, 0.0610061, 0.0517326, 0.0492882, 0.0699336,
            0.0673457, 0.119896, 0.125327, 0.143235, 0.153295,
            0.104777, 0.109345, 0.161386, 0.174656, 0.108053,
            0.121674, 0.1171, 0.328053
        )
    ),
    InputTriggerCells = cms.InputTag("l1tHGCalConcentratorProducer","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalBackendStage1Processor'),
        truncation_parameters = cms.PSet(
            AlgoName = cms.string('HGCalStage1TruncationWrapper'),
            doTruncation = cms.bool(True),
            maxTcsPerBin = cms.vuint32(
                2, 7, 27, 24, 19,
                17, 16, 15, 14, 14,
                13, 13, 13, 12, 12,
                12, 11, 11, 11, 10,
                10, 10, 10, 10, 9,
                9, 10, 9, 9, 9,
                8, 8, 7, 5, 3,
                3, 3, 3, 3, 3,
                3, 3
            ),
            phiSectorEdges = cms.vdouble(
                0.98901991, 0.72722052, 0.6981317, 0.87266463, 0.93084227,
                0.90175345, 0.87266463, 0.90175345, 0.95993109, 0.95993109,
                0.93084227, 0.93084227, 0.95993109, 0.98901991, 0.95993109,
                0.95993109, 0.95993109, 0.98901991, 0.98901991, 0.95993109,
                0.95993109, 0.98901991, 0.98901991, 0.98901991, 0.98901991,
                0.98901991, 1.01810873, 0.98901991, 0.98901991, 0.98901991,
                0.98901991, 0.98901991, 0.98901991, 0.98901991, 1.04719755,
                1.04719755, 1.04719755, 1.04719755, 1.01810873, 1.04719755,
                1.01810873, 1.01810873
            ),
            rozBins = cms.uint32(42),
            rozMax = cms.double(0.55508006),
            rozMin = cms.double(0.07587128)
        )
    )
)


process.l1tHGCalBackEndStage2Producer = cms.EDProducer("HGCalBackendLayer2Producer",
    InputCluster = cms.InputTag("l1tHGCalBackEndStage1Producer","HGCalBackendStage1Processor"),
    ProcessorParameters = cms.PSet(
        C3d_parameters = cms.PSet(
            histoMax_C3d_clustering_parameters = cms.PSet(
                AlgoName = cms.string('HGCalHistoClusteringWrapper'),
                EGIdentification = cms.PSet(
                    CategoriesEtaMax = cms.vdouble(2.7, 3.0),
                    CategoriesEtaMin = cms.vdouble(1.5, 2.7),
                    CategoriesPtMax = cms.vdouble(1000000.0, 1000000.0),
                    CategoriesPtMin = cms.vdouble(0.0, 0.0),
                    Inputs = cms.vstring(
                        'cl3d_coreshowerlength',
                        'cl3d_showerlength',
                        'cl3d_firstlayer',
                        'cl3d_maxlayer',
                        'cl3d_szz',
                        'cl3d_srrmean',
                        'cl3d_srrtot',
                        'cl3d_seetot',
                        'cl3d_spptot'
                    ),
                    Weights = cms.vstring(
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_loweta_v0.xml',
                        'L1Trigger/L1THGCal/data/egamma_id_histomax_3151_higheta_v0.xml'
                    ),
                    WorkingPoints = cms.VPSet(
                        cms.PSet(
                            Name = cms.string('tight'),
                            WorkingPoint = cms.vdouble(0.8292287, 0.9932326)
                        ),
                        cms.PSet(
                            Name = cms.string('loose'),
                            WorkingPoint = cms.vdouble(-0.7099538, 0.9611762)
                        )
                    )
                ),
                cluster_association = cms.string('NearestNeighbour'),
                dR_multicluster = cms.double(0.0),
                dR_multicluster_byLayer_coefficientA = cms.vdouble(
                    0, 0.015, 0.015, 0.015, 0.015,
                    0.015, 0.015, 0.015, 0.02, 0.02,
                    0.02, 0.02, 0.02, 0.02, 0.02,
                    0.03, 0.03, 0.03, 0.03, 0.03,
                    0.03, 0.03, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.04, 0.04, 0.04, 0.04, 0.04,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05
                ),
                dR_multicluster_byLayer_coefficientB = cms.vdouble(
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0,
                    0, 0, 0
                ),
                minPt_multicluster = cms.double(0.5),
                shape_distance = cms.double(0.015),
                shape_threshold = cms.double(1.0)
            ),
            histoMax_C3d_seeding_parameters = cms.PSet(
                binSumsHisto = cms.vuint32(
                    13, 11, 11, 11, 9,
                    9, 9, 7, 7, 7,
                    7, 7, 7, 5, 5,
                    5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5,
                    5, 5, 5, 3, 3,
                    3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3,
                    3, 3
                ),
                kROverZMax = cms.double(0.58),
                kROverZMin = cms.double(0.076),
                nBins_X1_histo_multicluster = cms.uint32(42),
                nBins_X2_histo_multicluster = cms.uint32(216),
                neighbour_weights = cms.vdouble(
                    0, 0.25, 0, 0.25, 0,
                    0.25, 0, 0.25, 0
                ),
                seed_position = cms.string('TCWeighted'),
                seed_smoothing_ecal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.1,
                    1.0, 1.0, 1.0, 1.0
                ),
                seed_smoothing_hcal = cms.vdouble(
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 2.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0,
                    1.0, 1.0, 1.0, 1.0, 1.0
                ),
                seeding_space = cms.string('RPhi'),
                seeds_norm_by_area = cms.bool(False),
                threshold_histo_multicluster = cms.double(20.0),
                type_histoalgo = cms.string('HistoMaxC3d')
            ),
            histoMax_C3d_sorting_truncation_parameters = cms.PSet(
                AlgoName = cms.string('HGCalSortingTruncationWrapper'),
                maxTCs = cms.uint32(80)
            ),
            type_multicluster = cms.string('Histo')
        ),
        ProcessorName = cms.string('HGCalBackendLayer2Processor3DClustering'),
        energy_interpretations = cms.VPSet(cms.PSet(
            dr_bylayer = cms.vdouble(
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015,
                0.015, 0.015, 0.015, 0.015, 0.015
            ),
            layer_containment_corrs = cms.vdouble(
                0.0, 0.0, 1.38, 0.97, 1.11,
                0.92, 1.06, 1.01, 1.06, 0.89,
                1.0, 1.06, 0.89, 1.62, 1.83
            ),
            scale_correction_coeff = cms.vdouble(53.94, -27.15),
            type = cms.string('HGCalTriggerClusterInterpretationEM')
        ))
    )
)


process.l1tHGCalConcentratorProducer = cms.EDProducer("HGCalConcentratorProducer",
    InputTriggerCells = cms.InputTag("l1tHGCalVFEProducer","HGCalVFEProcessorSums"),
    InputTriggerSums = cms.InputTag("l1tHGCalVFEProducer","HGCalVFEProcessorSums"),
    ProcessorParameters = cms.PSet(
        Method = cms.vstring(
            'thresholdSelect',
            'thresholdSelect',
            'thresholdSelect'
        ),
        ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
        allTrigCellsInTrigSums = cms.bool(True),
        coarsenTriggerCells = cms.vuint32(0, 0, 0),
        ctcSize = cms.vuint32(
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2
        ),
        fixedDataSizePerHGCROC = cms.bool(False),
        threshold_scintillator = cms.double(2.0),
        threshold_silicon = cms.double(2.0)
    )
)


process.l1tHGCalConcentratorProducerHFNose = cms.EDProducer("HGCalConcentratorProducer",
    InputTriggerCells = cms.InputTag("l1tHFnoseVFEProducer","HGCalVFEProcessorSums"),
    InputTriggerSums = cms.InputTag("l1tHFnoseVFEProducer","HGCalVFEProcessorSums"),
    ProcessorParameters = cms.PSet(
        Method = cms.vstring(
            'thresholdSelect',
            'thresholdSelect',
            'thresholdSelect'
        ),
        ProcessorName = cms.string('HGCalConcentratorProcessorSelection'),
        allTrigCellsInTrigSums = cms.bool(True),
        coarsenTriggerCells = cms.vuint32(0, 0, 0),
        ctcSize = cms.vuint32(
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2, 2, 2, 2,
            2, 2
        ),
        fixedDataSizePerHGCROC = cms.bool(False),
        threshold_scintillator = cms.double(2.0),
        threshold_silicon = cms.double(2.0)
    )
)


process.l1tHGCalEnergySplitTowerMapProducer = cms.EDProducer("HGCalTowerMapProducer",
    InputTriggerSums = cms.InputTag("l1tHGCalConcentratorProducer","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerMapProcessor'),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(False),
                maxEta = cms.double(3.045),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(1.305),
                minPhi = cms.double(-3.141592653589793),
                moduleTowerMapping = cms.FileInPath('L1Trigger/L1THGCal/data/tower_per_module_silic8_scint16.txt'),
                nBinsEta = cms.int32(20),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(True)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalEnergySplitTowerProducer = cms.EDProducer("HGCalTowerProducer",
    InputTowerMaps = cms.InputTag("l1tHGCalEnergySplitTowerMapProducer","HGCalTowerMapProcessor"),
    InputTriggerCells = cms.InputTag("l1tHGCalBackEndLayer1Producer","HGCalBackendLayer1Processor2DClustering"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerProcessor'),
        includeTrigCells = cms.bool(False),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(False),
                maxEta = cms.double(3.0),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(1.479),
                minPhi = cms.double(-3.141592653589793),
                nBinsEta = cms.int32(18),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(False)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalTowerMapProducer = cms.EDProducer("HGCalTowerMapProducer",
    InputTriggerSums = cms.InputTag("l1tHGCalConcentratorProducer","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerMapProcessor'),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(False),
                maxEta = cms.double(3.0),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(1.479),
                minPhi = cms.double(-3.141592653589793),
                nBinsEta = cms.int32(18),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(False)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalTowerMapProducerHFNose = cms.EDProducer("HGCalTowerMapProducer",
    InputTriggerSums = cms.InputTag("l1tHGCalConcentratorProducerHFNose","HGCalConcentratorProcessorSelection"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerMapProcessor'),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(True),
                maxEta = cms.double(4.2),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(3.0),
                minPhi = cms.double(-3.141592653589793),
                nBinsEta = cms.int32(18),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(False)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalTowerProducer = cms.EDProducer("HGCalTowerProducer",
    InputTowerMaps = cms.InputTag("l1tHGCalTowerMapProducer","HGCalTowerMapProcessor"),
    InputTriggerCells = cms.InputTag("l1tHGCalBackEndLayer1Producer","HGCalBackendLayer1Processor2DClustering"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerProcessor'),
        includeTrigCells = cms.bool(False),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(False),
                maxEta = cms.double(3.0),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(1.479),
                minPhi = cms.double(-3.141592653589793),
                nBinsEta = cms.int32(18),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(False)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalTowerProducerHFNose = cms.EDProducer("HGCalTowerProducer",
    InputTowerMaps = cms.InputTag("l1tHGCalTowerMapProducerHFNose","HGCalTowerMapProcessor"),
    InputTriggerCells = cms.InputTag("l1tHGCalBackEndLayer1ProducerHFNose","HGCalBackendLayer1Processor2DClustering"),
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalTowerProcessor'),
        includeTrigCells = cms.bool(False),
        towermap_parameters = cms.PSet(
            AlgoName = cms.string('HGCalTowerMapsWrapper'),
            L1TTriggerTowerConfig = cms.PSet(
                binsEta = cms.vdouble(),
                binsPhi = cms.vdouble(),
                doNose = cms.bool(True),
                maxEta = cms.double(4.2),
                maxPhi = cms.double(3.141592653589793),
                minEta = cms.double(3.0),
                minPhi = cms.double(-3.141592653589793),
                nBinsEta = cms.int32(18),
                nBinsPhi = cms.int32(72),
                readMappingFile = cms.bool(False),
                splitModuleSum = cms.bool(False)
            ),
            layerWeights = cms.vdouble(),
            useLayerWeights = cms.bool(False)
        )
    )
)


process.l1tHGCalVFEProducer = cms.EDProducer("HGCalVFEProducer",
    ProcessorParameters = cms.PSet(
        ProcessorName = cms.string('HGCalVFEProcessorSums'),
        calibrationCfg_ee = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        calibrationCfg_hesc = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(
                values = cms.vdouble(1.0)
            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.0),
            lsb = cms.double(0.067138671875),
            thicknessCorrection = cms.vdouble(1.0)
        ),
        calibrationCfg_hesi = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0, 8.894541, 0, 21.875814, 0,
                21.875814, 0, 21.875814, 0, 21.875814,
                0, 21.865764, 0, 21.875814, 0,
                21.876338, 0, 21.876338, 0, 21.876338,
                0, 21.876338, 0, 21.876338, 0,
                21.876338, 0, 21.876338, 0, 83.906398,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                51.444192, 51.444192, 51.444192, 51.444192, 51.444192,
                69.513118, 87.582044, 87.582044, 87.582044, 87.582044,
                87.582044, 87.214571, 86.888309, 86.92952, 86.92952,
                86.92952
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.0, 1.0, 1.0)
        ),
        calibrationCfg_nose = cms.PSet(
            chargeCollectionEfficiency = cms.PSet(

            ),
            dEdXweights = cms.vdouble(
                0.0, 39.500245, 39.756638, 39.756638, 39.756638,
                39.756638, 66.020266, 92.283895, 92.283895
            ),
            fCperMIP = cms.vdouble(1.25, 2.57, 3.88),
            lsb = cms.double(0.09765625),
            thicknessCorrection = cms.vdouble(1.132, 1.092, 1.084)
        ),
        compressionCfg_hdm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(3)
        ),
        compressionCfg_ldm = cms.PSet(
            exponentBits = cms.uint32(4),
            mantissaBits = cms.uint32(3),
            rounding = cms.bool(True),
            truncationBits = cms.uint32(1)
        ),
        linearizationCfg_sc = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(68.75),
            linLSB = cms.double(0.067138671875),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(55),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(1000)
        ),
        linearizationCfg_si = cms.PSet(
            adcnBits = cms.uint32(10),
            adcsaturation = cms.double(100),
            linLSB = cms.double(0.09765625),
            linnBits = cms.uint32(17),
            oot_coefficients = cms.vdouble(0.0, 0.0),
            tdcOnset = cms.double(60),
            tdcnBits = cms.uint32(12),
            tdcsaturation = cms.double(10000)
        ),
        summationCfg = cms.PSet(
            noiseScintillator = cms.PSet(

            ),
            noiseSilicon = cms.PSet(

            ),
            noiseThreshold = cms.double(3),
            scintillatorCellLSB_MIP = cms.double(0.067138671875),
            siliconCellLSB_fC = cms.double(0.09765625)
        )
    ),
    bhDigis = cms.InputTag("simHGCalUnsuppressedDigis","HEback"),
    eeDigis = cms.InputTag("simHGCalUnsuppressedDigis","EE"),
    fhDigis = cms.InputTag("simHGCalUnsuppressedDigis","HEfront")
)


process.l1tHPSPFTauProducer = cms.EDProducer("L1HPSPFTauProducer",
    HW = cms.bool(True),
    debug = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nTaus = cms.int32(16),
    srcL1PFCands = cms.InputTag("l1tLayer1","Puppi"),
    srcL1PFJets = cms.InputTag("l1tPhase1JetCalibrator9x9trimmed","Phase1L1TJetFromPfCandidates"),
    useJets = cms.bool(False)
)


process.l1tKMTFMuonsGmt = cms.EDProducer("Phase2L1TGMTKMTFProducer",
    Ndisplaced = cms.uint32(12),
    Nprompt = cms.uint32(12),
    algo = cms.PSet(
        aPhi = cms.vdouble(5.6533349391874275, 0.03477876333443834, 0.032506522838098864, 0.024752809174909053),
        aPhiB = cms.vdouble(-2.02, -0.2994087741381382, -0.4033668521165302, -0.3592231728688621),
        aPhiBNLO = cms.vdouble(9.04133e-05, 0, 0, 0),
        bPhi = cms.vdouble(-1, 0.18245, 0.20898, 0.17286),
        bPhiB = cms.vdouble(-1, 1.18245, 1.20898, 1.17286),
        chiSquareCutDisp = cms.vint32(),
        chiSquareCutDispPattern = cms.vint32(),
        chiSquareCutOffDisp = cms.vint32(),
        chiSquareCutOffPrompt = cms.vint32(),
        chiSquareCutPrompt = cms.vint32(),
        chiSquareCutPromptPattern = cms.vint32(),
        chiSquareDisp1 = cms.vdouble(0.241, 0.575, 0.892),
        chiSquareDisp2 = cms.vdouble(0.347, 0.707),
        chiSquareDisp3 = cms.vdouble(0.336),
        chiSquareErrADisp1 = cms.vint32(21, 23, 45),
        chiSquareErrADisp2 = cms.vint32(14, 28),
        chiSquareErrADisp3 = cms.vint32(29),
        chiSquareErrAPrompt1 = cms.vint32(21, 24, 33),
        chiSquareErrAPrompt2 = cms.vint32(18, 14),
        chiSquareErrAPrompt3 = cms.vint32(21),
        chiSquareErrBDisp1 = cms.vdouble(0.54, 0.805, 0.74),
        chiSquareErrBDisp2 = cms.vdouble(0.73, 0.9450000000000001),
        chiSquareErrBDisp3 = cms.vdouble(0.5),
        chiSquareErrBPrompt1 = cms.vdouble(0.045, 0.08, 0.06),
        chiSquareErrBPrompt2 = cms.vdouble(0.065, 0.275),
        chiSquareErrBPrompt3 = cms.vdouble(0.05),
        chiSquarePrompt1 = cms.vdouble(-0.323, -0.508, -0.578),
        chiSquarePrompt2 = cms.vdouble(-0.228, -0.343),
        chiSquarePrompt3 = cms.vdouble(-0.1),
        combos1 = cms.vint32(),
        combos2 = cms.vint32(3),
        combos3 = cms.vint32(5, 6, 7),
        combos4 = cms.vint32(
            9, 10, 11, 12, 13,
            14, 15
        ),
        curvResolution1 = cms.vdouble(1, 2360.97, 873.003, 258138.0),
        curvResolution2 = cms.vdouble(1, 4.903692, 48.7941, 0),
        eLoss = cms.vdouble(6.77765e-05, 0, 0, 0),
        etaLUT0 = cms.vdouble(8.946, 7.508, 6.279, 6.399),
        etaLUT1 = cms.vdouble(0.159, 0.116, 0.088, 0.128),
        initialK = cms.vdouble(-0.4576229536749278, -0.6364802777566145, -1.0305030909883524, -1.7272067322624118),
        initialK2 = cms.vdouble(-6.442002637356136e-05, -9.582709649965545e-05, -0.0002741064246218815, -0.0014910074450869175),
        lutFile = cms.string('L1Trigger/Phase2L1GMT/data/packedGainLUTs.root'),
        mScatteringPhi = cms.vdouble(0.1169021113298598, 0.00016777763395543814, 0.0004322078772344548, 0.00024985881710722107),
        mScatteringPhiB = cms.vdouble(0.0522762, 0.01762000062188365, 0.03508319015441297, 0.03126825551530328),
        phiAt2 = cms.double(0.17917991867483288),
        pointResolutionPhi = cms.double(1.0),
        pointResolutionPhiB = cms.double(12493.7429036),
        pointResolutionPhiBH = cms.vdouble(19925.62953113343, 15583.06791339368, 10258.11768352221, 15462.112839170433),
        pointResolutionPhiBL = cms.vdouble(161519.85395846734, 155051.58394241595, 149693.88179343447, 174896.46766622085),
        pointResolutionVertex = cms.double(1.0),
        useOfflineAlgo = cms.bool(False),
        verbose = cms.bool(False)
    ),
    stubs = cms.InputTag("l1tStubsGmt","kmtf"),
    verbose = cms.int32(0)
)


process.l1tLayer1 = cms.EDProducer("L1TPFCandMultiMerger",
    pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1Barrel"), cms.InputTag("l1tLayer1HGCal"), cms.InputTag("l1tLayer1HGCalNoTK"), cms.InputTag("l1tLayer1HF"))
)


process.l1tLayer1Barrel = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(
        cms.PSet(
            regions = cms.vuint32(
                0, 1, 2, 9, 10,
                11, 18, 19, 20, 27,
                28, 29, 36, 37, 38,
                45, 46, 47
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                3, 4, 5, 12, 13,
                14, 21, 22, 23, 30,
                31, 32, 39, 40, 41,
                48, 49, 50
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                6, 7, 8, 15, 16,
                17, 24, 25, 26, 33,
                34, 35, 42, 43, 44,
                51, 52, 53
            )
        )
    ),
    caloSectors = cms.VPSet(cms.PSet(
        etaBoundaries = cms.vdouble(-1.5, 1.5),
        phiSlices = cms.uint32(3)
    )),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromL1EGClusters","selected")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromCombinedCaloHCal","calibrated")),
    hadPtCut = cms.double(1.0),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgo3'),
    pfAlgoParameters = cms.PSet(
        caloResolution = cms.PSet(
            etaBins = cms.vdouble(0.7, 1.2, 1.6),
            offset = cms.vdouble(2.909, 2.864, 0.294),
            scale = cms.vdouble(0.119, 0.127, 0.442)
        ),
        emCaloDR = cms.double(0.1),
        maxInvisiblePt = cms.double(10.0),
        nAllNeutral = cms.uint32(25),
        nCalo = cms.uint32(18),
        nEmCalo = cms.uint32(12),
        nMu = cms.uint32(2),
        nPhoton = cms.uint32(12),
        nSelCalo = cms.uint32(18),
        nTrack = cms.uint32(25),
        tightTrackMaxInvisiblePt = cms.double(20),
        trackCaloDR = cms.double(0.15),
        trackEmDR = cms.double(0.04),
        trackMuDR = cms.double(0.2)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(),
        alphaCrop = cms.vdouble(4),
        alphaSlopes = cms.vdouble(0.7),
        alphaZeros = cms.vdouble(6.0),
        dZ = cms.double(0.5),
        dr = cms.double(0.3),
        drMin = cms.double(0.07),
        finalSortAlgo = cms.string('Insertion'),
        nFinalSort = cms.uint32(18),
        nIn = cms.uint32(25),
        nOut = cms.uint32(25),
        nTrack = cms.uint32(22),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(5.0),
        priorsPhoton = cms.vdouble(1.0),
        ptCut = cms.vdouble(1.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3),
        ptSlopesPhoton = cms.vdouble(0.3),
        ptZeros = cms.vdouble(4.0),
        ptZerosPhoton = cms.vdouble(2.5)
    ),
    regionizerAlgo = cms.string('Ideal'),
    regions = cms.VPSet(cms.PSet(
        etaBoundaries = cms.vdouble(
            -1.5, -1.0, -0.5, 0.0, 0.5,
            1.0, 1.5
        ),
        phiSlices = cms.uint32(9)
    )),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(False),
        doCompositeTkEle = cms.bool(False),
        doEndcapHwQual = cms.bool(False),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(10),
        nTRACK = cms.uint32(25),
        nTRACK_EGIN = cms.uint32(13),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(10.0),
        writeBeforeBremRecovery = cms.bool(True),
        writeEGSta = cms.bool(False)
    ),
    tkEgSorterAlgo = cms.string('Barrel'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(10)
    ),
    trackInputConversionAlgo = cms.string('Emulator'),
    trackInputConversionParameters = cms.PSet(
        dEtaBarrelBits = cms.uint32(8),
        dEtaBarrelZ0PostShift = cms.uint32(2),
        dEtaBarrelZ0PreShift = cms.uint32(2),
        dPhiBarrelBits = cms.uint32(4),
        dPhiBarrelRInvPostShift = cms.uint32(4),
        dPhiBarrelRInvPreShift = cms.uint32(4),
        etaLUTBits = cms.uint32(10),
        etaShift = cms.uint32(5),
        phiBits = cms.uint32(10),
        ptLUTBits = cms.uint32(11),
        region = cms.string('barrel'),
        slimDataFormat = cms.bool(True),
        z0Bits = cms.uint32(12)
    ),
    tracks = cms.InputTag("l1tPFTracksFromL1Tracks"),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tLayer1BarrelExtended = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(
        cms.PSet(
            regions = cms.vuint32(
                0, 1, 2, 9, 10,
                11, 18, 19, 20, 27,
                28, 29, 36, 37, 38,
                45, 46, 47
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                3, 4, 5, 12, 13,
                14, 21, 22, 23, 30,
                31, 32, 39, 40, 41,
                48, 49, 50
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                6, 7, 8, 15, 16,
                17, 24, 25, 26, 33,
                34, 35, 42, 43, 44,
                51, 52, 53
            )
        )
    ),
    caloSectors = cms.VPSet(cms.PSet(
        etaBoundaries = cms.vdouble(-1.5, 1.5),
        phiSlices = cms.uint32(3)
    )),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromL1EGClusters","selected")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromCombinedCaloHCal","calibrated")),
    hadPtCut = cms.double(1.0),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgo3'),
    pfAlgoParameters = cms.PSet(
        caloResolution = cms.PSet(
            etaBins = cms.vdouble(0.7, 1.2, 1.6),
            offset = cms.vdouble(2.909, 2.864, 0.294),
            scale = cms.vdouble(0.119, 0.127, 0.442)
        ),
        emCaloDR = cms.double(0.1),
        maxInvisiblePt = cms.double(10.0),
        nAllNeutral = cms.uint32(25),
        nCalo = cms.uint32(18),
        nEmCalo = cms.uint32(12),
        nMu = cms.uint32(2),
        nPhoton = cms.uint32(12),
        nSelCalo = cms.uint32(18),
        nTrack = cms.uint32(25),
        tightTrackMaxInvisiblePt = cms.double(20),
        trackCaloDR = cms.double(0.15),
        trackEmDR = cms.double(0.04),
        trackMuDR = cms.double(0.2)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(),
        alphaCrop = cms.vdouble(4),
        alphaSlopes = cms.vdouble(0.7),
        alphaZeros = cms.vdouble(6.0),
        dZ = cms.double(0.5),
        dr = cms.double(0.3),
        drMin = cms.double(0.07),
        finalSortAlgo = cms.string('Insertion'),
        nFinalSort = cms.uint32(18),
        nIn = cms.uint32(25),
        nOut = cms.uint32(25),
        nTrack = cms.uint32(22),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(5.0),
        priorsPhoton = cms.vdouble(1.0),
        ptCut = cms.vdouble(1.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3),
        ptSlopesPhoton = cms.vdouble(0.3),
        ptZeros = cms.vdouble(4.0),
        ptZerosPhoton = cms.vdouble(2.5)
    ),
    regionizerAlgo = cms.string('Ideal'),
    regions = cms.VPSet(cms.PSet(
        etaBoundaries = cms.vdouble(
            -1.5, -1.0, -0.5, 0.0, 0.5,
            1.0, 1.5
        ),
        phiSlices = cms.uint32(9)
    )),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(False),
        doCompositeTkEle = cms.bool(False),
        doEndcapHwQual = cms.bool(False),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(10),
        nTRACK = cms.uint32(25),
        nTRACK_EGIN = cms.uint32(13),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(10.0),
        writeBeforeBremRecovery = cms.bool(True),
        writeEGSta = cms.bool(False)
    ),
    tkEgSorterAlgo = cms.string('Barrel'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(10)
    ),
    trackInputConversionAlgo = cms.string('Emulator'),
    trackInputConversionParameters = cms.PSet(
        dEtaBarrelBits = cms.uint32(8),
        dEtaBarrelZ0PostShift = cms.uint32(2),
        dEtaBarrelZ0PreShift = cms.uint32(2),
        dPhiBarrelBits = cms.uint32(4),
        dPhiBarrelRInvPostShift = cms.uint32(4),
        dPhiBarrelRInvPreShift = cms.uint32(4),
        etaLUTBits = cms.uint32(10),
        etaShift = cms.uint32(5),
        phiBits = cms.uint32(10),
        ptLUTBits = cms.uint32(11),
        region = cms.string('barrel'),
        slimDataFormat = cms.bool(True),
        z0Bits = cms.uint32(12)
    ),
    tracks = cms.InputTag("l1tPFTracksFromL1TracksExtended"),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tLayer1EG = cms.EDProducer("L1TEGMultiMerger",
    tkEgs = cms.VPSet(cms.PSet(
        instance = cms.string('L1EgEE'),
        pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCal","L1Eg"), cms.InputTag("l1tLayer1HGCalNoTK","L1Eg"))
    )),
    tkElectrons = cms.VPSet(
        cms.PSet(
            instance = cms.string('L1TkEleEE'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCal","L1TkEle"))
        ),
        cms.PSet(
            instance = cms.string('L1TkEleEB'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1Barrel","L1TkEle"))
        )
    ),
    tkEms = cms.VPSet(
        cms.PSet(
            instance = cms.string('L1TkEmEE'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCal","L1TkEm"), cms.InputTag("l1tLayer1HGCalNoTK","L1TkEm"))
        ),
        cms.PSet(
            instance = cms.string('L1TkEmEB'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1Barrel","L1TkEm"))
        )
    )
)


process.l1tLayer1EGElliptic = cms.EDProducer("L1TEGMultiMerger",
    tkEgs = cms.VPSet(cms.PSet(
        instance = cms.string('L1EgEE'),
        pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCalElliptic","L1Eg"), cms.InputTag("l1tLayer1HGCalNoTK","L1Eg"))
    )),
    tkElectrons = cms.VPSet(
        cms.PSet(
            instance = cms.string('L1TkEleEE'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCalElliptic","L1TkEle"))
        ),
        cms.PSet(
            instance = cms.string('L1TkEleEB'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1Barrel","L1TkEle"))
        )
    ),
    tkEms = cms.VPSet(
        cms.PSet(
            instance = cms.string('L1TkEmEE'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1HGCalElliptic","L1TkEm"), cms.InputTag("l1tLayer1HGCalNoTK","L1TkEm"))
        ),
        cms.PSet(
            instance = cms.string('L1TkEmEB'),
            pfProducers = cms.VInputTag(cms.InputTag("l1tLayer1Barrel","L1TkEm"))
        )
    )
)


process.l1tLayer1Extended = cms.EDProducer("L1TPFCandMultiMerger",
    pfProducers = cms.VInputTag("l1tLayer1BarrelExtended", "l1tLayer1HGCalExtended", "l1tLayer1HGCalNoTK", "l1tLayer1HF")
)


process.l1tLayer1HF = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(),
    caloSectors = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-5.5, -3.0),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(3.0, 5.5),
            phiSlices = cms.uint32(9)
        )
    ),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromCombinedCaloHF","calibrated")),
    hadPtCut = cms.double(15.0),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgoDummy'),
    pfAlgoParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        nCalo = cms.uint32(18),
        nMu = cms.uint32(4)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(),
        alphaCrop = cms.vdouble(4),
        alphaSlopes = cms.vdouble(0.6),
        alphaZeros = cms.vdouble(9.0),
        dZ = cms.double(1.33),
        debug = cms.untracked.bool(False),
        dr = cms.double(0.3),
        drMin = cms.double(0.1),
        finalSortAlgo = cms.string('Insertion'),
        nFinalSort = cms.uint32(10),
        nIn = cms.uint32(18),
        nOut = cms.uint32(18),
        nTrack = cms.uint32(0),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(6.0),
        priorsPhoton = cms.vdouble(6.0),
        ptCut = cms.vdouble(10.0),
        ptMax = cms.double(100.0),
        ptSlopes = cms.vdouble(0.25),
        ptSlopesPhoton = cms.vdouble(0.25),
        ptZeros = cms.vdouble(14.0),
        ptZerosPhoton = cms.vdouble(14.0)
    ),
    regions = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-5.5, -3.0),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(3.0, 5.5),
            phiSlices = cms.uint32(9)
        )
    ),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(True),
        doCompositeTkEle = cms.bool(False),
        doEndcapHwQual = cms.bool(False),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(5),
        nEM_EGOUT = cms.uint32(5),
        nTRACK = cms.uint32(5),
        nTRACK_EGIN = cms.uint32(5),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(10.0),
        writeBeforeBremRecovery = cms.bool(True),
        writeEGSta = cms.bool(True)
    ),
    tkEgSorterAlgo = cms.string('Endcap'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(6)
    ),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tLayer1HGCal = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(
        cms.PSet(
            regions = cms.vuint32(
                0, 1, 2, 3, 4,
                5, 6, 7, 8
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                9, 10, 11, 12, 13,
                14, 15, 16, 17
            )
        )
    ),
    caloSectors = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-3.0, -1.5),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 3.0),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        )
    ),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters","egamma")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters")),
    hadPtCut = cms.double(1.0),
    hgcalInputConversionAlgo = cms.string('Emulator'),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgo2HGC'),
    pfAlgoParameters = cms.PSet(
        caloResolution = cms.PSet(
            etaBins = cms.vdouble(
                1.7, 1.9, 2.2, 2.5, 2.8,
                2.9
            ),
            offset = cms.vdouble(
                1.793, 1.827, 2.363, 2.538, 2.812,
                2.642
            ),
            scale = cms.vdouble(
                0.138, 0.137, 0.124, 0.115, 0.106,
                0.121
            )
        ),
        maxInvisiblePt = cms.double(10.0),
        nCalo = cms.uint32(20),
        nMu = cms.uint32(4),
        nSelCalo = cms.uint32(20),
        nTrack = cms.uint32(30),
        tightTrackMaxInvisiblePt = cms.double(20),
        trackCaloDR = cms.double(0.1),
        trackMuDR = cms.double(0.2)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(2.0),
        alphaCrop = cms.vdouble(3, 3),
        alphaSlopes = cms.vdouble(1.5, 1.5),
        alphaZeros = cms.vdouble(6.0, 6.0),
        dZ = cms.double(1.33),
        dr = cms.double(0.3),
        drMin = cms.double(0.04),
        finalSortAlgo = cms.string('FoldedHybrid'),
        nFinalSort = cms.uint32(18),
        nIn = cms.uint32(20),
        nOut = cms.uint32(20),
        nTrack = cms.uint32(30),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(5.0, 5.0),
        priorsPhoton = cms.vdouble(1.5, 1.5),
        ptCut = cms.vdouble(1.0, 2.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3, 0.3),
        ptSlopesPhoton = cms.vdouble(0.4, 0.4),
        ptZeros = cms.vdouble(5.0, 7.0),
        ptZerosPhoton = cms.vdouble(3.0, 4.0)
    ),
    regionizerAlgo = cms.string('Multififo'),
    regionizerAlgoParameters = cms.PSet(
        egInterceptMode = cms.PSet(
            afterFifo = cms.bool(True),
            emIDMask = cms.uint32(30),
            nEMCALO_OUT = cms.uint32(10),
            nHADCALO_IN = cms.uint32(20)
        ),
        nCalo = cms.uint32(20),
        nCaloLinks = cms.uint32(3),
        nClocks = cms.uint32(54),
        nEmCalo = cms.uint32(10),
        nEndcaps = cms.uint32(2),
        nMu = cms.uint32(4),
        nTkLinks = cms.uint32(2),
        nTrack = cms.uint32(30),
        useAlsoVtxCoords = cms.bool(True)
    ),
    regions = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-2.5, -1.5),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 2.5),
            phiSlices = cms.uint32(9)
        )
    ),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(True),
        doCompositeTkEle = cms.bool(True),
        doEndcapHwQual = cms.bool(True),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(5),
        nTRACK = cms.uint32(30),
        nTRACK_EGIN = cms.uint32(10),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(0.0),
        writeBeforeBremRecovery = cms.bool(False),
        writeEGSta = cms.bool(True)
    ),
    tkEgSorterAlgo = cms.string('Endcap'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(5)
    ),
    trackInputConversionAlgo = cms.string('Emulator'),
    trackInputConversionParameters = cms.PSet(
        dEtaHGCalBits = cms.uint32(10),
        dEtaHGCalLUTBits = cms.uint32(10),
        dEtaHGCalLUTShift = cms.uint32(2),
        dEtaHGCalRInvPreShift = cms.uint32(6),
        dEtaHGCalZ0PreShift = cms.uint32(2),
        dPhiHGCalBits = cms.uint32(4),
        dPhiHGCalRInvShift = cms.uint32(4),
        dPhiHGCalTanlInvShift = cms.uint32(22),
        dPhiHGCalTanlLUTBits = cms.uint32(10),
        dPhiHGCalZ0PostShift = cms.uint32(6),
        dPhiHGCalZ0PreShift = cms.uint32(4),
        etaLUTBits = cms.uint32(11),
        etaPostOffs = cms.int32(150),
        etaShift = cms.uint32(4),
        phiBits = cms.uint32(10),
        ptLUTBits = cms.uint32(11),
        region = cms.string('endcap'),
        slimDataFormat = cms.bool(False),
        z0Bits = cms.uint32(12)
    ),
    tracks = cms.InputTag("l1tPFTracksFromL1Tracks"),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    writeRawHgcalCluster = cms.untracked.bool(True)
)


process.l1tLayer1HGCalElliptic = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(
        cms.PSet(
            regions = cms.vuint32(
                0, 1, 2, 3, 4,
                5, 6, 7, 8
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                9, 10, 11, 12, 13,
                14, 15, 16, 17
            )
        )
    ),
    caloSectors = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-3.0, -1.5),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 3.0),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        )
    ),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters","egamma")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters")),
    hadPtCut = cms.double(1.0),
    hgcalInputConversionAlgo = cms.string('Emulator'),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgo2HGC'),
    pfAlgoParameters = cms.PSet(
        caloResolution = cms.PSet(
            etaBins = cms.vdouble(
                1.7, 1.9, 2.2, 2.5, 2.8,
                2.9
            ),
            offset = cms.vdouble(
                1.793, 1.827, 2.363, 2.538, 2.812,
                2.642
            ),
            scale = cms.vdouble(
                0.138, 0.137, 0.124, 0.115, 0.106,
                0.121
            )
        ),
        maxInvisiblePt = cms.double(10.0),
        nCalo = cms.uint32(20),
        nMu = cms.uint32(4),
        nSelCalo = cms.uint32(20),
        nTrack = cms.uint32(30),
        tightTrackMaxInvisiblePt = cms.double(20),
        trackCaloDR = cms.double(0.1),
        trackMuDR = cms.double(0.2)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(2.0),
        alphaCrop = cms.vdouble(3, 3),
        alphaSlopes = cms.vdouble(1.5, 1.5),
        alphaZeros = cms.vdouble(6.0, 6.0),
        dZ = cms.double(1.33),
        dr = cms.double(0.3),
        drMin = cms.double(0.04),
        finalSortAlgo = cms.string('FoldedHybrid'),
        nFinalSort = cms.uint32(18),
        nIn = cms.uint32(20),
        nOut = cms.uint32(20),
        nTrack = cms.uint32(30),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(5.0, 5.0),
        priorsPhoton = cms.vdouble(1.5, 1.5),
        ptCut = cms.vdouble(1.0, 2.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3, 0.3),
        ptSlopesPhoton = cms.vdouble(0.4, 0.4),
        ptZeros = cms.vdouble(5.0, 7.0),
        ptZerosPhoton = cms.vdouble(3.0, 4.0)
    ),
    regionizerAlgo = cms.string('Multififo'),
    regionizerAlgoParameters = cms.PSet(
        egInterceptMode = cms.PSet(
            afterFifo = cms.bool(True),
            emIDMask = cms.uint32(30),
            nEMCALO_OUT = cms.uint32(10),
            nHADCALO_IN = cms.uint32(20)
        ),
        nCalo = cms.uint32(20),
        nCaloLinks = cms.uint32(3),
        nClocks = cms.uint32(54),
        nEmCalo = cms.uint32(10),
        nEndcaps = cms.uint32(2),
        nMu = cms.uint32(4),
        nTkLinks = cms.uint32(2),
        nTrack = cms.uint32(30),
        useAlsoVtxCoords = cms.bool(True)
    ),
    regions = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-2.5, -1.5),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 2.5),
            phiSlices = cms.uint32(9)
        )
    ),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(True),
        doCompositeTkEle = cms.bool(False),
        doEndcapHwQual = cms.bool(True),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(5),
        nTRACK = cms.uint32(30),
        nTRACK_EGIN = cms.uint32(10),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(10.0),
        writeBeforeBremRecovery = cms.bool(False),
        writeEGSta = cms.bool(True)
    ),
    tkEgSorterAlgo = cms.string('Endcap'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(5)
    ),
    trackInputConversionAlgo = cms.string('Emulator'),
    trackInputConversionParameters = cms.PSet(
        dEtaHGCalBits = cms.uint32(10),
        dEtaHGCalLUTBits = cms.uint32(10),
        dEtaHGCalLUTShift = cms.uint32(2),
        dEtaHGCalRInvPreShift = cms.uint32(6),
        dEtaHGCalZ0PreShift = cms.uint32(2),
        dPhiHGCalBits = cms.uint32(4),
        dPhiHGCalRInvShift = cms.uint32(4),
        dPhiHGCalTanlInvShift = cms.uint32(22),
        dPhiHGCalTanlLUTBits = cms.uint32(10),
        dPhiHGCalZ0PostShift = cms.uint32(6),
        dPhiHGCalZ0PreShift = cms.uint32(4),
        etaLUTBits = cms.uint32(11),
        etaPostOffs = cms.int32(150),
        etaShift = cms.uint32(4),
        phiBits = cms.uint32(10),
        ptLUTBits = cms.uint32(11),
        region = cms.string('endcap'),
        slimDataFormat = cms.bool(False),
        z0Bits = cms.uint32(12)
    ),
    tracks = cms.InputTag("l1tPFTracksFromL1Tracks"),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    writeRawHgcalCluster = cms.untracked.bool(True)
)


process.l1tLayer1HGCalExtended = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(
        cms.PSet(
            regions = cms.vuint32(
                0, 1, 2, 3, 4,
                5, 6, 7, 8
            )
        ),
        cms.PSet(
            regions = cms.vuint32(
                9, 10, 11, 12, 13,
                14, 15, 16, 17
            )
        )
    ),
    caloSectors = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-3.0, -1.5),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 3.0),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        )
    ),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters","egamma")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters")),
    hadPtCut = cms.double(1.0),
    hgcalInputConversionAlgo = cms.string('Emulator'),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgo2HGC'),
    pfAlgoParameters = cms.PSet(
        caloResolution = cms.PSet(
            etaBins = cms.vdouble(
                1.7, 1.9, 2.2, 2.5, 2.8,
                2.9
            ),
            offset = cms.vdouble(
                1.793, 1.827, 2.363, 2.538, 2.812,
                2.642
            ),
            scale = cms.vdouble(
                0.138, 0.137, 0.124, 0.115, 0.106,
                0.121
            )
        ),
        maxInvisiblePt = cms.double(10.0),
        nCalo = cms.uint32(20),
        nMu = cms.uint32(4),
        nSelCalo = cms.uint32(20),
        nTrack = cms.uint32(30),
        tightTrackMaxInvisiblePt = cms.double(20),
        trackCaloDR = cms.double(0.1),
        trackMuDR = cms.double(0.2)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(2.0),
        alphaCrop = cms.vdouble(3, 3),
        alphaSlopes = cms.vdouble(1.5, 1.5),
        alphaZeros = cms.vdouble(6.0, 6.0),
        dZ = cms.double(1.33),
        dr = cms.double(0.3),
        drMin = cms.double(0.04),
        finalSortAlgo = cms.string('FoldedHybrid'),
        nFinalSort = cms.uint32(18),
        nIn = cms.uint32(20),
        nOut = cms.uint32(20),
        nTrack = cms.uint32(30),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(5.0, 5.0),
        priorsPhoton = cms.vdouble(1.5, 1.5),
        ptCut = cms.vdouble(1.0, 2.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3, 0.3),
        ptSlopesPhoton = cms.vdouble(0.4, 0.4),
        ptZeros = cms.vdouble(5.0, 7.0),
        ptZerosPhoton = cms.vdouble(3.0, 4.0)
    ),
    regionizerAlgo = cms.string('Multififo'),
    regionizerAlgoParameters = cms.PSet(
        egInterceptMode = cms.PSet(
            afterFifo = cms.bool(True),
            emIDMask = cms.uint32(30),
            nEMCALO_OUT = cms.uint32(10),
            nHADCALO_IN = cms.uint32(20)
        ),
        nCalo = cms.uint32(20),
        nCaloLinks = cms.uint32(3),
        nClocks = cms.uint32(54),
        nEmCalo = cms.uint32(10),
        nEndcaps = cms.uint32(2),
        nMu = cms.uint32(4),
        nTkLinks = cms.uint32(2),
        nTrack = cms.uint32(30),
        useAlsoVtxCoords = cms.bool(True)
    ),
    regions = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-2.5, -1.5),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 2.5),
            phiSlices = cms.uint32(9)
        )
    ),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(True),
        doCompositeTkEle = cms.bool(True),
        doEndcapHwQual = cms.bool(True),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(5),
        nTRACK = cms.uint32(30),
        nTRACK_EGIN = cms.uint32(10),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(0.0),
        writeBeforeBremRecovery = cms.bool(False),
        writeEGSta = cms.bool(True)
    ),
    tkEgSorterAlgo = cms.string('Endcap'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(5)
    ),
    trackInputConversionAlgo = cms.string('Emulator'),
    trackInputConversionParameters = cms.PSet(
        dEtaHGCalBits = cms.uint32(10),
        dEtaHGCalLUTBits = cms.uint32(10),
        dEtaHGCalLUTShift = cms.uint32(2),
        dEtaHGCalRInvPreShift = cms.uint32(6),
        dEtaHGCalZ0PreShift = cms.uint32(2),
        dPhiHGCalBits = cms.uint32(4),
        dPhiHGCalRInvShift = cms.uint32(4),
        dPhiHGCalTanlInvShift = cms.uint32(22),
        dPhiHGCalTanlLUTBits = cms.uint32(10),
        dPhiHGCalZ0PostShift = cms.uint32(6),
        dPhiHGCalZ0PreShift = cms.uint32(4),
        etaLUTBits = cms.uint32(11),
        etaPostOffs = cms.int32(150),
        etaShift = cms.uint32(4),
        phiBits = cms.uint32(10),
        ptLUTBits = cms.uint32(11),
        region = cms.string('endcap'),
        slimDataFormat = cms.bool(False),
        z0Bits = cms.uint32(12)
    ),
    tracks = cms.InputTag("l1tPFTracksFromL1TracksExtended"),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    writeRawHgcalCluster = cms.untracked.bool(True)
)


process.l1tLayer1HGCalNoTK = cms.EDProducer("L1TCorrelatorLayer1Producer",
    boards = cms.VPSet(cms.PSet(
        regions = cms.vuint32(
            0, 1, 2, 3, 4,
            5, 6, 7, 8, 9,
            10, 11, 12, 13, 14,
            15, 16, 17
        )
    )),
    caloSectors = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-3.0, -1.5),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(1.5, 3.0),
            phiSlices = cms.uint32(3),
            phiZero = cms.double(1.5707963267948966)
        )
    ),
    emClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters","egamma")),
    emPtCut = cms.double(0.5),
    hadClusters = cms.VInputTag(cms.InputTag("l1tPFClustersFromHGC3DClusters")),
    hadPtCut = cms.double(1.0),
    hgcalInputConversionAlgo = cms.string('Emulator'),
    hgcalInputConversionParameters = cms.PSet(
        slim = cms.bool(True)
    ),
    muonInputConversionAlgo = cms.string('Emulator'),
    muons = cms.InputTag("l1tSAMuonsGmt","prompt"),
    nVtx = cms.int32(1),
    pfAlgo = cms.string('PFAlgoDummy'),
    pfAlgoParameters = cms.PSet(
        nCalo = cms.uint32(12),
        nMu = cms.uint32(4)
    ),
    puAlgo = cms.string('LinearizedPuppi'),
    puAlgoParameters = cms.PSet(
        absEtaCuts = cms.vdouble(),
        alphaCrop = cms.vdouble(4),
        alphaSlopes = cms.vdouble(2.2),
        alphaZeros = cms.vdouble(9.0),
        dZ = cms.double(1.33),
        dr = cms.double(0.3),
        drMin = cms.double(0.04),
        finalSortAlgo = cms.string('Hybrid'),
        nFinalSort = cms.uint32(12),
        nIn = cms.uint32(12),
        nOut = cms.uint32(12),
        nTrack = cms.uint32(0),
        nVtx = cms.uint32(1),
        priors = cms.vdouble(7.0),
        priorsPhoton = cms.vdouble(5.0),
        ptCut = cms.vdouble(4.0),
        ptMax = cms.double(50.0),
        ptSlopes = cms.vdouble(0.3),
        ptSlopesPhoton = cms.vdouble(0.4),
        ptZeros = cms.vdouble(9.0),
        ptZerosPhoton = cms.vdouble(5.0)
    ),
    regionizerAlgo = cms.string('Multififo'),
    regionizerAlgoParameters = cms.PSet(
        egInterceptMode = cms.PSet(
            afterFifo = cms.bool(True),
            emIDMask = cms.uint32(30),
            nEMCALO_OUT = cms.uint32(12),
            nHADCALO_IN = cms.uint32(12)
        ),
        nCalo = cms.uint32(12),
        nCaloLinks = cms.uint32(3),
        nClocks = cms.uint32(54),
        nEmCalo = cms.uint32(12),
        nEndcaps = cms.uint32(2),
        nMu = cms.uint32(4),
        nTkLinks = cms.uint32(0),
        nTrack = cms.uint32(0),
        useAlsoVtxCoords = cms.bool(True)
    ),
    regions = cms.VPSet(
        cms.PSet(
            etaBoundaries = cms.vdouble(-3.0, -2.5),
            phiSlices = cms.uint32(9)
        ),
        cms.PSet(
            etaBoundaries = cms.vdouble(2.5, 3.0),
            phiSlices = cms.uint32(9)
        )
    ),
    tkEgAlgoParameters = cms.PSet(
        absEtaBoundaries = cms.vdouble(0.0, 0.9, 1.5),
        caloEtMin = cms.double(0.0),
        caloHwQual = cms.int32(4),
        compositeParametersTkEle = cms.PSet(
            loose_wp = cms.double(-0.181641),
            model = cms.string('L1Trigger/Phase2L1ParticleFlow/data/compositeID.json'),
            tight_wp = cms.double(0.0527344)
        ),
        dEtaMaxBrem = cms.double(0.02),
        dEtaValues = cms.vdouble(0.025, 0.015, 0.01),
        dPhiMaxBrem = cms.double(0.1),
        dPhiValues = cms.vdouble(0.07, 0.07, 0.07),
        doBremRecovery = cms.bool(True),
        doCompositeTkEle = cms.bool(False),
        doEndcapHwQual = cms.bool(True),
        doPfIso = cms.bool(True),
        doTkIso = cms.bool(True),
        filterHwQuality = cms.bool(False),
        hwIsoTypeTkEle = cms.uint32(0),
        hwIsoTypeTkEm = cms.uint32(0),
        nCompCandPerCluster = cms.uint32(3),
        nEMCALO_EGIN = cms.uint32(10),
        nEM_EGOUT = cms.uint32(5),
        nTRACK = cms.uint32(30),
        nTRACK_EGIN = cms.uint32(10),
        pfIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        pfIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(1.0)
        ),
        tkIsoParametersTkEle = cms.PSet(
            dRMax = cms.double(0.2),
            dRMin = cms.double(0.03),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        tkIsoParametersTkEm = cms.PSet(
            dRMax = cms.double(0.3),
            dRMin = cms.double(0.07),
            dZ = cms.double(0.6),
            tkQualityPtMin = cms.double(2.0)
        ),
        trkQualityPtMin = cms.double(10.0),
        writeBeforeBremRecovery = cms.bool(False),
        writeEGSta = cms.bool(True)
    ),
    tkEgSorterAlgo = cms.string('Endcap'),
    tkEgSorterParameters = cms.PSet(
        nObjSorted = cms.uint32(16),
        nObjToSort = cms.uint32(5)
    ),
    trkPtCut = cms.double(2.0),
    vtxCollection = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    writeRawHgcalCluster = cms.untracked.bool(True)
)


process.l1tLayer2Deregionizer = cms.EDProducer("DeregionizerProducer",
    RegionalPuppiCands = cms.InputTag("l1tLayer1","PuppiRegional"),
    linkConfigs = cms.VPSet(
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(0),
            outputRegions = cms.vuint32(
                0, 1, 2, 9, 10,
                11, 18, 19, 20, 27,
                28, 29, 36, 37, 38,
                45, 46, 47
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(1),
            outputRegions = cms.vuint32(
                3, 4, 5, 12, 13,
                14, 21, 22, 23, 30,
                31, 32, 39, 40, 41,
                48, 49, 50
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(2),
            outputRegions = cms.vuint32(
                6, 7, 8, 15, 16,
                17, 24, 25, 26, 33,
                34, 35, 42, 43, 44,
                51, 52, 53
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(4),
            outputRegions = cms.vuint32(
                63, 64, 65, 66, 67,
                68, 69, 70, 71
            ),
            partition = cms.string('HGCal')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(3),
            outputRegions = cms.vuint32(
                54, 55, 56, 57, 58,
                59, 60, 61, 62
            ),
            partition = cms.string('HGCal')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(4),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(12),
            outputBoard = cms.int32(5),
            outputRegions = cms.vuint32(
                72, 73, 74, 75, 76,
                77, 78, 79, 80, 81,
                82, 83, 84, 85, 86,
                87, 88, 89
            ),
            partition = cms.string('HGCalNoTk')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(6),
            outputRegions = cms.vuint32(
                90, 91, 92, 93, 94,
                95, 96, 97, 98
            ),
            partition = cms.string('HF')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(7),
            outputRegions = cms.vuint32(
                99, 100, 101, 102, 103,
                104, 105, 106, 107
            ),
            partition = cms.string('HF')
        )
    ),
    nInputFramesPerBX = cms.uint32(9),
    nPuppiFinalBuffer = cms.uint32(128),
    nPuppiFirstBuffers = cms.uint32(12),
    nPuppiPerClk = cms.uint32(6),
    nPuppiSecondBuffers = cms.uint32(32),
    nPuppiThirdBuffers = cms.uint32(64)
)


process.l1tLayer2DeregionizerExtended = cms.EDProducer("DeregionizerProducer",
    RegionalPuppiCands = cms.InputTag("l1tLayer1Extended","PuppiRegional"),
    linkConfigs = cms.VPSet(
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(0),
            outputRegions = cms.vuint32(
                0, 1, 2, 9, 10,
                11, 18, 19, 20, 27,
                28, 29, 36, 37, 38,
                45, 46, 47
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(1),
            outputRegions = cms.vuint32(
                3, 4, 5, 12, 13,
                14, 21, 22, 23, 30,
                31, 32, 39, 40, 41,
                48, 49, 50
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(6),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(2),
            outputRegions = cms.vuint32(
                6, 7, 8, 15, 16,
                17, 24, 25, 26, 33,
                34, 35, 42, 43, 44,
                51, 52, 53
            ),
            partition = cms.string('Barrel')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(4),
            outputRegions = cms.vuint32(
                63, 64, 65, 66, 67,
                68, 69, 70, 71
            ),
            partition = cms.string('HGCal')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(3),
            outputRegions = cms.vuint32(
                54, 55, 56, 57, 58,
                59, 60, 61, 62
            ),
            partition = cms.string('HGCal')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(4),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(12),
            outputBoard = cms.int32(5),
            outputRegions = cms.vuint32(
                72, 73, 74, 75, 76,
                77, 78, 79, 80, 81,
                82, 83, 84, 85, 86,
                87, 88, 89
            ),
            partition = cms.string('HGCalNoTk')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(6),
            outputRegions = cms.vuint32(
                90, 91, 92, 93, 94,
                95, 96, 97, 98
            ),
            partition = cms.string('HF')
        ),
        cms.PSet(
            nLinksPuppi = cms.uint32(3),
            nOutputFramesPerBX = cms.uint32(9),
            nPuppiPerRegion = cms.uint32(18),
            outputBoard = cms.int32(7),
            outputRegions = cms.vuint32(
                99, 100, 101, 102, 103,
                104, 105, 106, 107
            ),
            partition = cms.string('HF')
        )
    ),
    nInputFramesPerBX = cms.uint32(9),
    nPuppiFinalBuffer = cms.uint32(128),
    nPuppiFirstBuffers = cms.uint32(12),
    nPuppiPerClk = cms.uint32(6),
    nPuppiSecondBuffers = cms.uint32(32),
    nPuppiThirdBuffers = cms.uint32(64)
)


process.l1tLayer2EG = cms.EDProducer("L1TCtL2EgProducer",
    egStaInstanceLabel = cms.string('L1CtEgEE'),
    encoder = cms.PSet(
        nTKELE_OUT = cms.uint32(12),
        nTKPHO_OUT = cms.uint32(12)
    ),
    inPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(0),
                id = cms.uint32(0),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(1),
                id = cms.uint32(1),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(2),
                id = cms.uint32(2),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(3),
                id = cms.uint32(3),
                interface = cms.string('eglayer1Endcap'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(4),
                id = cms.uint32(4),
                interface = cms.string('eglayer1Endcap'),
                nWords = cms.uint32(48)
            )
        ),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_InPattern')
    ),
    l1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    outPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(cms.PSet(
            TMUX = cms.uint32(6),
            channels = cms.vuint32(0),
            id = cms.uint32(0),
            interface = cms.string('eglayer2'),
            nWords = cms.uint32(36)
        )),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_OutPattern')
    ),
    puppiIsoParametersTkEle = cms.PSet(
        dRMax = cms.double(0.2),
        dRMin = cms.double(0.03),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    puppiIsoParametersTkEm = cms.PSet(
        dRMax = cms.double(0.3),
        dRMin = cms.double(0.07),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    sorter = cms.PSet(
        debug = cms.untracked.uint32(0),
        nEGOut = cms.uint32(12),
        nEGPerRegion = cms.uint32(16),
        nREGIONS = cms.uint32(5)
    ),
    tkEgs = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCal","L1Eg"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTK","L1Eg"),
            regions = cms.vint32(-1)
        )
    ),
    tkEleInstanceLabel = cms.string('L1CtTkElectron'),
    tkElectrons = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCal","L1TkElePerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1Barrel","L1TkElePerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    tkEmInstanceLabel = cms.string('L1CtTkEm'),
    tkEms = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCal","L1TkEmPerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTK","L1TkEmPerBoard"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1Barrel","L1TkEmPerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    writeInPattern = cms.bool(False),
    writeOutPattern = cms.bool(False)
)


process.l1tLayer2EGElliptic = cms.EDProducer("L1TCtL2EgProducer",
    egStaInstanceLabel = cms.string('L1CtEgEE'),
    encoder = cms.PSet(
        nTKELE_OUT = cms.uint32(12),
        nTKPHO_OUT = cms.uint32(12)
    ),
    inPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(0),
                id = cms.uint32(0),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(1),
                id = cms.uint32(1),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(2),
                id = cms.uint32(2),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(3),
                id = cms.uint32(3),
                interface = cms.string('eglayer1Endcap'),
                nWords = cms.uint32(48)
            ),
            cms.PSet(
                TMUX = cms.uint32(6),
                channels = cms.vuint32(4),
                id = cms.uint32(4),
                interface = cms.string('eglayer1Endcap'),
                nWords = cms.uint32(48)
            )
        ),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_InPattern')
    ),
    l1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    outPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(cms.PSet(
            TMUX = cms.uint32(6),
            channels = cms.vuint32(0),
            id = cms.uint32(0),
            interface = cms.string('eglayer2'),
            nWords = cms.uint32(36)
        )),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_OutPattern')
    ),
    puppiIsoParametersTkEle = cms.PSet(
        dRMax = cms.double(0.2),
        dRMin = cms.double(0.03),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    puppiIsoParametersTkEm = cms.PSet(
        dRMax = cms.double(0.3),
        dRMin = cms.double(0.07),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    sorter = cms.PSet(
        debug = cms.untracked.uint32(0),
        nEGOut = cms.uint32(12),
        nEGPerRegion = cms.uint32(16),
        nREGIONS = cms.uint32(5)
    ),
    tkEgs = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalElliptic","L1Eg"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTK","L1Eg"),
            regions = cms.vint32(-1)
        )
    ),
    tkEleInstanceLabel = cms.string('L1CtTkElectron'),
    tkElectrons = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalElliptic","L1TkElePerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1Barrel","L1TkElePerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    tkEmInstanceLabel = cms.string('L1CtTkEm'),
    tkEms = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalElliptic","L1TkEmPerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTK","L1TkEmPerBoard"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1Barrel","L1TkEmPerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    writeInPattern = cms.bool(False),
    writeOutPattern = cms.bool(False)
)


process.l1tLayer2EGTM18 = cms.EDProducer("L1TCtL2EgProducer",
    egStaInstanceLabel = cms.string('L1CtEgEE'),
    encoder = cms.PSet(
        nTKELE_OUT = cms.uint32(12),
        nTKPHO_OUT = cms.uint32(12)
    ),
    inPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(
            cms.PSet(
                TMUX = cms.uint32(18),
                channels = cms.vuint32(0, 2, 4),
                id = cms.uint32(0),
                interface = cms.string('eglayer1Barrel'),
                nWords = cms.uint32(156)
            ),
            cms.PSet(
                TMUX = cms.uint32(18),
                channels = cms.vuint32(1, 3, 5),
                id = cms.uint32(1),
                interface = cms.string('eglayer1Endcap'),
                nWords = cms.uint32(129)
            )
        ),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_TMUX18_InPattern')
    ),
    l1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    outPatternFile = cms.PSet(
        TMUX = cms.uint32(6),
        channels = cms.VPSet(cms.PSet(
            TMUX = cms.uint32(6),
            channels = cms.vuint32(0),
            id = cms.uint32(0),
            interface = cms.string('eglayer2'),
            nWords = cms.uint32(36)
        )),
        eventsPerFile = cms.uint32(12),
        format = cms.string('EMPv2'),
        maxLinesPerFile = cms.uint32(1024),
        nFramesPerBX = cms.uint32(9),
        outputFileExtension = cms.string('txt.gz'),
        outputFilename = cms.string('L1TCTL2EG_TMUX18_OutPattern')
    ),
    puppiIsoParametersTkEle = cms.PSet(
        dRMax = cms.double(0.2),
        dRMin = cms.double(0.03),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    puppiIsoParametersTkEm = cms.PSet(
        dRMax = cms.double(0.3),
        dRMin = cms.double(0.07),
        dZ = cms.double(0.6),
        pfCandReuse = cms.bool(True),
        pfIsoType = cms.string('PUPPI'),
        pfPtMin = cms.double(1.0)
    ),
    sorter = cms.PSet(
        debug = cms.untracked.uint32(0),
        nEGOut = cms.uint32(12),
        nEGPerRegion = cms.uint32(16),
        nREGIONS = cms.uint32(5)
    ),
    tkEgs = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalTM18","L1Eg"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTKTM18","L1Eg"),
            regions = cms.vint32(-1)
        )
    ),
    tkEleInstanceLabel = cms.string('L1CtTkElectron'),
    tkElectrons = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalTM18","L1TkElePerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1BarrelSerenityTM18","L1TkElePerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    tkEmInstanceLabel = cms.string('L1CtTkEm'),
    tkEms = cms.VPSet(
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalTM18","L1TkEmPerBoard"),
            regions = cms.vint32(3, 4)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1HGCalNoTKTM18","L1TkEmPerBoard"),
            regions = cms.vint32(-1)
        ),
        cms.PSet(
            pfProducer = cms.InputTag("l1tLayer1BarrelSerenityTM18","L1TkEmPerBoard"),
            regions = cms.vint32(0, 1, 2)
        )
    ),
    writeInPattern = cms.bool(False),
    writeOutPattern = cms.bool(False)
)


process.l1tMETMLProducer = cms.EDProducer("L1MetPfProducer",
    L1PFObjects = cms.InputTag("l1tLayer1","Puppi"),
    maxCands = cms.int32(100),
    modelVersion = cms.string('L1METML_v1')
)


process.l1tMETPFProducer = cms.EDProducer("L1MetPfProducer",
    L1PFObjects = cms.InputTag("l1tLayer1","Puppi"),
    maxCands = cms.int32(128),
    modelVersion = cms.string('')
)


process.l1tMHTPFProducer = cms.EDProducer("L1MhtPfProducer",
    jets = cms.InputTag("l1tSC4PFL1PuppiEmulator"),
    maxJetEta = cms.double(2.4),
    minJetPt = cms.double(30.0)
)


process.l1tNNCaloTauEmulator = cms.EDProducer("L1NNCaloTauEmulator",
    CB_CE_split = cms.double(1.55),
    CNNmodel_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/CNNmodel_CB.pb'),
    CNNmodel_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/CNNmodel_CE.pb'),
    DEBUG = cms.bool(False),
    DNNcalib_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNcalib_CB.pb'),
    DNNcalib_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNcalib_CE.pb'),
    DNNident_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNident_CB.pb'),
    DNNident_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNident_CE.pb'),
    EcalEtMinForClustering = cms.double(0),
    EtMinForSeeding = cms.double(2.5),
    EtaRestriction = cms.double(2.4),
    FeatScaler_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/Cl3dFeatScaler_CE.json'),
    HcalEtMinForClustering = cms.double(0),
    HgcalClusters = cms.InputTag("l1tHGCalBackEndLayer2Producer","HGCalBackendLayer2Processor3DClustering"),
    IdWp90_CB = cms.double(0.706),
    IdWp90_CE = cms.double(0.5711),
    IdWp95_CB = cms.double(0.3432),
    IdWp95_CE = cms.double(0.2742),
    IdWp99_CB = cms.double(0.0337),
    IdWp99_CE = cms.double(0.0394),
    PuidThr = cms.double(-0.1),
    VsPuId = cms.PSet(
        isPUFilter = cms.bool(True),
        method = cms.string('BDT'),
        preselection = cms.string(''),
        variables = cms.VPSet(
            cms.PSet(
                name = cms.string('eMax'),
                value = cms.string('eMax()')
            ),
            cms.PSet(
                name = cms.string('eMaxOverE'),
                value = cms.string('eMax()/energy()')
            ),
            cms.PSet(
                name = cms.string('sigmaPhiPhiTot'),
                value = cms.string('sigmaPhiPhiTot()')
            ),
            cms.PSet(
                name = cms.string('sigmaRRTot'),
                value = cms.string('sigmaRRTot()')
            ),
            cms.PSet(
                name = cms.string('triggerCells90percent'),
                value = cms.string('triggerCells90percent()')
            )
        ),
        weightsFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hgcal_egID/Photon_Pion_vs_Neutrino_BDTweights_1116.xml.gz'),
        wp = cms.string('-0.10')
    ),
    hgcalTowers = cms.InputTag("l1tHGCalTowerProducer","HGCalTowerProcessor"),
    l1CaloTowers = cms.InputTag("l1tEGammaClusterEmuProducer","L1CaloTowerCollection"),
    mightGet = cms.optional.untracked.vstring,
    preEmId = cms.string('hOverE < 0.3 && hOverE >= 0')
)


process.l1tNNCaloTauProducer = cms.EDProducer("L1NNCaloTauProducer",
    CB_CE_split = cms.double(1.55),
    CNNmodel_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/CNNmodel_CB.pb'),
    CNNmodel_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/CNNmodel_CE.pb'),
    DEBUG = cms.bool(False),
    DNNcalib_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNcalib_CB.pb'),
    DNNcalib_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNcalib_CE.pb'),
    DNNident_CB_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNident_CB.pb'),
    DNNident_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/v22/DNNident_CE.pb'),
    EcalEtMinForClustering = cms.double(0),
    EtMinForSeeding = cms.double(2.5),
    EtaRestriction = cms.double(2.4),
    FeatScaler_CE_path = cms.string('L1Trigger/L1CaloTrigger/data/Phase2_NNCaloTaus/Cl3dFeatScaler_CE.json'),
    HcalEtMinForClustering = cms.double(0),
    HgcalClusters = cms.InputTag("l1tHGCalBackEndLayer2Producer","HGCalBackendLayer2Processor3DClustering"),
    IdWp90_CB = cms.double(0.706),
    IdWp90_CE = cms.double(0.5711),
    IdWp95_CB = cms.double(0.3432),
    IdWp95_CE = cms.double(0.2742),
    IdWp99_CB = cms.double(0.0337),
    IdWp99_CE = cms.double(0.0394),
    VsPuId = cms.PSet(
        isPUFilter = cms.bool(True),
        method = cms.string('BDT'),
        preselection = cms.string(''),
        variables = cms.VPSet(
            cms.PSet(
                name = cms.string('eMax'),
                value = cms.string('eMax()')
            ),
            cms.PSet(
                name = cms.string('eMaxOverE'),
                value = cms.string('eMax()/energy()')
            ),
            cms.PSet(
                name = cms.string('sigmaPhiPhiTot'),
                value = cms.string('sigmaPhiPhiTot()')
            ),
            cms.PSet(
                name = cms.string('sigmaRRTot'),
                value = cms.string('sigmaRRTot()')
            ),
            cms.PSet(
                name = cms.string('triggerCells90percent'),
                value = cms.string('triggerCells90percent()')
            )
        ),
        weightsFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hgcal_egID/Photon_Pion_vs_Neutrino_BDTweights_1116.xml.gz'),
        wp = cms.string('-0.10')
    ),
    hgcalTowers = cms.InputTag("l1tHGCalTowerProducer","HGCalTowerProcessor"),
    l1CaloTowers = cms.InputTag("l1tEGammaClusterEmuProducer","L1CaloTowerCollection"),
    mightGet = cms.optional.untracked.vstring,
    preEmId = cms.string('hOverE < 0.3 && hOverE >= 0')
)


process.l1tNNTauProducerPF = cms.EDProducer("L1NNTauProducer",
    L1PFObjects = cms.InputTag("l1tLayer1","PF"),
    NNFileName = cms.string('L1Trigger/Phase2L1ParticleFlow/data/tau_3layer.pb'),
    conesize = cms.double(0.4),
    maxtaus = cms.int32(5),
    nparticles = cms.int32(10),
    seedpt = cms.double(10),
    tausize = cms.double(0.1)
)


process.l1tNNTauProducerPuppi = cms.EDProducer("L1NNTauProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    NNFileName = cms.string('L1Trigger/Phase2L1ParticleFlow/data/tau_3layer_puppi.pb'),
    conesize = cms.double(0.4),
    debug = cms.bool(False),
    emseed = cms.bool(True),
    maxtaus = cms.int32(5),
    nparticles = cms.int32(10),
    seedpt = cms.double(10),
    tausize = cms.double(0.1)
)


process.l1tPFClustersFromCombinedCaloHCal = cms.EDProducer("L1TPFCaloProducer",
    debug = cms.untracked.int32(0),
    ecalCandidates = cms.VInputTag(cms.InputTag("l1tPFClustersFromL1EGClusters","all")),
    ecalClusterer = cms.PSet(
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(0.5),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(0.5),
        zsEt = cms.double(0.4)
    ),
    emCorrector = cms.string(''),
    hadCorrector = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hadcorr_barrel.root'),
    hadCorrectorEmfMax = cms.double(-1.0),
    hcCorrector = cms.string(''),
    hcalCandidates = cms.VInputTag(),
    hcalClusterer = cms.PSet(
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(0.8),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(0.5),
        zsEt = cms.double(0.4)
    ),
    hcalDigis = cms.VInputTag(),
    hcalDigisBarrel = cms.bool(True),
    hcalDigisHF = cms.bool(False),
    hcalHGCTowers = cms.VInputTag(),
    hcalHGCTowersHadOnly = cms.bool(False),
    linker = cms.PSet(
        algo = cms.string('flat'),
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        hoeCut = cms.double(0.1),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(1.0),
        minHadronEt = cms.double(1.0),
        minHadronRawEt = cms.double(1.0),
        minPhotonEt = cms.double(1.0),
        noEmInHGC = cms.bool(False),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(1.0),
        zsEt = cms.double(0.0)
    ),
    phase2barrelCaloTowers = cms.VInputTag(cms.InputTag("l1tEGammaClusterEmuProducer","L1CaloTowerCollection")),
    resol = cms.PSet(
        etaBins = cms.vdouble(0.7, 1.2, 1.6),
        kind = cms.string('calo'),
        offset = cms.vdouble(2.582, 2.191, -0.077),
        scale = cms.vdouble(0.122, 0.143, 0.465)
    )
)


process.l1tPFClustersFromCombinedCaloHF = cms.EDProducer("L1TPFCaloProducer",
    debug = cms.untracked.int32(0),
    ecalCandidates = cms.VInputTag(),
    ecalClusterer = cms.PSet(
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(0.5),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(0.5),
        zsEt = cms.double(0.4)
    ),
    emCorrector = cms.string(''),
    hadCorrector = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hfcorr.root'),
    hadCorrectorEmfMax = cms.double(-1.0),
    hcCorrector = cms.string(''),
    hcalCandidates = cms.VInputTag(),
    hcalClusterer = cms.PSet(
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(0.8),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(0.5),
        zsEt = cms.double(0.4)
    ),
    hcalDigis = cms.VInputTag(cms.InputTag("simHcalTriggerPrimitiveDigis")),
    hcalDigisBarrel = cms.bool(False),
    hcalDigisHF = cms.bool(True),
    hcalHGCTowers = cms.VInputTag(),
    hcalHGCTowersHadOnly = cms.bool(False),
    linker = cms.PSet(
        algo = cms.string('flat'),
        energyShareAlgo = cms.string('fractions'),
        energyWeightedPosition = cms.bool(True),
        etaBounds = cms.vdouble(-1.0),
        grid = cms.string('phase2'),
        hoeCut = cms.double(0.1),
        maxClustersEtaPhi = cms.vuint32(),
        minClusterEt = cms.double(1.0),
        minHadronEt = cms.double(1.0),
        minHadronRawEt = cms.double(1.0),
        minPhotonEt = cms.double(1.0),
        noEmInHGC = cms.bool(False),
        phiBounds = cms.vdouble(-1.0),
        seedEt = cms.double(1.0),
        zsEt = cms.double(0.0)
    ),
    phase2barrelCaloTowers = cms.VInputTag(),
    resol = cms.PSet(
        etaBins = cms.vdouble(3.5, 4.0, 4.5, 5.0),
        kind = cms.string('calo'),
        offset = cms.vdouble(1.099, 0.93, 1.009, 1.369),
        scale = cms.vdouble(0.152, 0.151, 0.144, 0.179)
    )
)


process.l1tPFClustersFromHGC3DClusters = cms.EDProducer("PFClusterProducerFromHGC3DClusters",
    corrector = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hadcorr_HGCal3D_TC.root'),
    correctorEmfMax = cms.double(1.125),
    emOnly = cms.bool(False),
    emVsPUID = cms.PSet(
        isPUFilter = cms.bool(True),
        method = cms.string('BDT'),
        preselection = cms.string(''),
        variables = cms.VPSet(
            cms.PSet(
                name = cms.string('eMax'),
                value = cms.string('eMax()')
            ),
            cms.PSet(
                name = cms.string('eMaxOverE'),
                value = cms.string('eMax()/energy()')
            ),
            cms.PSet(
                name = cms.string('sigmaPhiPhiTot'),
                value = cms.string('sigmaPhiPhiTot()')
            ),
            cms.PSet(
                name = cms.string('sigmaRRTot'),
                value = cms.string('sigmaRRTot()')
            ),
            cms.PSet(
                name = cms.string('triggerCells90percent'),
                value = cms.string('triggerCells90percent()')
            )
        ),
        weightsFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hgcal_egID/Photon_Pion_vs_Neutrino_BDTweights_1116.xml.gz'),
        wp = cms.string('0.15')
    ),
    emVsPionID = cms.PSet(
        isPUFilter = cms.bool(False),
        method = cms.string('BDT'),
        preselection = cms.string(''),
        variables = cms.VPSet(
            cms.PSet(
                name = cms.string('fabs(eta)'),
                value = cms.string('abs(eta())')
            ),
            cms.PSet(
                name = cms.string('eMax'),
                value = cms.string('eMax()')
            ),
            cms.PSet(
                name = cms.string('sigmaPhiPhiTot'),
                value = cms.string('sigmaPhiPhiTot()')
            ),
            cms.PSet(
                name = cms.string('sigmaZZ'),
                value = cms.string('sigmaZZ()')
            ),
            cms.PSet(
                name = cms.string('layer50percent'),
                value = cms.string('layer50percent()')
            ),
            cms.PSet(
                name = cms.string('triggerCells67percent'),
                value = cms.string('triggerCells67percent()')
            )
        ),
        weightsFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/hgcal_egID/Photon_vs_Pion_BDTweights_1116.xml.gz'),
        wp = cms.string('0.05')
    ),
    etMin = cms.double(1.0),
    preEmId = cms.string('hOverE < 0.3 && hOverE >= 0'),
    resol = cms.PSet(
        etaBins = cms.vdouble(1.9, 2.2, 2.5, 2.8, 2.95),
        kind = cms.string('calo'),
        offset = cms.vdouble(2.593, 3.089, 2.879, 2.664, 2.947),
        scale = cms.vdouble(0.12, 0.098, 0.099, 0.098, 0.124)
    ),
    src = cms.InputTag("l1tHGCalBackEndLayer2Producer","HGCalBackendLayer2Processor3DClustering"),
    useEMInterpretation = cms.string('allKeepHad')
)


process.l1tPFClustersFromL1EGClusters = cms.EDProducer("PFClusterProducerFromL1EGClusters",
    corrector = cms.string('L1Trigger/Phase2L1ParticleFlow/data/emcorr_barrel.root'),
    etMin = cms.double(0.5),
    etaBounds = cms.vdouble(-1.5, 0.0, 1.5),
    maxClustersEtaPhi = cms.vuint32(
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8, 8, 8, 8, 8,
        8
    ),
    phiBounds = cms.vdouble(
        -3.14159265359, -2.792526803191111, -2.4434609527922224, -2.0943951023933334, -1.7453292519944446,
        -1.3962634015955555, -1.0471975511966667, -0.6981317007977778, -0.3490658503988889, 0.0,
        0.3490658503988889, 0.6981317007977778, 1.0471975511966667, 1.3962634015955555, 1.7453292519944446,
        2.0943951023933334, 2.4434609527922224, 2.792526803191111, 3.14159265359
    ),
    resol = cms.PSet(
        etaBins = cms.vdouble(0.7, 1.2, 1.6),
        kind = cms.string('calo'),
        offset = cms.vdouble(0.873, 1.081, 1.563),
        scale = cms.vdouble(0.011, 0.015, 0.012)
    ),
    src = cms.InputTag("l1tEGammaClusterEmuProducer")
)


process.l1tPFTracksFromL1Tracks = cms.EDProducer("PFTrackProducerFromL1Tracks",
    L1TrackTag = cms.InputTag("l1tTTTracksFromTrackletEmulation","Level1TTTracks"),
    nParam = cms.uint32(4),
    qualityBits = cms.vstring(
        'momentum.perp > 2 && getStubRefs.size >= 4 && chi2Red < 15',
        'momentum.perp > 2 && getStubRefs.size >= 6 && chi2Red < 15 && chi2 < 50',
        'momentum.perp > 5 && getStubRefs.size >= 4'
    ),
    redigitizeTrackWord = cms.bool(True),
    resolCalo = cms.PSet(
        etaBins = cms.vdouble(
            1.3, 1.7, 2.8, 3.2, 4.0,
            5.0
        ),
        kind = cms.string('calo'),
        offset = cms.vdouble(
            2.688, 1.382, 2.096, 1.022, 0.757,
            0.185
        ),
        ptMax = cms.vdouble(
            999999, 999999, 999999, 999999, 999999,
            999999
        ),
        ptMin = cms.vdouble(
            5.0, 5.0, 5.0, 5.0, 5.0,
            5.0
        ),
        scale = cms.vdouble(
            0.154, 0.341, 0.105, 0.255, 0.208,
            0.306
        )
    ),
    resolTrack = cms.PSet(
        etaBins = cms.vdouble(0.8, 1.2, 1.5, 2.0, 2.5),
        kind = cms.string('track'),
        offset = cms.vdouble(0.007, 0.009, 0.011, 0.015, 0.025),
        scale = cms.vdouble(0.275, 0.404, 0.512, 0.48, 1.132)
    )
)


process.l1tPFTracksFromL1TracksExtended = cms.EDProducer("PFTrackProducerFromL1Tracks",
    L1TrackTag = cms.InputTag("l1tTTTracksFromExtendedTrackletEmulation","Level1TTTracks"),
    nParam = cms.uint32(5),
    qualityBits = cms.vstring(
        'momentum.perp > 2 && getStubRefs.size >= 4 && chi2Red < 15 && POCA.x < 1.0 && POCA.x > -1.0 && POCA.y < 1.0 && POCA.y > -1.0',
        'momentum.perp > 2 && getStubRefs.size >= 6 && chi2Red < 15 && chi2 < 50 && POCA.x < 1.0 && POCA.x > -1.0 && POCA.y < 1.0 && POCA.y > -1.0',
        'momentum.perp > 5 && getStubRefs.size >= 4 && POCA.x < 1.0 && POCA.x > -1.0 && POCA.y < 1.0 && POCA.y > -1.0'
    ),
    redigitizeTrackWord = cms.bool(True),
    resolCalo = cms.PSet(
        etaBins = cms.vdouble(
            1.3, 1.7, 2.8, 3.2, 4.0,
            5.0
        ),
        kind = cms.string('calo'),
        offset = cms.vdouble(
            2.688, 1.382, 2.096, 1.022, 0.757,
            0.185
        ),
        ptMax = cms.vdouble(
            999999, 999999, 999999, 999999, 999999,
            999999
        ),
        ptMin = cms.vdouble(
            5.0, 5.0, 5.0, 5.0, 5.0,
            5.0
        ),
        scale = cms.vdouble(
            0.154, 0.341, 0.105, 0.255, 0.208,
            0.306
        )
    ),
    resolTrack = cms.PSet(
        etaBins = cms.vdouble(0.8, 1.2, 1.5, 2.0, 2.5),
        kind = cms.string('track'),
        offset = cms.vdouble(0.007, 0.009, 0.011, 0.015, 0.025),
        scale = cms.vdouble(0.275, 0.404, 0.512, 0.48, 1.132)
    )
)


process.l1tPhase1JetCalibrator9 = cms.EDProducer("Phase1L1TJetCalibrator",
    absEtaBinning = cms.vdouble(
        0, 0.435, 0.783, 1.131, 1.479,
        1.83, 2.172, 2.5, 3, 5.191
    ),
    calibration = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(0.435),
            etaMin = cms.double(0),
            l1tCalibrationFactors = cms.vdouble(
                1.23979294877, 1.23979294877, 1.23979294877, 1.2055534748, 1.16221465185,
                1.1287061285, 1.10174091558, 1.08560073006, 1.06054297933, 1.05390045065,
                1.04755164016, 1.04056108809, 1.03288843815, 1.02558076448, 1.01840595314,
                1.01028026223, 0.994979528345, 0.994359643857, 0.993589993902, 0.992484418292,
                0.991580925563, 0.990450519445, 0.989274770481, 0.989062288938, 0.987526878875,
                0.987143421961, 0.986960123031, 0.985118762072, 0.983812522399, 0.982603964756,
                0.982487894417, 0.9776664197
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.8880031307, 23.7353661004, 31.9930260358, 41.2104176206,
                50.6051414267, 60.247220362, 69.8880955069, 79.7508114194, 89.9187170854,
                99.552677671, 109.444721239, 120.318481705, 131.427409379, 142.167155912,
                153.513517796, 170.885803296, 192.373045006, 219.860641852, 262.12573798,
                307.407472656, 353.248854037, 405.226529713, 436.515403398, 475.910561056,
                519.15927673, 531.933201461, 577.566348974, 648.509090909, 705.189285714,
                735.044642857, 846.330357143, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(0.783),
            etaMin = cms.double(0.435),
            l1tCalibrationFactors = cms.vdouble(
                1.26088033666, 1.26088033666, 1.26088033666, 1.2249182059, 1.17603697403,
                1.13860928847, 1.11140597558, 1.09630616073, 1.06349385292, 1.05842913938,
                1.05398549405, 1.04895539789, 1.04466168817, 1.03903857045, 1.03439337381,
                1.02704723184, 1.01728260528, 1.00806725137, 1.00707008321, 1.01235956493,
                1.01667298057, 1.02381172068, 1.02613493771, 1.03240539224, 1.03261816221,
                1.03819304914, 1.04119620768, 1.04378137592, 1.04875440814, 1.05051419343,
                1.05716649068, 1.06763963981
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.693599742, 23.4533780602, 31.574804867, 40.607871487,
                50.0226273473, 59.5432535328, 68.9906256857, 78.7889753636, 89.2161833142,
                99.0522298664, 108.852466017, 118.497599303, 128.756191525, 139.378383999,
                151.782981506, 169.483440448, 189.1175302, 214.728316677, 255.782543996,
                301.126430305, 355.202323162, 399.880704365, 440.459131006, 471.072245322,
                498.400961538, 538.905603448, 565.293103448, 600.982142857, 632.773809524,
                672.494791667, 753.359375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.131),
            etaMin = cms.double(0.783),
            l1tCalibrationFactors = cms.vdouble(
                1.27397054477, 1.27397054477, 1.27397054477, 1.22056106783, 1.15938219586,
                1.1160040995, 1.09031092233, 1.08156433802, 1.05625132693, 1.04972333604,
                1.04407369194, 1.03742876202, 1.03092173843, 1.02452207329, 1.0174828527,
                1.0081675749, 0.995620430116, 0.997797998703, 0.994732173644, 0.990755096265,
                0.985892068632, 0.981548089599, 0.976271265679, 0.973826119963, 0.968463015729,
                0.967588482776, 0.961575991775, 0.957590009436, 0.946036734844, 0.943173725323,
                0.939992812643, 0.933960176944
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.880217392, 23.9022653333, 32.2717617865, 41.5428951519,
                51.1274314482, 60.6194200011, 70.1354681051, 79.7123453897, 89.5991512838,
                99.1387572012, 108.769969768, 119.072828547, 129.183554009, 139.711187156,
                152.522826668, 169.649214185, 190.606597094, 218.71218636, 257.712877156,
                306.665735047, 357.65034307, 410.926384374, 453.687469423, 496.926339286,
                531.46780303, 569.60530303, 624.972727273, 711.022727273, 790.854166667,
                824.322916667, 875.34375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(1.131),
            l1tCalibrationFactors = cms.vdouble(
                1.34802320734, 1.34802320734, 1.34802320734, 1.30212233785, 1.24209460275,
                1.19015306181, 1.15264110831, 1.12372171912, 1.10729927389, 1.10106230836,
                1.09548001551, 1.08898845858, 1.08276378762, 1.07376271165, 1.07053777522,
                1.06006587987, 1.04671444238, 1.03585271305, 1.04610056164, 1.03768418,
                1.03119548102, 1.02676678101, 1.01915019189, 1.01242076126, 1.00893312811,
                1.00508141223, 1.00136013543, 0.995951447598, 0.984231225019, 0.980800927737,
                0.973451186577, 0.926524468915
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.9252841647, 23.7590878196, 31.7131252613, 40.1274040838,
                49.1249022327, 58.1527487225, 67.4760337457, 77.3005352247, 86.9408929333,
                95.9552442624, 105.163768208, 114.862223233, 126.474646588, 135.799222426,
                146.245567688, 164.415226489, 182.882205173, 207.962905257, 252.719711752,
                302.236065785, 338.504892994, 378.520698052, 426.179788961, 460.12202381,
                484.504166667, 509.6625, 539.993269231, 596.897435897, 647.229166667,
                683.041666667, 863.354166667, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.83),
            etaMin = cms.double(1.479),
            l1tCalibrationFactors = cms.vdouble(
                1.64615015562, 1.64615015562, 1.64615015562, 1.64615015562, 1.62354748453,
                1.58955281827, 1.5596420256, 1.52857227236, 1.4981491184, 1.47483671945,
                1.44848305769, 1.42279372844, 1.41374089612, 1.4008972173, 1.39160024497,
                1.37606952993, 1.3577735774, 1.32702431242, 1.28941444869, 1.28016614572,
                1.24765615972, 1.22053713127, 1.17427545004, 1.15813500374, 1.14591122897,
                1.10386182373, 1.08986646446, 1.08400487869, 1.05705595373, 0.986136154545,
                0.970000328559, 0.926367737882, 0.92097540828
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.2534283688, 19.3658902191, 24.8886644469, 31.0322354574,
                37.7896859331, 44.4976332373, 51.4162446385, 59.0148938612, 66.284690538,
                73.8402824355, 82.7989717528, 90.9876146413, 99.3412409944, 107.78800796,
                117.259892418, 130.164931944, 148.875922888, 174.955265646, 212.930051719,
                261.237428866, 306.506597467, 362.21578114, 409.590242347, 431.123798077,
                472.326923077, 514.875, 529.95, 554.859090909, 629.159090909,
                695.25, 740.625, 777.84375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.172),
            etaMin = cms.double(1.83),
            l1tCalibrationFactors = cms.vdouble(
                1.46868261989, 1.46868261989, 1.46868261989, 1.46868261989, 1.43911078656,
                1.40910755658, 1.38320919564, 1.35606709317, 1.32433798702, 1.30822665905,
                1.27541632146, 1.2610425712, 1.25048382907, 1.23727857048, 1.22557226003,
                1.20350464618, 1.17346110455, 1.15438568707, 1.17264007703, 1.14234287567,
                1.09578935279, 1.05521480704, 1.05300376705, 0.948841272141, 0.90157065563,
                0.900460510028, 0.886102626899, 0.870622263217, 0.794268915654
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.0001433736, 20.3973850042, 26.6770760436, 33.5779131491,
                40.9929083245, 48.3312410359, 55.7380156093, 64.5733527179, 72.1987214889,
                78.6859384392, 87.4179205144, 95.9828439006, 104.146361706, 112.70409741,
                124.306269775, 142.207731347, 159.081299984, 186.111094647, 227.056412071,
                278.975766649, 337.838362069, 366.74375, 438.608333333, 540.914583333,
                573.6, 584.05, 604.208333333, 666.25, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.5),
            etaMin = cms.double(2.172),
            l1tCalibrationFactors = cms.vdouble(
                1.33772238866, 1.33772238866, 1.33772238866, 1.33473934195, 1.30242829723,
                1.27631075498, 1.25143840782, 1.2365993847, 1.22283208594, 1.21383948973,
                1.20270942905, 1.19242313522, 1.18157505638, 1.17163939573, 1.16212445691,
                1.15064512868, 1.12111242416, 1.10180561512, 1.06494795446, 1.02791008468,
                0.979565936906, 0.935460737671, 0.922476716325, 0.870214599247, 0.862692426562,
                0.780257657402, 0.726159840141, 0.698509844652
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.2987042682, 20.6666592562, 27.150657531, 34.834542074,
                42.9223748303, 51.5696382427, 59.9311353298, 68.6376432274, 76.9323193226,
                85.3108305134, 95.1635083363, 104.886459308, 114.448100114, 123.396424629,
                133.054919468, 151.922665869, 174.391475487, 200.175498357, 244.035295655,
                306.180445151, 373.469537815, 415.021825397, 462.511111111, 506.025,
                571.5, 670.875, 730.375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(2.5),
            l1tCalibrationFactors = cms.vdouble(
                0.674661962699, 0.674661962699, 0.727593234951, 0.822725694893, 0.927569668143,
                0.97660505882, 0.987209098964, 1.03132324625, 1.02714227345, 1.02334276675,
                1.01880895382, 1.01335319939, 1.01008031255, 1.00497131654, 1.00149634384,
                0.991533222988, 0.9837688439, 1.00989570361, 1.00167820652, 0.985530405844,
                0.971802700851, 0.943756240228, 0.937016745904
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 26.0451028139, 30.9749499579, 36.7640499457, 45.5682186743,
                55.4542083976, 65.3014519722, 75.6207108652, 85.4615770865, 94.6729848702,
                104.29165568, 115.822037843, 125.897005668, 135.571730212, 145.479710821,
                160.990528129, 181.45236014, 203.493072087, 229.468858801, 267.709270335,
                314.597744361, 380.160714286, 434.755952381, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(5.191),
            etaMin = cms.double(3),
            l1tCalibrationFactors = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 50.6609817658, 87.2333638822, 128.156144343, 165.535850739,
                220.379807692, 214.8125, float('inf')
            )
        )
    ),
    inputCollectionTag = cms.InputTag("l1tPhase1JetProducer","UncalibratedPhase1L1TJetFromPfCandidates"),
    outputCollectionName = cms.string('Phase1L1TJetFromPfCandidates')
)


process.l1tPhase1JetCalibrator9x9 = cms.EDProducer("Phase1L1TJetCalibrator",
    absEtaBinning = cms.vdouble(
        0, 0.435, 0.783, 1.131, 1.479,
        1.83, 2.172, 2.5, 3, 5.191
    ),
    calibration = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(0.435),
            etaMin = cms.double(0),
            l1tCalibrationFactors = cms.vdouble(
                1.23979294877, 1.23979294877, 1.23979294877, 1.2055534748, 1.16221465185,
                1.1287061285, 1.10174091558, 1.08560073006, 1.06054297933, 1.05390045065,
                1.04755164016, 1.04056108809, 1.03288843815, 1.02558076448, 1.01840595314,
                1.01028026223, 0.994979528345, 0.994359643857, 0.993589993902, 0.992484418292,
                0.991580925563, 0.990450519445, 0.989274770481, 0.989062288938, 0.987526878875,
                0.987143421961, 0.986960123031, 0.985118762072, 0.983812522399, 0.982603964756,
                0.982487894417, 0.9776664197
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.8880031307, 23.7353661004, 31.9930260358, 41.2104176206,
                50.6051414267, 60.247220362, 69.8880955069, 79.7508114194, 89.9187170854,
                99.552677671, 109.444721239, 120.318481705, 131.427409379, 142.167155912,
                153.513517796, 170.885803296, 192.373045006, 219.860641852, 262.12573798,
                307.407472656, 353.248854037, 405.226529713, 436.515403398, 475.910561056,
                519.15927673, 531.933201461, 577.566348974, 648.509090909, 705.189285714,
                735.044642857, 846.330357143, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(0.783),
            etaMin = cms.double(0.435),
            l1tCalibrationFactors = cms.vdouble(
                1.26088033666, 1.26088033666, 1.26088033666, 1.2249182059, 1.17603697403,
                1.13860928847, 1.11140597558, 1.09630616073, 1.06349385292, 1.05842913938,
                1.05398549405, 1.04895539789, 1.04466168817, 1.03903857045, 1.03439337381,
                1.02704723184, 1.01728260528, 1.00806725137, 1.00707008321, 1.01235956493,
                1.01667298057, 1.02381172068, 1.02613493771, 1.03240539224, 1.03261816221,
                1.03819304914, 1.04119620768, 1.04378137592, 1.04875440814, 1.05051419343,
                1.05716649068, 1.06763963981
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.693599742, 23.4533780602, 31.574804867, 40.607871487,
                50.0226273473, 59.5432535328, 68.9906256857, 78.7889753636, 89.2161833142,
                99.0522298664, 108.852466017, 118.497599303, 128.756191525, 139.378383999,
                151.782981506, 169.483440448, 189.1175302, 214.728316677, 255.782543996,
                301.126430305, 355.202323162, 399.880704365, 440.459131006, 471.072245322,
                498.400961538, 538.905603448, 565.293103448, 600.982142857, 632.773809524,
                672.494791667, 753.359375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.131),
            etaMin = cms.double(0.783),
            l1tCalibrationFactors = cms.vdouble(
                1.27397054477, 1.27397054477, 1.27397054477, 1.22056106783, 1.15938219586,
                1.1160040995, 1.09031092233, 1.08156433802, 1.05625132693, 1.04972333604,
                1.04407369194, 1.03742876202, 1.03092173843, 1.02452207329, 1.0174828527,
                1.0081675749, 0.995620430116, 0.997797998703, 0.994732173644, 0.990755096265,
                0.985892068632, 0.981548089599, 0.976271265679, 0.973826119963, 0.968463015729,
                0.967588482776, 0.961575991775, 0.957590009436, 0.946036734844, 0.943173725323,
                0.939992812643, 0.933960176944
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.880217392, 23.9022653333, 32.2717617865, 41.5428951519,
                51.1274314482, 60.6194200011, 70.1354681051, 79.7123453897, 89.5991512838,
                99.1387572012, 108.769969768, 119.072828547, 129.183554009, 139.711187156,
                152.522826668, 169.649214185, 190.606597094, 218.71218636, 257.712877156,
                306.665735047, 357.65034307, 410.926384374, 453.687469423, 496.926339286,
                531.46780303, 569.60530303, 624.972727273, 711.022727273, 790.854166667,
                824.322916667, 875.34375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(1.131),
            l1tCalibrationFactors = cms.vdouble(
                1.34802320734, 1.34802320734, 1.34802320734, 1.30212233785, 1.24209460275,
                1.19015306181, 1.15264110831, 1.12372171912, 1.10729927389, 1.10106230836,
                1.09548001551, 1.08898845858, 1.08276378762, 1.07376271165, 1.07053777522,
                1.06006587987, 1.04671444238, 1.03585271305, 1.04610056164, 1.03768418,
                1.03119548102, 1.02676678101, 1.01915019189, 1.01242076126, 1.00893312811,
                1.00508141223, 1.00136013543, 0.995951447598, 0.984231225019, 0.980800927737,
                0.973451186577, 0.926524468915
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.9252841647, 23.7590878196, 31.7131252613, 40.1274040838,
                49.1249022327, 58.1527487225, 67.4760337457, 77.3005352247, 86.9408929333,
                95.9552442624, 105.163768208, 114.862223233, 126.474646588, 135.799222426,
                146.245567688, 164.415226489, 182.882205173, 207.962905257, 252.719711752,
                302.236065785, 338.504892994, 378.520698052, 426.179788961, 460.12202381,
                484.504166667, 509.6625, 539.993269231, 596.897435897, 647.229166667,
                683.041666667, 863.354166667, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.83),
            etaMin = cms.double(1.479),
            l1tCalibrationFactors = cms.vdouble(
                1.64615015562, 1.64615015562, 1.64615015562, 1.64615015562, 1.62354748453,
                1.58955281827, 1.5596420256, 1.52857227236, 1.4981491184, 1.47483671945,
                1.44848305769, 1.42279372844, 1.41374089612, 1.4008972173, 1.39160024497,
                1.37606952993, 1.3577735774, 1.32702431242, 1.28941444869, 1.28016614572,
                1.24765615972, 1.22053713127, 1.17427545004, 1.15813500374, 1.14591122897,
                1.10386182373, 1.08986646446, 1.08400487869, 1.05705595373, 0.986136154545,
                0.970000328559, 0.926367737882, 0.92097540828
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.2534283688, 19.3658902191, 24.8886644469, 31.0322354574,
                37.7896859331, 44.4976332373, 51.4162446385, 59.0148938612, 66.284690538,
                73.8402824355, 82.7989717528, 90.9876146413, 99.3412409944, 107.78800796,
                117.259892418, 130.164931944, 148.875922888, 174.955265646, 212.930051719,
                261.237428866, 306.506597467, 362.21578114, 409.590242347, 431.123798077,
                472.326923077, 514.875, 529.95, 554.859090909, 629.159090909,
                695.25, 740.625, 777.84375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.172),
            etaMin = cms.double(1.83),
            l1tCalibrationFactors = cms.vdouble(
                1.46868261989, 1.46868261989, 1.46868261989, 1.46868261989, 1.43911078656,
                1.40910755658, 1.38320919564, 1.35606709317, 1.32433798702, 1.30822665905,
                1.27541632146, 1.2610425712, 1.25048382907, 1.23727857048, 1.22557226003,
                1.20350464618, 1.17346110455, 1.15438568707, 1.17264007703, 1.14234287567,
                1.09578935279, 1.05521480704, 1.05300376705, 0.948841272141, 0.90157065563,
                0.900460510028, 0.886102626899, 0.870622263217, 0.794268915654
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.0001433736, 20.3973850042, 26.6770760436, 33.5779131491,
                40.9929083245, 48.3312410359, 55.7380156093, 64.5733527179, 72.1987214889,
                78.6859384392, 87.4179205144, 95.9828439006, 104.146361706, 112.70409741,
                124.306269775, 142.207731347, 159.081299984, 186.111094647, 227.056412071,
                278.975766649, 337.838362069, 366.74375, 438.608333333, 540.914583333,
                573.6, 584.05, 604.208333333, 666.25, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.5),
            etaMin = cms.double(2.172),
            l1tCalibrationFactors = cms.vdouble(
                1.33772238866, 1.33772238866, 1.33772238866, 1.33473934195, 1.30242829723,
                1.27631075498, 1.25143840782, 1.2365993847, 1.22283208594, 1.21383948973,
                1.20270942905, 1.19242313522, 1.18157505638, 1.17163939573, 1.16212445691,
                1.15064512868, 1.12111242416, 1.10180561512, 1.06494795446, 1.02791008468,
                0.979565936906, 0.935460737671, 0.922476716325, 0.870214599247, 0.862692426562,
                0.780257657402, 0.726159840141, 0.698509844652
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.2987042682, 20.6666592562, 27.150657531, 34.834542074,
                42.9223748303, 51.5696382427, 59.9311353298, 68.6376432274, 76.9323193226,
                85.3108305134, 95.1635083363, 104.886459308, 114.448100114, 123.396424629,
                133.054919468, 151.922665869, 174.391475487, 200.175498357, 244.035295655,
                306.180445151, 373.469537815, 415.021825397, 462.511111111, 506.025,
                571.5, 670.875, 730.375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(2.5),
            l1tCalibrationFactors = cms.vdouble(
                0.674661962699, 0.674661962699, 0.727593234951, 0.822725694893, 0.927569668143,
                0.97660505882, 0.987209098964, 1.03132324625, 1.02714227345, 1.02334276675,
                1.01880895382, 1.01335319939, 1.01008031255, 1.00497131654, 1.00149634384,
                0.991533222988, 0.9837688439, 1.00989570361, 1.00167820652, 0.985530405844,
                0.971802700851, 0.943756240228, 0.937016745904
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 26.0451028139, 30.9749499579, 36.7640499457, 45.5682186743,
                55.4542083976, 65.3014519722, 75.6207108652, 85.4615770865, 94.6729848702,
                104.29165568, 115.822037843, 125.897005668, 135.571730212, 145.479710821,
                160.990528129, 181.45236014, 203.493072087, 229.468858801, 267.709270335,
                314.597744361, 380.160714286, 434.755952381, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(5.191),
            etaMin = cms.double(3),
            l1tCalibrationFactors = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 50.6609817658, 87.2333638822, 128.156144343, 165.535850739,
                220.379807692, 214.8125, float('inf')
            )
        )
    ),
    inputCollectionTag = cms.InputTag("l1tPhase1JetProducer9x9","UncalibratedPhase1L1TJetFromPfCandidates"),
    outputCollectionName = cms.string('Phase1L1TJetFromPfCandidates')
)


process.l1tPhase1JetCalibrator9x9trimmed = cms.EDProducer("Phase1L1TJetCalibrator",
    absEtaBinning = cms.vdouble(
        0, 0.435, 0.783, 1.131, 1.479,
        1.83, 2.172, 2.5, 3, 5.191
    ),
    calibration = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(0.435),
            etaMin = cms.double(0),
            l1tCalibrationFactors = cms.vdouble(
                1.26806262588, 1.26806262588, 1.26806262588, 1.21946518166, 1.16379314256,
                1.12254571737, 1.09470447579, 1.0841543755, 1.0506829785, 1.04497069514,
                1.03934326232, 1.03345095744, 1.02750216269, 1.02112447625, 1.01574388754,
                1.00810805817, 0.99605714473, 0.998607125466, 0.993219133111, 0.985092796485,
                0.978878065815, 0.970789716092, 0.961656436256, 0.959516385399, 0.948147862573,
                0.947200388265, 0.946753222399, 0.932749319061, 0.926825446704, 0.923647034369,
                0.913806018949, 0.881718922491
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.6077877711, 23.758945127, 32.4028984708, 42.0487682803,
                52.0149801449, 62.3890828336, 72.8126081905, 83.1366634984, 93.6055295245,
                103.912979585, 114.384063612, 125.147255659, 136.35164449, 147.039551665,
                158.871071713, 176.765709913, 197.959631424, 225.348244676, 268.360888373,
                314.00482813, 359.527865313, 414.339896094, 450.220016892, 493.214342949,
                532.413003663, 536.851785714, 582.845833333, 646.270833333, 675.241071429,
                716.678571429, 850.125, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(0.783),
            etaMin = cms.double(0.435),
            l1tCalibrationFactors = cms.vdouble(
                1.27022476075, 1.27022476075, 1.27022476075, 1.23193977019, 1.17930700881,
                1.13682836123, 1.10620197739, 1.08803729104, 1.06551671995, 1.05815998513,
                1.05091777833, 1.04351195843, 1.03840402395, 1.02970511677, 1.02322448674,
                1.01173641061, 0.998762625873, 1.01162336339, 1.01141830879, 1.01110184225,
                1.01084507077, 1.01048193189, 1.01025026917, 1.00998987557, 1.00977460446,
                1.00958480149, 1.00938402751, 1.00923173234, 1.00896205922, 1.00877952325,
                1.00848454553, 1.00809094748
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.455812263, 23.4058211563, 31.8076589224, 41.2694704832,
                51.4874752049, 61.8853021467, 72.1485970296, 82.3017709389, 92.821899346,
                103.57630449, 114.366868474, 123.585206897, 133.756106455, 144.938211106,
                158.174975175, 176.194963818, 195.029478711, 220.750032768, 262.570643701,
                308.538413528, 358.248823119, 405.945769577, 445.403605016, 483.547003284,
                516.029761905, 547.35, 575.6625, 609.5, 645.7625,
                684.054166667, 739.270833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.131),
            etaMin = cms.double(0.783),
            l1tCalibrationFactors = cms.vdouble(
                1.26940863552, 1.26940863552, 1.26940863552, 1.21850042272, 1.16014066757,
                1.11360382831, 1.08451810312, 1.06753212736, 1.05501857105, 1.04712872618,
                1.03953145463, 1.03129558228, 1.02392940863, 1.01647040511, 1.00765667693,
                0.997452910609, 0.981686885508, 0.989286565044, 0.992427119505, 0.996927682694,
                1.00148185029, 1.00626281233, 1.01118610536, 1.01492397525, 1.0197730491,
                1.02294548929, 1.02309909545, 1.03179752273, 1.04335891364, 1.04679419517,
                1.04697871887, 1.05665639769
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.658158537, 23.8634314296, 32.6191125159, 42.4492040271,
                52.9120745879, 63.2335833679, 73.7409226942, 84.0418964903, 94.148332101,
                104.682994045, 115.453031153, 126.065870612, 136.150267568, 147.219321527,
                160.155420808, 177.820618512, 198.152518248, 224.425247256, 264.972493816,
                313.021014808, 362.557459677, 414.052651985, 460.012722795, 505.578952902,
                548.144755747, 565.794270833, 612.7671875, 720.275, 799.854166667,
                819.0625, 871.395833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(1.131),
            l1tCalibrationFactors = cms.vdouble(
                1.35067406191, 1.35067406191, 1.35067406191, 1.29728973727, 1.23323857604,
                1.1805316629, 1.14192838643, 1.12335733217, 1.1065907126, 1.1005436618,
                1.09369739262, 1.08689105877, 1.08047792193, 1.07301990489, 1.06799861036,
                1.0578434328, 1.04620517219, 1.03279280198, 1.03276766643, 1.05490363283,
                1.0613631336, 1.07151789312, 1.0923432672, 1.10236162162, 1.12458041647,
                1.13080591424, 1.15738278091, 1.18032588359, 1.20641120054, 1.24407887972,
                1.35400575741
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.5873975086, 23.8386796597, 32.2204904018, 41.0711979739,
                50.5775158961, 60.7008778657, 70.3592246275, 80.5033152458, 90.7596180755,
                100.458044915, 110.727608677, 120.671367886, 131.105326809, 140.492334228,
                151.908160762, 168.301305891, 187.144529404, 214.024926059, 257.981265415,
                293.073033708, 313.461711712, 351.47989353, 389.330681818, 428.891447368,
                463.797697368, 504.052083333, 564.821969697, 624.988636364, 703.225,
                884.35, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.83),
            etaMin = cms.double(1.479),
            l1tCalibrationFactors = cms.vdouble(
                1.63343989323, 1.63343989323, 1.63343989323, 1.63343989323, 1.61237327031,
                1.58129290649, 1.54880181313, 1.51437276367, 1.47566044577, 1.4333612461,
                1.43007616674, 1.41838888661, 1.41120688977, 1.40292719871, 1.39289499293,
                1.38154733635, 1.36518171857, 1.34179569075, 1.31131037345, 1.21512470624,
                1.19652546359, 1.18052243169, 1.14219697689, 1.12090132667, 1.10494445955,
                1.08116744865, 1.04972485653, 1.02388122645, 1.02106332779, 0.93821710715,
                0.932912827317, 0.900954541324
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.0304333699, 19.2702852281, 25.0387598316, 31.5205165869,
                38.5596312994, 45.8035002303, 53.2357524128, 61.14689424, 69.6758091231,
                77.1332356297, 85.7578326385, 94.7364478681, 102.093621468, 110.807017112,
                120.98025046, 134.167127072, 153.082251962, 178.715988762, 222.463142692,
                269.236689617, 301.854005866, 353.065940767, 409.266883117, 444.382411067,
                481.836956522, 533.888888889, 587.888888889, 614.90625, 695.65625,
                778.75, 813.875, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.172),
            etaMin = cms.double(1.83),
            l1tCalibrationFactors = cms.vdouble(
                1.4878363144, 1.4878363144, 1.4878363144, 1.48518474866, 1.44553707599,
                1.40800746363, 1.37269392814, 1.34268728519, 1.31155107185, 1.29724964634,
                1.26824717982, 1.25895653021, 1.25080118853, 1.24412237598, 1.23242162986,
                1.21983464552, 1.19947769179, 1.17915682723, 1.19591426516, 1.16520900199,
                1.11521954951, 1.08960480689, 1.06320579474, 0.984904677633, 0.936138290441,
                0.933930169885, 0.906741381816, 0.83587888946
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.6323212201, 20.2961463384, 26.9638979746, 34.2907286866,
                42.0772600421, 50.2694398412, 58.5750993499, 67.719467579, 75.5350197454,
                83.5378418246, 93.3456200252, 101.928069729, 109.225642018, 118.267354545,
                130.215556381, 146.422127101, 166.433333333, 193.380670156, 231.798066137,
                288.213675743, 341.070380435, 377.434442935, 450.6328125, 539.46875,
                575.10625, 595.658333333, 664.208333333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.5),
            etaMin = cms.double(2.172),
            l1tCalibrationFactors = cms.vdouble(
                1.34807839515, 1.34807839515, 1.34807839515, 1.33809647408, 1.28296668109,
                1.24225927144, 1.21974923257, 1.21649951103, 1.23064762664, 1.1629973435,
                1.15852840915, 1.15372227709, 1.15041260925, 1.14530829511, 1.13990768956,
                1.13512676324, 1.125588949, 1.11458405118, 1.09607958404, 1.05737289774,
                1.01895994641, 0.992663655394, 0.955621083551, 0.93513823446, 0.901760000269,
                0.843868420876, 0.795304246419, 0.770482557252
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.2387099279, 20.6150961319, 27.4619155051, 35.7501165961,
                44.8270237134, 54.3715537124, 63.4511614119, 72.3586695675, 81.6352356283,
                91.1311643255, 101.316594704, 110.228974539, 119.468803554, 131.004799458,
                142.185666464, 157.90981642, 180.468831547, 207.538452813, 253.905743927,
                316.433023873, 368.898168103, 420.252232143, 466.892857143, 510.5625,
                584.5625, 670.875, 730.375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(2.5),
            l1tCalibrationFactors = cms.vdouble(
                0.482004686949, 0.482004686949, 0.564202174589, 0.736584151614, 0.911565084921,
                0.987344739275, 0.993152983902, 1.03806284348, 1.03244226103, 1.0260158536,
                1.02041940616, 1.0134090195, 1.0076503873, 1.00104447561, 0.995969648589,
                0.981247152992, 0.971158824688, 0.966585664599, 0.963405635485, 0.958075648063,
                0.952490699151, 0.940177797744, 0.938930857749
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 25.9618281426, 30.6891444166, 36.5086109677, 45.3574132365,
                55.0008759284, 64.7493209607, 75.2843507883, 85.0009967022, 94.7383169517,
                104.456129397, 114.645959573, 124.966880164, 134.960872423, 144.402159807,
                160.403905664, 180.457955711, 202.51439951, 229.539912281, 264.65878483,
                309.702205882, 383.5625, 439.520833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(5.191),
            etaMin = cms.double(3),
            l1tCalibrationFactors = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 50.6626115353, 87.3285137419, 126.832659901, 178.631354515,
                238.634615385, 218.625, float('inf')
            )
        )
    ),
    inputCollectionTag = cms.InputTag("l1tPhase1JetProducer9x9trimmed","UncalibratedPhase1L1TJetFromPfCandidates"),
    outputCollectionName = cms.string('Phase1L1TJetFromPfCandidates')
)


process.l1tPhase1JetCalibrator_9x9trimmed = cms.EDProducer("Phase1L1TJetCalibrator",
    absEtaBinning = cms.vdouble(
        0, 0.435, 0.783, 1.131, 1.479,
        1.83, 2.172, 2.5, 3, 5.191
    ),
    calibration = cms.VPSet(
        cms.PSet(
            etaMax = cms.double(0.435),
            etaMin = cms.double(0),
            l1tCalibrationFactors = cms.vdouble(
                1.26806262588, 1.26806262588, 1.26806262588, 1.21946518166, 1.16379314256,
                1.12254571737, 1.09470447579, 1.0841543755, 1.0506829785, 1.04497069514,
                1.03934326232, 1.03345095744, 1.02750216269, 1.02112447625, 1.01574388754,
                1.00810805817, 0.99605714473, 0.998607125466, 0.993219133111, 0.985092796485,
                0.978878065815, 0.970789716092, 0.961656436256, 0.959516385399, 0.948147862573,
                0.947200388265, 0.946753222399, 0.932749319061, 0.926825446704, 0.923647034369,
                0.913806018949, 0.881718922491
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.6077877711, 23.758945127, 32.4028984708, 42.0487682803,
                52.0149801449, 62.3890828336, 72.8126081905, 83.1366634984, 93.6055295245,
                103.912979585, 114.384063612, 125.147255659, 136.35164449, 147.039551665,
                158.871071713, 176.765709913, 197.959631424, 225.348244676, 268.360888373,
                314.00482813, 359.527865313, 414.339896094, 450.220016892, 493.214342949,
                532.413003663, 536.851785714, 582.845833333, 646.270833333, 675.241071429,
                716.678571429, 850.125, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(0.783),
            etaMin = cms.double(0.435),
            l1tCalibrationFactors = cms.vdouble(
                1.27022476075, 1.27022476075, 1.27022476075, 1.23193977019, 1.17930700881,
                1.13682836123, 1.10620197739, 1.08803729104, 1.06551671995, 1.05815998513,
                1.05091777833, 1.04351195843, 1.03840402395, 1.02970511677, 1.02322448674,
                1.01173641061, 0.998762625873, 1.01162336339, 1.01141830879, 1.01110184225,
                1.01084507077, 1.01048193189, 1.01025026917, 1.00998987557, 1.00977460446,
                1.00958480149, 1.00938402751, 1.00923173234, 1.00896205922, 1.00877952325,
                1.00848454553, 1.00809094748
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.455812263, 23.4058211563, 31.8076589224, 41.2694704832,
                51.4874752049, 61.8853021467, 72.1485970296, 82.3017709389, 92.821899346,
                103.57630449, 114.366868474, 123.585206897, 133.756106455, 144.938211106,
                158.174975175, 176.194963818, 195.029478711, 220.750032768, 262.570643701,
                308.538413528, 358.248823119, 405.945769577, 445.403605016, 483.547003284,
                516.029761905, 547.35, 575.6625, 609.5, 645.7625,
                684.054166667, 739.270833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.131),
            etaMin = cms.double(0.783),
            l1tCalibrationFactors = cms.vdouble(
                1.26940863552, 1.26940863552, 1.26940863552, 1.21850042272, 1.16014066757,
                1.11360382831, 1.08451810312, 1.06753212736, 1.05501857105, 1.04712872618,
                1.03953145463, 1.03129558228, 1.02392940863, 1.01647040511, 1.00765667693,
                0.997452910609, 0.981686885508, 0.989286565044, 0.992427119505, 0.996927682694,
                1.00148185029, 1.00626281233, 1.01118610536, 1.01492397525, 1.0197730491,
                1.02294548929, 1.02309909545, 1.03179752273, 1.04335891364, 1.04679419517,
                1.04697871887, 1.05665639769
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.658158537, 23.8634314296, 32.6191125159, 42.4492040271,
                52.9120745879, 63.2335833679, 73.7409226942, 84.0418964903, 94.148332101,
                104.682994045, 115.453031153, 126.065870612, 136.150267568, 147.219321527,
                160.155420808, 177.820618512, 198.152518248, 224.425247256, 264.972493816,
                313.021014808, 362.557459677, 414.052651985, 460.012722795, 505.578952902,
                548.144755747, 565.794270833, 612.7671875, 720.275, 799.854166667,
                819.0625, 871.395833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.479),
            etaMin = cms.double(1.131),
            l1tCalibrationFactors = cms.vdouble(
                1.35067406191, 1.35067406191, 1.35067406191, 1.29728973727, 1.23323857604,
                1.1805316629, 1.14192838643, 1.12335733217, 1.1065907126, 1.1005436618,
                1.09369739262, 1.08689105877, 1.08047792193, 1.07301990489, 1.06799861036,
                1.0578434328, 1.04620517219, 1.03279280198, 1.03276766643, 1.05490363283,
                1.0613631336, 1.07151789312, 1.0923432672, 1.10236162162, 1.12458041647,
                1.13080591424, 1.15738278091, 1.18032588359, 1.20641120054, 1.24407887972,
                1.35400575741
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 16.5873975086, 23.8386796597, 32.2204904018, 41.0711979739,
                50.5775158961, 60.7008778657, 70.3592246275, 80.5033152458, 90.7596180755,
                100.458044915, 110.727608677, 120.671367886, 131.105326809, 140.492334228,
                151.908160762, 168.301305891, 187.144529404, 214.024926059, 257.981265415,
                293.073033708, 313.461711712, 351.47989353, 389.330681818, 428.891447368,
                463.797697368, 504.052083333, 564.821969697, 624.988636364, 703.225,
                884.35, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(1.83),
            etaMin = cms.double(1.479),
            l1tCalibrationFactors = cms.vdouble(
                1.63343989323, 1.63343989323, 1.63343989323, 1.63343989323, 1.61237327031,
                1.58129290649, 1.54880181313, 1.51437276367, 1.47566044577, 1.4333612461,
                1.43007616674, 1.41838888661, 1.41120688977, 1.40292719871, 1.39289499293,
                1.38154733635, 1.36518171857, 1.34179569075, 1.31131037345, 1.21512470624,
                1.19652546359, 1.18052243169, 1.14219697689, 1.12090132667, 1.10494445955,
                1.08116744865, 1.04972485653, 1.02388122645, 1.02106332779, 0.93821710715,
                0.932912827317, 0.900954541324
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.0304333699, 19.2702852281, 25.0387598316, 31.5205165869,
                38.5596312994, 45.8035002303, 53.2357524128, 61.14689424, 69.6758091231,
                77.1332356297, 85.7578326385, 94.7364478681, 102.093621468, 110.807017112,
                120.98025046, 134.167127072, 153.082251962, 178.715988762, 222.463142692,
                269.236689617, 301.854005866, 353.065940767, 409.266883117, 444.382411067,
                481.836956522, 533.888888889, 587.888888889, 614.90625, 695.65625,
                778.75, 813.875, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.172),
            etaMin = cms.double(1.83),
            l1tCalibrationFactors = cms.vdouble(
                1.4878363144, 1.4878363144, 1.4878363144, 1.48518474866, 1.44553707599,
                1.40800746363, 1.37269392814, 1.34268728519, 1.31155107185, 1.29724964634,
                1.26824717982, 1.25895653021, 1.25080118853, 1.24412237598, 1.23242162986,
                1.21983464552, 1.19947769179, 1.17915682723, 1.19591426516, 1.16520900199,
                1.11521954951, 1.08960480689, 1.06320579474, 0.984904677633, 0.936138290441,
                0.933930169885, 0.906741381816, 0.83587888946
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 14.6323212201, 20.2961463384, 26.9638979746, 34.2907286866,
                42.0772600421, 50.2694398412, 58.5750993499, 67.719467579, 75.5350197454,
                83.5378418246, 93.3456200252, 101.928069729, 109.225642018, 118.267354545,
                130.215556381, 146.422127101, 166.433333333, 193.380670156, 231.798066137,
                288.213675743, 341.070380435, 377.434442935, 450.6328125, 539.46875,
                575.10625, 595.658333333, 664.208333333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(2.5),
            etaMin = cms.double(2.172),
            l1tCalibrationFactors = cms.vdouble(
                1.34807839515, 1.34807839515, 1.34807839515, 1.33809647408, 1.28296668109,
                1.24225927144, 1.21974923257, 1.21649951103, 1.23064762664, 1.1629973435,
                1.15852840915, 1.15372227709, 1.15041260925, 1.14530829511, 1.13990768956,
                1.13512676324, 1.125588949, 1.11458405118, 1.09607958404, 1.05737289774,
                1.01895994641, 0.992663655394, 0.955621083551, 0.93513823446, 0.901760000269,
                0.843868420876, 0.795304246419, 0.770482557252
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 15.2387099279, 20.6150961319, 27.4619155051, 35.7501165961,
                44.8270237134, 54.3715537124, 63.4511614119, 72.3586695675, 81.6352356283,
                91.1311643255, 101.316594704, 110.228974539, 119.468803554, 131.004799458,
                142.185666464, 157.90981642, 180.468831547, 207.538452813, 253.905743927,
                316.433023873, 368.898168103, 420.252232143, 466.892857143, 510.5625,
                584.5625, 670.875, 730.375, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(3),
            etaMin = cms.double(2.5),
            l1tCalibrationFactors = cms.vdouble(
                0.482004686949, 0.482004686949, 0.564202174589, 0.736584151614, 0.911565084921,
                0.987344739275, 0.993152983902, 1.03806284348, 1.03244226103, 1.0260158536,
                1.02041940616, 1.0134090195, 1.0076503873, 1.00104447561, 0.995969648589,
                0.981247152992, 0.971158824688, 0.966585664599, 0.963405635485, 0.958075648063,
                0.952490699151, 0.940177797744, 0.938930857749
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 25.9618281426, 30.6891444166, 36.5086109677, 45.3574132365,
                55.0008759284, 64.7493209607, 75.2843507883, 85.0009967022, 94.7383169517,
                104.456129397, 114.645959573, 124.966880164, 134.960872423, 144.402159807,
                160.403905664, 180.457955711, 202.51439951, 229.539912281, 264.65878483,
                309.702205882, 383.5625, 439.520833333, float('inf')
            )
        ),
        cms.PSet(
            etaMax = cms.double(5.191),
            etaMin = cms.double(3),
            l1tCalibrationFactors = cms.vdouble(
                1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0
            ),
            l1tPtBins = cms.vdouble(
                -float('inf'), 50.6626115353, 87.3285137419, 126.832659901, 178.631354515,
                238.634615385, 218.625, float('inf')
            )
        )
    ),
    inputCollectionTag = cms.InputTag("l1tPhase1JetProducer","UncalibratedPhase1L1TJetFromPfCandidates"),
    outputCollectionName = cms.string('Phase1L1TJetFromPfCandidates')
)


process.l1tPhase1JetProducer = cms.EDProducer("Phase1L1TJetProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    etaBinning = cms.vdouble(
        -5.0, -4.917, -4.833, -4.75, -4.667,
        -4.583, -4.5, -4.417, -4.333, -4.25,
        -4.167, -4.083, -4.0, -3.917, -3.833,
        -3.75, -3.667, -3.583, -3.5, -3.417,
        -3.333, -3.25, -3.167, -3.083, -3.0,
        -2.917, -2.833, -2.75, -2.667, -2.583,
        -2.5, -2.417, -2.333, -2.25, -2.167,
        -2.083, -2.0, -1.917, -1.833, -1.75,
        -1.667, -1.583, -1.5, -1.417, -1.333,
        -1.25, -1.167, -1.083, -1.0, -0.917,
        -0.833, -0.75, -0.667, -0.583, -0.5,
        -0.417, -0.333, -0.25, -0.167, -0.083,
        0.0, 0.083, 0.167, 0.25, 0.333,
        0.417, 0.5, 0.583, 0.667, 0.75,
        0.833, 0.917, 1.0, 1.083, 1.167,
        1.25, 1.333, 1.417, 1.5, 1.583,
        1.667, 1.75, 1.833, 1.917, 2.0,
        2.083, 2.167, 2.25, 2.333, 2.417,
        2.5, 2.583, 2.667, 2.75, 2.833,
        2.917, 3.0, 3.083, 3.167, 3.25,
        3.333, 3.417, 3.5, 3.583, 3.667,
        3.75, 3.833, 3.917, 4.0, 4.083,
        4.167, 4.25, 4.333, 4.417, 4.5,
        4.583, 4.667, 4.75, 4.833, 4.917,
        5.0
    ),
    etaRegions = cms.vdouble(
        -5.0, -4.5, -4.0, -3.5, -3.0,
        -2.5, -1.5, -0.75, 0, 0.75,
        1.5, 2.5, 3.0, 3.5, 4.0,
        4.5, 5.0
    ),
    etalsb = cms.double(0.0043633231),
    inputCollectionTag = cms.InputTag("l1tLayer1","Puppi"),
    jetIEtaSize = cms.uint32(7),
    jetIPhiSize = cms.uint32(7),
    maxInputsPerRegion = cms.uint32(18),
    metAbsEtaCut = cms.double(3),
    metHFAbsEtaCut = cms.double(5),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('UncalibratedPhase1L1TJetFromPfCandidates'),
    phiLow = cms.double(-3.141592653589793),
    phiRegions = cms.vdouble(
        -3.5, -2.8, -2.1, -1.4, -0.7,
        0, 0.7, 1.4, 2.1, 2.8,
        3.5
    ),
    phiUp = cms.double(3.141592653589793),
    philsb = cms.double(0.0043633231),
    ptlsb = cms.double(0.25),
    puSubtraction = cms.bool(False),
    seedPtThreshold = cms.double(5),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    ),
    trimmedGrid = cms.bool(False),
    vetoZeroPt = cms.bool(True)
)


process.l1tPhase1JetProducer9x9 = cms.EDProducer("Phase1L1TJetProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    etaBinning = cms.vdouble(
        -5.0, -4.917, -4.833, -4.75, -4.667,
        -4.583, -4.5, -4.417, -4.333, -4.25,
        -4.167, -4.083, -4.0, -3.917, -3.833,
        -3.75, -3.667, -3.583, -3.5, -3.417,
        -3.333, -3.25, -3.167, -3.083, -3.0,
        -2.917, -2.833, -2.75, -2.667, -2.583,
        -2.5, -2.417, -2.333, -2.25, -2.167,
        -2.083, -2.0, -1.917, -1.833, -1.75,
        -1.667, -1.583, -1.5, -1.417, -1.333,
        -1.25, -1.167, -1.083, -1.0, -0.917,
        -0.833, -0.75, -0.667, -0.583, -0.5,
        -0.417, -0.333, -0.25, -0.167, -0.083,
        0.0, 0.083, 0.167, 0.25, 0.333,
        0.417, 0.5, 0.583, 0.667, 0.75,
        0.833, 0.917, 1.0, 1.083, 1.167,
        1.25, 1.333, 1.417, 1.5, 1.583,
        1.667, 1.75, 1.833, 1.917, 2.0,
        2.083, 2.167, 2.25, 2.333, 2.417,
        2.5, 2.583, 2.667, 2.75, 2.833,
        2.917, 3.0, 3.083, 3.167, 3.25,
        3.333, 3.417, 3.5, 3.583, 3.667,
        3.75, 3.833, 3.917, 4.0, 4.083,
        4.167, 4.25, 4.333, 4.417, 4.5,
        4.583, 4.667, 4.75, 4.833, 4.917,
        5.0
    ),
    etaRegions = cms.vdouble(
        -5.0, -4.5, -4.0, -3.5, -3.0,
        -2.5, -1.5, -0.75, 0, 0.75,
        1.5, 2.5, 3.0, 3.5, 4.0,
        4.5, 5.0
    ),
    etalsb = cms.double(0.0043633231),
    inputCollectionTag = cms.InputTag("l1tLayer1","Puppi"),
    jetIEtaSize = cms.uint32(9),
    jetIPhiSize = cms.uint32(9),
    maxInputsPerRegion = cms.uint32(18),
    metAbsEtaCut = cms.double(3),
    metHFAbsEtaCut = cms.double(5),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('UncalibratedPhase1L1TJetFromPfCandidates'),
    phiLow = cms.double(-3.141592653589793),
    phiRegions = cms.vdouble(
        -3.5, -2.8, -2.1, -1.4, -0.7,
        0, 0.7, 1.4, 2.1, 2.8,
        3.5
    ),
    phiUp = cms.double(3.141592653589793),
    philsb = cms.double(0.0043633231),
    ptlsb = cms.double(0.25),
    puSubtraction = cms.bool(False),
    seedPtThreshold = cms.double(5),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    ),
    trimmedGrid = cms.bool(False),
    vetoZeroPt = cms.bool(True)
)


process.l1tPhase1JetProducer9x9trimmed = cms.EDProducer("Phase1L1TJetProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    etaBinning = cms.vdouble(
        -5.0, -4.917, -4.833, -4.75, -4.667,
        -4.583, -4.5, -4.417, -4.333, -4.25,
        -4.167, -4.083, -4.0, -3.917, -3.833,
        -3.75, -3.667, -3.583, -3.5, -3.417,
        -3.333, -3.25, -3.167, -3.083, -3.0,
        -2.917, -2.833, -2.75, -2.667, -2.583,
        -2.5, -2.417, -2.333, -2.25, -2.167,
        -2.083, -2.0, -1.917, -1.833, -1.75,
        -1.667, -1.583, -1.5, -1.417, -1.333,
        -1.25, -1.167, -1.083, -1.0, -0.917,
        -0.833, -0.75, -0.667, -0.583, -0.5,
        -0.417, -0.333, -0.25, -0.167, -0.083,
        0.0, 0.083, 0.167, 0.25, 0.333,
        0.417, 0.5, 0.583, 0.667, 0.75,
        0.833, 0.917, 1.0, 1.083, 1.167,
        1.25, 1.333, 1.417, 1.5, 1.583,
        1.667, 1.75, 1.833, 1.917, 2.0,
        2.083, 2.167, 2.25, 2.333, 2.417,
        2.5, 2.583, 2.667, 2.75, 2.833,
        2.917, 3.0, 3.083, 3.167, 3.25,
        3.333, 3.417, 3.5, 3.583, 3.667,
        3.75, 3.833, 3.917, 4.0, 4.083,
        4.167, 4.25, 4.333, 4.417, 4.5,
        4.583, 4.667, 4.75, 4.833, 4.917,
        5.0
    ),
    etaRegions = cms.vdouble(
        -5.0, -4.5, -4.0, -3.5, -3.0,
        -2.5, -1.5, -0.75, 0, 0.75,
        1.5, 2.5, 3.0, 3.5, 4.0,
        4.5, 5.0
    ),
    etalsb = cms.double(0.0043633231),
    inputCollectionTag = cms.InputTag("l1tLayer1","Puppi"),
    jetIEtaSize = cms.uint32(9),
    jetIPhiSize = cms.uint32(9),
    maxInputsPerRegion = cms.uint32(18),
    metAbsEtaCut = cms.double(3),
    metHFAbsEtaCut = cms.double(5),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('UncalibratedPhase1L1TJetFromPfCandidates'),
    phiLow = cms.double(-3.141592653589793),
    phiRegions = cms.vdouble(
        -3.5, -2.8, -2.1, -1.4, -0.7,
        0, 0.7, 1.4, 2.1, 2.8,
        3.5
    ),
    phiUp = cms.double(3.141592653589793),
    philsb = cms.double(0.0043633231),
    ptlsb = cms.double(0.25),
    puSubtraction = cms.bool(False),
    seedPtThreshold = cms.double(5),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    ),
    trimmedGrid = cms.bool(True),
    vetoZeroPt = cms.bool(True)
)


process.l1tPhase1JetSumsProducer = cms.EDProducer("Phase1L1TJetSumsProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    htAbsEtaCut = cms.double(2.4),
    htPtThreshold = cms.double(30),
    inputJetCollectionTag = cms.InputTag("l1tPhase1JetCalibrator","Phase1L1TJetFromPfCandidates"),
    mhtAbsEtaCut = cms.double(2.4),
    mhtPtThreshold = cms.double(30),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('Sums'),
    phiLow = cms.double(-3.141592653589793),
    phiUp = cms.double(3.141592653589793),
    ptlsb = cms.double(0.25),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    )
)


process.l1tPhase1JetSumsProducer9x9 = cms.EDProducer("Phase1L1TJetSumsProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    htAbsEtaCut = cms.double(2.4),
    htPtThreshold = cms.double(30),
    inputJetCollectionTag = cms.InputTag("l1tPhase1JetCalibrator9x9","Phase1L1TJetFromPfCandidates"),
    mhtAbsEtaCut = cms.double(2.4),
    mhtPtThreshold = cms.double(30),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('Sums'),
    phiLow = cms.double(-3.141592653589793),
    phiUp = cms.double(3.141592653589793),
    ptlsb = cms.double(0.25),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    )
)


process.l1tPhase1JetSumsProducer9x9trimmed = cms.EDProducer("Phase1L1TJetSumsProducer",
    cosPhi = cms.vdouble(
        -0.999375513427, -0.992464324695, -0.977959427777, -0.955971804952, -0.926669691581,
        -0.890277288868, -0.847073048421, -0.797387541713, -0.741600930761, -0.680140059366,
        -0.613475187173, -0.542116391547, -0.466609664777, -0.387532736497, -0.305490653258,
        -0.2211111491, -0.135039842524, -0.0479352966351, 0.039536019772, 0.126704831606,
        0.212904178348, 0.297474517214, 0.379768769555, 0.459157271892, 0.535032593708,
        0.606814185113, 0.673952818851, 0.735934792636, 0.792285859677, 0.842574857312,
        0.886417005995, 0.923476853383, 0.953470841004, 0.976169473869, 0.991399076421,
        0.999043121392, 0.999043121392, 0.991399076421, 0.976169473869, 0.953470841004,
        0.923476853383, 0.886417005995, 0.842574857312, 0.792285859677, 0.735934792636,
        0.673952818851, 0.606814185113, 0.535032593708, 0.459157271892, 0.379768769555,
        0.297474517214, 0.212904178348, 0.126704831606, 0.039536019772, -0.0479352966351,
        -0.135039842524, -0.2211111491, -0.305490653258, -0.387532736497, -0.466609664777,
        -0.542116391547, -0.613475187173, -0.680140059366, -0.741600930761, -0.797387541713,
        -0.847073048421, -0.890277288868, -0.926669691581, -0.955971804952, -0.977959427777,
        -0.992464324695, -0.999375513427
    ),
    htAbsEtaCut = cms.double(2.4),
    htPtThreshold = cms.double(30),
    inputJetCollectionTag = cms.InputTag("l1tPhase1JetCalibrator9x9trimmed","Phase1L1TJetFromPfCandidates"),
    mhtAbsEtaCut = cms.double(2.4),
    mhtPtThreshold = cms.double(30),
    nBinsPhi = cms.uint32(72),
    outputCollectionName = cms.string('Sums'),
    phiLow = cms.double(-3.141592653589793),
    phiUp = cms.double(3.141592653589793),
    ptlsb = cms.double(0.25),
    sinPhi = cms.vdouble(
        -0.0353352962792, -0.122533930843, -0.208795013406, -0.293458528818, -0.375876685504,
        -0.455418871948, -0.531476481737, -0.603467570232, -0.670841307236, -0.733082191603,
        -0.789713995522, -0.840303408309, -0.884463351833, -0.921855942186, -0.952195074957,
        -0.975248614326, -0.990840169216, -0.998850442928, -0.999218145922, -0.99194046477,
        -0.977073083675, -0.954729758418, -0.925081445966, -0.888354996422, -0.844831417308,
        -0.794843723474, -0.738774389082, -0.677052421152, -0.610150077076, -0.538579251202,
        -0.462887558141, -0.383654142772, -0.301485248985, -0.217009581095, -0.130873493387,
        -0.0437360446299, 0.0437360446299, 0.130873493387, 0.217009581095, 0.301485248985,
        0.383654142772, 0.462887558141, 0.538579251202, 0.610150077076, 0.677052421152,
        0.738774389082, 0.794843723474, 0.844831417308, 0.888354996422, 0.925081445966,
        0.954729758418, 0.977073083675, 0.99194046477, 0.999218145922, 0.998850442928,
        0.990840169216, 0.975248614326, 0.952195074957, 0.921855942186, 0.884463351833,
        0.840303408309, 0.789713995522, 0.733082191603, 0.670841307236, 0.603467570232,
        0.531476481737, 0.455418871948, 0.375876685504, 0.293458528818, 0.208795013406,
        0.122533930843, 0.0353352962792
    )
)


process.l1tPhase2CaloJetEmulator = cms.EDProducer("Phase2L1CaloJetEmulator",
    absEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    absEtaBinsHF = cms.vdouble(3.0, 3.6, 6.0),
    absEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    gctFullTowers = cms.InputTag("l1tPhase2L1CaloEGammaEmulator","GCTFullTowers"),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    hgcalTowers = cms.InputTag("l1tHGCalEnergySplitTowerProducer","HGCalTowerProcessor"),
    jetCalibrationsBarrel = cms.vdouble(
        2.256, 2.007, 1.932, 1.869, 1.816,
        1.77, 1.731, 1.697, 1.668, 1.643,
        1.622, 1.603, 1.587, 1.573, 1.561,
        1.55, 1.54, 1.527, 1.513, 1.5,
        1.49, 1.481, 1.472, 1.464, 1.457,
        1.449, 1.442, 1.431, 1.414, 1.397,
        1.381, 1.365, 1.332, 1.276, 1.847,
        1.733, 1.695, 1.661, 1.63, 1.601,
        1.576, 1.552, 1.531, 1.512, 1.495,
        1.479, 1.464, 1.451, 1.439, 1.428,
        1.418, 1.404, 1.388, 1.375, 1.363,
        1.353, 1.344, 1.336, 1.329, 1.323,
        1.317, 1.308, 1.296, 1.285, 1.275,
        1.265, 1.247, 1.215, 1.934, 1.775,
        1.726, 1.683, 1.646, 1.613, 1.585,
        1.56, 1.538, 1.519, 1.502, 1.488,
        1.474, 1.462, 1.452, 1.442, 1.434,
        1.422, 1.409, 1.398, 1.388, 1.379,
        1.371, 1.363, 1.356, 1.349, 1.342,
        1.331, 1.316, 1.3, 1.285, 1.27,
        1.24, 1.188, 2.731, 2.353, 2.244,
        2.153, 2.076, 2.012, 1.958, 1.912,
        1.873, 1.84, 1.811, 1.787, 1.766,
        1.747, 1.731, 1.716, 1.703, 1.686,
        1.666, 1.649, 1.634, 1.62, 1.607,
        1.594, 1.582, 1.57, 1.558, 1.537,
        1.509, 1.48, 1.451, 1.423, 1.365,
        1.265
    ),
    jetCalibrationsHF = cms.vdouble(
        4.353, 3.282, 2.979, 2.73, 2.525,
        2.355, 2.215, 2.098, 2.001, 1.92,
        1.853, 1.796, 1.748, 1.707, 1.672,
        1.642, 1.616, 1.582, 1.546, 1.517,
        1.492, 1.469, 1.449, 1.43, 1.412,
        1.395, 1.378, 1.348, 1.307, 1.267,
        1.226, 1.186, 1.104, 0.963, 2.155,
        1.822, 1.722, 1.637, 1.564, 1.502,
        1.449, 1.403, 1.364, 1.331, 1.302,
        1.277, 1.256, 1.237, 1.221, 1.206,
        1.194, 1.178, 1.16, 1.146, 1.134,
        1.124, 1.116, 1.108, 1.101, 1.094,
        1.087, 1.077, 1.062, 1.048, 1.034,
        1.02, 0.992, 0.943
    ),
    jetCalibrationsHGCal = cms.vdouble(
        2.413, 1.721, 1.617, 1.556, 1.519,
        1.497, 1.484, 1.476, 1.471, 1.467,
        1.465, 1.463, 1.462, 1.46, 1.459,
        1.458, 1.458, 1.456, 1.454, 1.453,
        1.451, 1.449, 1.448, 1.446, 1.444,
        1.442, 1.441, 1.438, 1.433, 1.429,
        1.425, 1.42, 1.412, 1.397, 1.555,
        1.307, 1.24, 1.187, 1.145, 1.112,
        1.086, 1.066, 1.05, 1.038, 1.03,
        1.023, 1.018, 1.015, 1.014, 1.013,
        1.013, 1.014, 1.018, 1.023, 1.028,
        1.034, 1.041, 1.047, 1.054, 1.061,
        1.068, 1.08, 1.098, 1.115, 1.133,
        1.15, 1.186, 1.247, 3.097, 1.989,
        1.721, 1.518, 1.365, 1.25, 1.163,
        1.099, 1.051, 1.016, 0.991, 0.973,
        0.96, 0.952, 0.947, 0.944, 0.944,
        0.945, 0.951, 0.958, 0.967, 0.977,
        0.987, 0.997, 1.008, 1.018, 1.029,
        1.048, 1.074, 1.101, 1.128, 1.154,
        1.208, 1.301
    ),
    jetPtBins = cms.vdouble(
        0.0, 20.0, 25.0, 30.0, 35.0,
        40.0, 45.0, 50.0, 55.0, 60.0,
        65.0, 70.0, 75.0, 80.0, 85.0,
        90.0, 95.0, 100.0, 110.0, 120.0,
        130.0, 140.0, 150.0, 160.0, 170.0,
        180.0, 190.0, 200.0, 225.0, 250.0,
        275.0, 300.0, 325.0, 400.0, 500.0
    ),
    nHits_to_nvtx_params = cms.VPSet(
        cms.PSet(
            fit = cms.string('hgcalEM'),
            nHits_params = cms.vdouble(157.522, 0.09)
        ),
        cms.PSet(
            fit = cms.string('hgcalHad'),
            nHits_params = cms.vdouble(159.295, 0.178)
        ),
        cms.PSet(
            fit = cms.string('hf'),
            nHits_params = cms.vdouble(165.706, 0.153)
        )
    ),
    nvtx_to_PU_sub_params = cms.VPSet(
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p4to1p8'),
            nvtx_params = cms.vdouble(-0.011772, 0.004142)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p8to2p1'),
            nvtx_params = cms.vdouble(-0.015488, 0.00541)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p1to2p4'),
            nvtx_params = cms.vdouble(-0.02115, 0.006078)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p4to2p7'),
            nvtx_params = cms.vdouble(-0.015705, 0.005339)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p7to3p1'),
            nvtx_params = cms.vdouble(-0.018492, 0.00562)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p4to1p8'),
            nvtx_params = cms.vdouble(0.005675, 0.000615)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p8to2p1'),
            nvtx_params = cms.vdouble(0.00456, 0.001099)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p1to2p4'),
            nvtx_params = cms.vdouble(3.6e-05, 0.001608)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p4to2p7'),
            nvtx_params = cms.vdouble(0.000869, 0.001754)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p7to3p1'),
            nvtx_params = cms.vdouble(-0.006574, 0.003134)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er29to33'),
            nvtx_params = cms.vdouble(-0.203291, 0.044096)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er34to37'),
            nvtx_params = cms.vdouble(-0.210922, 0.045628)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er38to41'),
            nvtx_params = cms.vdouble(-0.229562, 0.05056)
        )
    ),
    tauAbsEtaBinsBarrel = cms.vdouble(0.0, 0.3, 0.6, 1.0, 1.5),
    tauAbsEtaBinsHGCal = cms.vdouble(1.5, 1.9, 2.4, 3.0),
    tauCalibrationsBarrel = cms.vdouble(
        1.936, 1.643, 1.508, 1.408, 1.332,
        1.276, 1.235, 1.204, 1.18, 1.163,
        1.15, 1.137, 1.126, 1.118, 1.113,
        1.112, 1.905, 1.637, 1.51, 1.413,
        1.338, 1.281, 1.237, 1.204, 1.178,
        1.159, 1.144, 1.128, 1.114, 1.103,
        1.096, 1.095, 1.941, 1.663, 1.531,
        1.43, 1.353, 1.294, 1.249, 1.215,
        1.188, 1.168, 1.153, 1.136, 1.122,
        1.111, 1.104, 1.103, 2.692, 2.109,
        1.849, 1.659, 1.52, 1.419, 1.346,
        1.292, 1.253, 1.224, 1.203, 1.182,
        1.166, 1.154, 1.148, 1.147
    ),
    tauCalibrationsHGCal = cms.vdouble(
        3.047, 2.104, 1.762, 1.55, 1.418,
        1.336, 1.285, 1.254, 1.234, 1.222,
        1.215, 1.208, 1.205, 1.203, 1.202,
        1.202, 3.401, 2.104, 1.718, 1.513,
        1.403, 1.345, 1.313, 1.297, 1.288,
        1.283, 1.281, 1.279, 1.278, 1.278,
        1.278, 1.278, 4.381, 2.648, 2.012,
        1.613, 1.364, 1.208, 1.11, 1.049,
        1.01, 0.986, 0.971, 0.959, 0.951,
        0.947, 0.946, 0.946
    ),
    tauPtBins = cms.vdouble(
        0.0, 10.0, 15.0, 20.0, 25.0,
        30.0, 35.0, 40.0, 45.0, 50.0,
        55.0, 60.0, 70.0, 80.0, 100.0,
        150.0, 200.0
    )
)


process.l1tPhase2L1CaloEGammaEmulator = cms.EDProducer("Phase2L1CaloEGammaEmulator",
    calib = cms.PSet(
        etaBins = cms.vdouble(
            0.087, 0.174, 0.261, 0.348, 0.435,
            0.522, 0.609, 0.696, 0.783, 0.87,
            0.957, 1.044, 1.131, 1.218, 1.305,
            1.392, 1.479
        ),
        ptBins = cms.vdouble(
            12, 20, 30, 40, 55,
            90, 1000000
        ),
        scale = cms.vdouble(
            1.298, 1.287, 1.309, 1.298, 1.309,
            1.309, 1.309, 1.298, 1.309, 1.298,
            1.309, 1.309, 1.309, 1.32, 1.309,
            1.32, 1.309, 1.1742, 1.1639, 1.1639,
            1.1639, 1.1639, 1.1639, 1.1639, 1.1742,
            1.1742, 1.1639, 1.1639, 1.1742, 1.1639,
            1.1639, 1.1742, 1.1742, 1.1536000000000002, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.1, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.07, 1.07,
            1.07, 1.07, 1.07, 1.07, 1.07,
            1.08, 1.07, 1.07, 1.08, 1.08,
            1.07, 1.08, 1.08, 1.08, 1.08,
            1.06, 1.06, 1.06, 1.06, 1.05,
            1.05, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.04, 1.04, 1.04,
            1.04, 1.05, 1.04, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05
        )
    ),
    ecalTPEB = cms.InputTag("simEcalEBTriggerPrimitiveDigis"),
    hcalTP = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    mightGet = cms.optional.untracked.vstring
)


process.l1tSAMuonsGmt = cms.EDProducer("Phase2L1TGMTSAMuonGhostCleaner",
    barrelDisp = cms.InputTag("l1tKMTFMuonsGmt","displaced"),
    barrelPrompt = cms.InputTag("l1tKMTFMuonsGmt","prompt"),
    forwardDisp = cms.InputTag("l1tFwdMuonsGmt","displaced"),
    forwardPrompt = cms.InputTag("l1tFwdMuonsGmt","prompt")
)


process.l1tSC4PFL1PF = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(False),
    L1PFObjects = cms.InputTag("l1tLayer1","PF"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1Puppi = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(False),
    L1PFObjects = cms.InputTag("l1tLayer1","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1PuppiCorrectedEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string('L1PuppiSC4EmuJets'),
    correctorFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/jecs/jecs_20220308.root'),
    debug = cms.bool(False),
    doCorrections = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1PuppiCorrectedEmulatorMHT = cms.EDProducer("L1MhtPfProducer",
    jets = cms.InputTag("l1tSC4PFL1PuppiCorrectedEmulator"),
    maxJetEta = cms.double(2.4),
    minJetPt = cms.double(30.0)
)


process.l1tSC4PFL1PuppiEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1PuppiExtended = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(False),
    L1PFObjects = cms.InputTag("l1tLayer1Extended","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1PuppiExtendedCorrectedEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2DeregionizerExtended","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string('L1PuppiSC4EmuJets'),
    correctorFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/jecs/jecs_20220308.root'),
    debug = cms.bool(False),
    doCorrections = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC4PFL1PuppiExtendedEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2DeregionizerExtended","Puppi"),
    coneSize = cms.double(0.4),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC8PFL1PuppiCorrectedEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    coneSize = cms.double(0.8),
    correctorDir = cms.string('L1PuppiSC4EmuJets'),
    correctorFile = cms.string('L1Trigger/Phase2L1ParticleFlow/data/jecs/jecs_20220308.root'),
    debug = cms.bool(False),
    doCorrections = cms.bool(True),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tSC8PFL1PuppiEmulator = cms.EDProducer("L1SeedConePFJetProducer",
    HW = cms.bool(True),
    L1PFObjects = cms.InputTag("l1tLayer2Deregionizer","Puppi"),
    coneSize = cms.double(0.8),
    correctorDir = cms.string(''),
    correctorFile = cms.string(''),
    debug = cms.bool(False),
    doCorrections = cms.bool(False),
    mightGet = cms.optional.untracked.vstring,
    nJets = cms.uint32(16)
)


process.l1tStubsGmt = cms.EDProducer("Phase2L1TGMTStubProducer",
    Barrel = cms.PSet(
        coarseEta_1 = cms.vint32(0, 23, 41),
        coarseEta_2 = cms.vint32(0, 20, 36),
        coarseEta_3 = cms.vint32(0, 17, 31),
        coarseEta_4 = cms.vint32(0, 14, 27),
        etaLSB = cms.double(0.024586688),
        eta_1 = cms.vint32(
            -46, -45, -43, -41, -39,
            -37, -35, -30, -28, -26,
            -23, -20, -18, -15, -9,
            -6, -3, -1, 1, 3,
            6, 9, 15, 18, 20,
            23, 26, 28, 30, 35,
            37, 39, 41, 43, 45,
            1503
        ),
        eta_2 = cms.vint32(
            -41, -39, -38, -36, -34,
            -32, -30, -26, -24, -22,
            -20, -18, -15, -13, -8,
            -5, -3, -1, 1, 3,
            5, 8, 13, 15, 18,
            20, 22, 24, 26, 30,
            32, 34, 36, 38, 39,
            1334
        ),
        eta_3 = cms.vint32(
            -35, -34, -32, -31, -29,
            -27, -26, -22, -20, -19,
            -17, -15, -13, -11, -6,
            -4, -2, -1, 1, 2,
            4, 6, 11, 13, 15,
            17, 19, 20, 22, 26,
            27, 29, 31, 32, 34,
            1148
        ),
        maxBX = cms.int32(0),
        minBX = cms.int32(0),
        minPhiQuality = cms.int32(0),
        minThetaQuality = cms.int32(0),
        phiBDivider = cms.int32(1),
        phiLSB = cms.double(2.396845e-05),
        phiOffset = cms.vint32(0, 0, 0, 0),
        verbose = cms.int32(0)
    ),
    Endcap = cms.PSet(
        coord1LSB = cms.double(0.00613281248),
        coord2LSB = cms.double(0.00613281248),
        eta1LSB = cms.double(0.024586688),
        eta2LSB = cms.double(0.024586688),
        etaMatch = cms.double(0.1),
        maxBX = cms.int32(0),
        minBX = cms.int32(0),
        phiMatch = cms.double(0.05),
        verbose = cms.uint32(0)
    ),
    srcCSC = cms.InputTag("simCscTriggerPrimitiveDigis"),
    srcDT = cms.InputTag("dtTriggerPhase2PrimitiveDigis"),
    srcDTTheta = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcRPC = cms.InputTag("simMuonRPCDigis"),
    verbose = cms.int32(0)
)


process.l1tTOoLLiPProducer = cms.EDProducer("TOoLLiPProducer",
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    TOoLLiPVersion = cms.string('TOoLLiP_v1'),
    jets = cms.InputTag("l1tSC4PFL1PuppiExtended"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(6),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(10),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tTOoLLiPProducerCorrectedEmulator = cms.EDProducer("TOoLLiPProducer",
    NNInput = cms.string('input:0'),
    NNOutput = cms.string('sequential/dense_2/Sigmoid'),
    TOoLLiPVersion = cms.string('TOoLLiP_v1'),
    jets = cms.InputTag("l1tSC4PFL1PuppiExtendedCorrectedEmulator"),
    maxEta = cms.double(2.4),
    maxJets = cms.int32(6),
    mightGet = cms.optional.untracked.vstring,
    minPt = cms.double(10),
    nParticles = cms.int32(10),
    useRawPt = cms.bool(True),
    vtx = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation")
)


process.l1tTkCaloHTMiss = cms.EDProducer("L1TkHTMissProducer",
    L1TkJetInputTag = cms.InputTag("l1tTkCaloJets","L1TkCaloJets"),
    L1VertexInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    deltaZ = cms.double(1.0),
    displaced = cms.bool(False),
    doVtxConstrain = cms.bool(False),
    jet_maxEta = cms.double(2.2),
    jet_minJetEtHighPt = cms.double(0.0),
    jet_minJetEtLowPt = cms.double(0.0),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(15.0),
    primaryVtxConstrain = cms.bool(False),
    useCaloJets = cms.bool(True)
)


process.l1tTkCaloHTMissVtx = cms.EDProducer("L1TkHTMissProducer",
    L1TkJetInputTag = cms.InputTag("l1tTkCaloJets","L1TkCaloJets"),
    L1VertexInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    deltaZ = cms.double(1.0),
    displaced = cms.bool(False),
    doVtxConstrain = cms.bool(True),
    jet_maxEta = cms.double(2.2),
    jet_minJetEtHighPt = cms.double(0.0),
    jet_minJetEtLowPt = cms.double(0.0),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(15.0),
    primaryVtxConstrain = cms.bool(False),
    useCaloJets = cms.bool(True)
)


process.l1tTkMuonsGmt = cms.EDProducer("Phase2L1TGMTTkMuonProducer",
    isolation = cms.PSet(
        AbsIsoThresholdL = cms.int32(160),
        AbsIsoThresholdM = cms.int32(120),
        AbsIsoThresholdT = cms.int32(80),
        IsodumpForHLS = cms.int32(0),
        RelIsoThresholdL = cms.double(0.1),
        RelIsoThresholdM = cms.double(0.05),
        RelIsoThresholdT = cms.double(0.01),
        verbose = cms.int32(0)
    ),
    minTrackStubs = cms.int32(4),
    muonBXMax = cms.int32(0),
    muonBXMin = cms.int32(0),
    srcStubs = cms.InputTag("l1tStubsGmt","tps"),
    srcTracks = cms.InputTag("l1tTTTracksFromTrackletEmulation","Level1TTTracks"),
    tauto3mu = cms.PSet(

    ),
    trackConverter = cms.PSet(
        verbose = cms.int32(0)
    ),
    trackMatching = cms.PSet(
        verbose = cms.int32(0)
    ),
    verbose = cms.int32(0)
)


process.l1tTowerCalibration = cms.EDProducer("L1TowerCalibrator",
    EcalTpEtMin = cms.double(0.5),
    HFTpEtMin = cms.double(0.5),
    HGCalEmTpEtMin = cms.double(0.25),
    HGCalHadTpEtMin = cms.double(0.25),
    HcalTpEtMin = cms.double(0.5),
    L1HgcalTowersInputTag = cms.InputTag("l1tHGCalTowerProducer","HGCalTowerProcessor"),
    barrelSF = cms.double(1.0),
    debug = cms.bool(False),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    hfSF = cms.double(1.0),
    hgcalSF = cms.double(1.0),
    l1CaloTowers = cms.InputTag("l1tEGammaClusterEmuProducer","L1CaloTowerCollection"),
    nHits_to_nvtx_params = cms.VPSet(
        cms.PSet(
            fit = cms.string('hf'),
            params = cms.vdouble(165.706, 0.153)
        ),
        cms.PSet(
            fit = cms.string('ecal'),
            params = cms.vdouble(168.055, 0.377)
        ),
        cms.PSet(
            fit = cms.string('hgcalEM'),
            params = cms.vdouble(157.522, 0.09)
        ),
        cms.PSet(
            fit = cms.string('hgcalHad'),
            params = cms.vdouble(159.295, 0.178)
        ),
        cms.PSet(
            fit = cms.string('hcal'),
            params = cms.vdouble(168.548, 0.362)
        )
    ),
    nvtx_to_PU_sub_params = cms.VPSet(
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er1to3'),
            params = cms.vdouble(0.008955, 0.000298)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er4to6'),
            params = cms.vdouble(0.009463, 0.000256)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er7to9'),
            params = cms.vdouble(0.008783, 0.000293)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er10to12'),
            params = cms.vdouble(0.009308, 0.000255)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er13to15'),
            params = cms.vdouble(0.00929, 0.000221)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er16to18'),
            params = cms.vdouble(0.009282, 0.000135)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er1to3'),
            params = cms.vdouble(0.009976, 0.000377)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er4to6'),
            params = cms.vdouble(0.009803, 0.000394)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er7to9'),
            params = cms.vdouble(0.009654, 0.000429)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er10to12'),
            params = cms.vdouble(0.009107, 0.000528)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er13to15'),
            params = cms.vdouble(0.008367, 0.000652)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er16to18'),
            params = cms.vdouble(0.009681, 9.6e-05)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p4to1p8'),
            params = cms.vdouble(-0.011772, 0.004142)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p8to2p1'),
            params = cms.vdouble(-0.015488, 0.00541)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p1to2p4'),
            params = cms.vdouble(-0.02115, 0.006078)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p4to2p7'),
            params = cms.vdouble(-0.015705, 0.005339)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p7to3p1'),
            params = cms.vdouble(-0.018492, 0.00562)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p4to1p8'),
            params = cms.vdouble(0.005675, 0.000615)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p8to2p1'),
            params = cms.vdouble(0.00456, 0.001099)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p1to2p4'),
            params = cms.vdouble(3.6e-05, 0.001608)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p4to2p7'),
            params = cms.vdouble(0.000869, 0.001754)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p7to3p1'),
            params = cms.vdouble(-0.006574, 0.003134)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er29to33'),
            params = cms.vdouble(-0.203291, 0.044096)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er34to37'),
            params = cms.vdouble(-0.210922, 0.045628)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er38to41'),
            params = cms.vdouble(-0.229562, 0.05056)
        )
    ),
    puThreshold = cms.double(5.0),
    puThresholdEcal = cms.double(2.0),
    puThresholdEcalMax = cms.double(1.5),
    puThresholdEcalMin = cms.double(0.75),
    puThresholdHFMax = cms.double(15.0),
    puThresholdHFMin = cms.double(10.0),
    puThresholdHGCalEMMax = cms.double(1.75),
    puThresholdHGCalEMMin = cms.double(1.25),
    puThresholdHGCalHadMax = cms.double(1.25),
    puThresholdHGCalHadMin = cms.double(0.75),
    puThresholdHcal = cms.double(3.0),
    puThresholdHcalMax = cms.double(2.0),
    puThresholdHcalMin = cms.double(1.0),
    puThresholdL1eg = cms.double(2.0),
    skipCalibrations = cms.bool(False)
)


process.l1tTowerCalibrationProducer = cms.EDProducer("L1TowerCalibrator",
    EcalTpEtMin = cms.double(0.5),
    HFTpEtMin = cms.double(0.5),
    HGCalEmTpEtMin = cms.double(0.25),
    HGCalHadTpEtMin = cms.double(0.25),
    HcalTpEtMin = cms.double(0.5),
    L1HgcalTowersInputTag = cms.InputTag("l1tHGCalTowerProducer","HGCalTowerProcessor"),
    barrelSF = cms.double(1.0),
    debug = cms.bool(False),
    hcalDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    hfSF = cms.double(1.0),
    hgcalSF = cms.double(1.0),
    l1CaloTowers = cms.InputTag("l1tEGammaClusterEmuProducer","L1CaloTowerCollection"),
    nHits_to_nvtx_params = cms.VPSet(
        cms.PSet(
            fit = cms.string('hf'),
            params = cms.vdouble(165.706, 0.153)
        ),
        cms.PSet(
            fit = cms.string('ecal'),
            params = cms.vdouble(168.055, 0.377)
        ),
        cms.PSet(
            fit = cms.string('hgcalEM'),
            params = cms.vdouble(157.522, 0.09)
        ),
        cms.PSet(
            fit = cms.string('hgcalHad'),
            params = cms.vdouble(159.295, 0.178)
        ),
        cms.PSet(
            fit = cms.string('hcal'),
            params = cms.vdouble(168.548, 0.362)
        )
    ),
    nvtx_to_PU_sub_params = cms.VPSet(
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er1to3'),
            params = cms.vdouble(0.008955, 0.000298)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er4to6'),
            params = cms.vdouble(0.009463, 0.000256)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er7to9'),
            params = cms.vdouble(0.008783, 0.000293)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er10to12'),
            params = cms.vdouble(0.009308, 0.000255)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er13to15'),
            params = cms.vdouble(0.00929, 0.000221)
        ),
        cms.PSet(
            calo = cms.string('ecal'),
            iEta = cms.string('er16to18'),
            params = cms.vdouble(0.009282, 0.000135)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er1to3'),
            params = cms.vdouble(0.009976, 0.000377)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er4to6'),
            params = cms.vdouble(0.009803, 0.000394)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er7to9'),
            params = cms.vdouble(0.009654, 0.000429)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er10to12'),
            params = cms.vdouble(0.009107, 0.000528)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er13to15'),
            params = cms.vdouble(0.008367, 0.000652)
        ),
        cms.PSet(
            calo = cms.string('hcal'),
            iEta = cms.string('er16to18'),
            params = cms.vdouble(0.009681, 9.6e-05)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p4to1p8'),
            params = cms.vdouble(-0.011772, 0.004142)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er1p8to2p1'),
            params = cms.vdouble(-0.015488, 0.00541)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p1to2p4'),
            params = cms.vdouble(-0.02115, 0.006078)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p4to2p7'),
            params = cms.vdouble(-0.015705, 0.005339)
        ),
        cms.PSet(
            calo = cms.string('hgcalEM'),
            iEta = cms.string('er2p7to3p1'),
            params = cms.vdouble(-0.018492, 0.00562)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p4to1p8'),
            params = cms.vdouble(0.005675, 0.000615)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er1p8to2p1'),
            params = cms.vdouble(0.00456, 0.001099)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p1to2p4'),
            params = cms.vdouble(3.6e-05, 0.001608)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p4to2p7'),
            params = cms.vdouble(0.000869, 0.001754)
        ),
        cms.PSet(
            calo = cms.string('hgcalHad'),
            iEta = cms.string('er2p7to3p1'),
            params = cms.vdouble(-0.006574, 0.003134)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er29to33'),
            params = cms.vdouble(-0.203291, 0.044096)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er34to37'),
            params = cms.vdouble(-0.210922, 0.045628)
        ),
        cms.PSet(
            calo = cms.string('hf'),
            iEta = cms.string('er38to41'),
            params = cms.vdouble(-0.229562, 0.05056)
        )
    ),
    puThreshold = cms.double(5.0),
    puThresholdEcal = cms.double(2.0),
    puThresholdEcalMax = cms.double(1.5),
    puThresholdEcalMin = cms.double(0.75),
    puThresholdHFMax = cms.double(15.0),
    puThresholdHFMin = cms.double(10.0),
    puThresholdHGCalEMMax = cms.double(1.75),
    puThresholdHGCalEMMin = cms.double(1.25),
    puThresholdHGCalHadMax = cms.double(1.25),
    puThresholdHGCalHadMin = cms.double(0.75),
    puThresholdHcal = cms.double(3.0),
    puThresholdHcalMax = cms.double(2.0),
    puThresholdHcalMin = cms.double(1.0),
    puThresholdL1eg = cms.double(2.0),
    skipCalibrations = cms.bool(False)
)


process.l1tTrackFastJets = cms.EDProducer("L1TrackFastJetProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForJets","Level1TTTracksSelectedAssociated"),
    coneSize = cms.double(0.4),
    displaced = cms.bool(False)
)


process.l1tTrackFastJetsExtended = cms.EDProducer("L1TrackFastJetProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerExtendedForJets","Level1TTTracksExtendedSelectedAssociated"),
    coneSize = cms.double(0.4),
    displaced = cms.bool(True)
)


process.l1tTrackJets = cms.EDProducer("L1TrackJetProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForJets","Level1TTTracksSelectedAssociated"),
    d0_cutNStubs4 = cms.double(-1),
    d0_cutNStubs5 = cms.double(-1),
    displaced = cms.bool(False),
    etaBins = cms.int32(24),
    highpTJetMinTrackMultiplicity = cms.int32(3),
    highpTJetThreshold = cms.double(100.0),
    lowpTJetMinTrackMultiplicity = cms.int32(2),
    lowpTJetThreshold = cms.double(50.0),
    minTrkJetpT = cms.double(-1.0),
    nDisplacedTracks = cms.int32(2),
    phiBins = cms.int32(27),
    trk_etaMax = cms.double(2.4),
    trk_ptMax = cms.double(200.0),
    trk_zMax = cms.double(15.0),
    zBins = cms.int32(1)
)


process.l1tTrackJetsEmulation = cms.EDProducer("L1TrackJetEmulatorProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForJets","Level1TTTracksSelectedAssociatedEmulation"),
    d0_cutNStubs4 = cms.double(-1),
    d0_cutNStubs5 = cms.double(-1),
    displaced = cms.bool(False),
    etaBins = cms.int32(24),
    highpTJetMinTrackMultiplicity = cms.int32(3),
    highpTJetThreshold = cms.double(100.0),
    lowpTJetMinTrackMultiplicity = cms.int32(2),
    lowpTJetThreshold = cms.double(50.0),
    minTrkJetpT = cms.double(-1.0),
    nDisplacedTracks = cms.int32(2),
    phiBins = cms.int32(27),
    trk_etaMax = cms.double(2.4),
    trk_ptMax = cms.double(200.0),
    trk_zMax = cms.double(15.0),
    zBins = cms.int32(1)
)


process.l1tTrackJetsExtended = cms.EDProducer("L1TrackJetProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerExtendedForJets","Level1TTTracksExtendedSelectedAssociated"),
    d0_cutNStubs4 = cms.double(-1),
    d0_cutNStubs5 = cms.double(0.22),
    displaced = cms.bool(True),
    etaBins = cms.int32(24),
    highpTJetMinTrackMultiplicity = cms.int32(3),
    highpTJetThreshold = cms.double(100.0),
    lowpTJetMinTrackMultiplicity = cms.int32(2),
    lowpTJetThreshold = cms.double(50.0),
    minTrkJetpT = cms.double(5.0),
    nDisplacedTracks = cms.int32(3),
    phiBins = cms.int32(27),
    trk_etaMax = cms.double(2.4),
    trk_ptMax = cms.double(200.0),
    trk_zMax = cms.double(15.0),
    zBins = cms.int32(1)
)


process.l1tTrackJetsExtendedEmulation = cms.EDProducer("L1TrackJetEmulatorProducer",
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerExtendedForJets","Level1TTTracksExtendedSelectedAssociatedEmulation"),
    d0_cutNStubs4 = cms.double(-1),
    d0_cutNStubs5 = cms.double(0.22),
    displaced = cms.bool(True),
    etaBins = cms.int32(24),
    highpTJetMinTrackMultiplicity = cms.int32(3),
    highpTJetThreshold = cms.double(100.0),
    lowpTJetMinTrackMultiplicity = cms.int32(2),
    lowpTJetThreshold = cms.double(50.0),
    minTrkJetpT = cms.double(5.0),
    nDisplacedTracks = cms.int32(3),
    phiBins = cms.int32(27),
    trk_etaMax = cms.double(2.4),
    trk_ptMax = cms.double(200.0),
    trk_zMax = cms.double(15.0),
    zBins = cms.int32(1)
)


process.l1tTrackSelectionProducer = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(-1.0),
        ptMin = cms.double(2.0),
        reducedBendChi2Max = cms.double(2.25),
        reducedBendChi2MaxNstub4 = cms.double(999.9),
        reducedBendChi2MaxNstub5 = cms.double(999.9),
        reducedChi2RPhiMax = cms.double(20.0),
        reducedChi2RPhiMaxNstub4 = cms.double(999.9),
        reducedChi2RPhiMaxNstub5 = cms.double(999.9),
        reducedChi2RZMax = cms.double(5.0),
        reducedChi2RZMaxNstub4 = cms.double(999.9),
        reducedChi2RZMaxNstub5 = cms.double(999.9)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    outputCollectionName = cms.string('Level1TTTracksSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackSelectionProducerExtended = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(-1.0),
        ptMin = cms.double(3.0),
        reducedBendChi2Max = cms.double(2.4),
        reducedBendChi2MaxNstub4 = cms.double(999.9),
        reducedBendChi2MaxNstub5 = cms.double(999.9),
        reducedChi2RPhiMax = cms.double(40.0),
        reducedChi2RPhiMaxNstub4 = cms.double(999.9),
        reducedChi2RPhiMaxNstub5 = cms.double(999.9),
        reducedChi2RZMax = cms.double(10.0),
        reducedChi2RZMaxNstub4 = cms.double(999.9),
        reducedChi2RZMaxNstub5 = cms.double(999.9)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackSelectionProducerExtendedForEtMiss = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(-1.0),
        ptMin = cms.double(3.0),
        reducedBendChi2Max = cms.double(2.4),
        reducedBendChi2MaxNstub4 = cms.double(999.9),
        reducedBendChi2MaxNstub5 = cms.double(999.9),
        reducedChi2RPhiMax = cms.double(40.0),
        reducedChi2RPhiMaxNstub4 = cms.double(999.9),
        reducedChi2RPhiMaxNstub5 = cms.double(999.9),
        reducedChi2RZMax = cms.double(10.0),
        reducedChi2RZMaxNstub4 = cms.double(999.9),
        reducedChi2RZMaxNstub5 = cms.double(999.9)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackSelectionProducerExtendedForJets = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(-1.0),
        ptMin = cms.double(2.0),
        reducedBendChi2Max = cms.double(999.9),
        reducedBendChi2MaxNstub4 = cms.double(2.25),
        reducedBendChi2MaxNstub5 = cms.double(3.5),
        reducedChi2RPhiMax = cms.double(999.9),
        reducedChi2RPhiMaxNstub4 = cms.double(6.0),
        reducedChi2RPhiMaxNstub5 = cms.double(35.0),
        reducedChi2RZMax = cms.double(999.9),
        reducedChi2RZMaxNstub4 = cms.double(5.0),
        reducedChi2RZMaxNstub5 = cms.double(5.0)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackSelectionProducerForEtMiss = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(-1.0),
        ptMin = cms.double(2.0),
        reducedBendChi2Max = cms.double(2.25),
        reducedBendChi2MaxNstub4 = cms.double(999.9),
        reducedBendChi2MaxNstub5 = cms.double(999.9),
        reducedChi2RPhiMax = cms.double(20.0),
        reducedChi2RPhiMaxNstub4 = cms.double(999.9),
        reducedChi2RPhiMaxNstub5 = cms.double(999.9),
        reducedChi2RZMax = cms.double(5.0),
        reducedChi2RZMaxNstub4 = cms.double(999.9),
        reducedChi2RZMaxNstub5 = cms.double(999.9)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    outputCollectionName = cms.string('Level1TTTracksSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackSelectionProducerForJets = cms.EDProducer("L1TrackSelectionProducer",
    cutSet = cms.PSet(
        absEtaMax = cms.double(2.4),
        absZ0Max = cms.double(15.0),
        nPSStubsMin = cms.int32(0),
        nStubsMin = cms.int32(4),
        promptMVAMin = cms.double(0.1),
        ptMin = cms.double(2.0),
        reducedBendChi2Max = cms.double(999.9),
        reducedBendChi2MaxNstub4 = cms.double(999.9),
        reducedBendChi2MaxNstub5 = cms.double(999.9),
        reducedChi2RPhiMax = cms.double(999.9),
        reducedChi2RPhiMaxNstub4 = cms.double(999.9),
        reducedChi2RPhiMaxNstub5 = cms.double(999.9),
        reducedChi2RZMax = cms.double(999.9),
        reducedChi2RZMaxNstub4 = cms.double(999.9),
        reducedChi2RZMaxNstub5 = cms.double(999.9)
    ),
    debug = cms.int32(0),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    outputCollectionName = cms.string('Level1TTTracksSelected'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True)
)


process.l1tTrackTripletEmulation = cms.EDProducer("L1TrackTripletEmulatorProducer",
    L1PVertexInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    L1TrackInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForJets","Level1TTTracksSelectedAssociatedEmulation"),
    displaced = cms.bool(False),
    pair1_dzMax = cms.double(2.0),
    pair1_dzMin = cms.double(-1.0),
    pair1_massMax = cms.double(85),
    pair1_massMin = cms.double(0),
    pair2_dzMax = cms.double(0.8),
    pair2_dzMin = cms.double(-1.0),
    pair2_massMax = cms.double(85),
    pair2_massMin = cms.double(2.0),
    triplet_absCharge = cms.int32(1),
    triplet_absEtaMax = cms.double(100000000.0),
    triplet_absEtaMin = cms.double(-1.0),
    triplet_massMax = cms.double(100.0),
    triplet_massMin = cms.double(60.0),
    triplet_ptMax = cms.double(300),
    triplet_ptMin = cms.double(-1.0),
    trk1_absEtaMax = cms.double(2.4),
    trk1_dzMax = cms.double(100000000.0),
    trk1_mass = cms.double(0.139),
    trk1_mvaMin = cms.double(0.85),
    trk1_nstubMin = cms.int32(4),
    trk1_ptMin = cms.double(24.0),
    trk2_absEtaMax = cms.double(2.4),
    trk2_dzMax = cms.double(100000000.0),
    trk2_mass = cms.double(0.139),
    trk2_mvaMin = cms.double(0.85),
    trk2_nstubMin = cms.int32(4),
    trk2_ptMin = cms.double(20.0),
    trk3_absEtaMax = cms.double(2.4),
    trk3_dzMax = cms.double(100000000.0),
    trk3_mass = cms.double(0.139),
    trk3_mvaMin = cms.double(0.95),
    trk3_nstubMin = cms.int32(4),
    trk3_ptMin = cms.double(5.0)
)


process.l1tTrackVertexAssociationProducer = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(
            0.37, 0.5, 0.6, 0.75, 1.0,
            1.6
        ),
        deltaZMaxEtaBounds = cms.vdouble(
            0.0, 0.7, 1.0, 1.2, 1.6,
            2.0, 2.4
        )
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(-1.0)
)


process.l1tTrackVertexAssociationProducerExtended = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(
            3.0, 3.0, 3.0, 3.0, 3.0,
            3.0
        ),
        deltaZMaxEtaBounds = cms.vdouble(
            0.0, 0.7, 1.0, 1.2, 1.6,
            2.0, 2.4
        )
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducerExtended","Level1TTTracksExtendedSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducerExtended","Level1TTTracksExtendedSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(3.0)
)


process.l1tTrackVertexAssociationProducerExtendedForEtMiss = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(
            3.0, 3.0, 3.0, 3.0, 3.0,
            3.0
        ),
        deltaZMaxEtaBounds = cms.vdouble(
            0.0, 0.7, 1.0, 1.2, 1.6,
            2.0, 2.4
        )
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducerExtendedForEtMiss","Level1TTTracksExtendedSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducerExtendedForEtMiss","Level1TTTracksExtendedSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(3.0)
)


process.l1tTrackVertexAssociationProducerExtendedForJets = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(5.0),
        deltaZMaxEtaBounds = cms.vdouble(0.0, 2.4)
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducerExtendedForJets","Level1TTTracksExtendedSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducerExtendedForJets","Level1TTTracksExtendedSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducerExtended","Level1TTTracksExtendedConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksExtendedSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(3.0)
)


process.l1tTrackVertexAssociationProducerForEtMiss = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(
            0.37, 0.5, 0.6, 0.75, 1.0,
            1.6
        ),
        deltaZMaxEtaBounds = cms.vdouble(
            0.0, 0.7, 1.0, 1.2, 1.6,
            2.0, 2.4
        )
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducerForEtMiss","Level1TTTracksSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducerForEtMiss","Level1TTTracksSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(-1.0)
)


process.l1tTrackVertexAssociationProducerForJets = cms.EDProducer("L1TrackVertexAssociationProducer",
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(0.55),
        deltaZMaxEtaBounds = cms.vdouble(0.0, 2.4)
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducerForJets","Level1TTTracksSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducerForJets","Level1TTTracksSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(-1.0)
)


process.l1tTrackVertexNNAssociationProducer = cms.EDProducer("L1TrackVertexAssociationProducer",
    associationGraph = cms.FileInPath('L1Trigger/L1TTrackMatch/data/NNVtx_AssociationModelGraph.pb'),
    associationNetworkEtaBounds = cms.vdouble(
        0.0, 0.01984126984126984, 0.03968253968253968, 0.05952380952380952, 0.07936507936507936,
        0.0992063492063492, 0.11904761904761904, 0.1388888888888889, 0.15873015873015872, 0.17857142857142855,
        0.1984126984126984, 0.21825396825396826, 0.23809523809523808, 0.2579365079365079, 0.2777777777777778,
        0.2976190476190476, 0.31746031746031744, 0.33730158730158727, 0.3571428571428571, 0.376984126984127,
        0.3968253968253968, 0.41666666666666663, 0.4365079365079365, 0.45634920634920634, 0.47619047619047616,
        0.496031746031746, 0.5158730158730158, 0.5357142857142857, 0.5555555555555556, 0.5753968253968254,
        0.5952380952380952, 0.615079365079365, 0.6349206349206349, 0.6547619047619048, 0.6746031746031745,
        0.6944444444444444, 0.7142857142857142, 0.7341269841269841, 0.753968253968254, 0.7738095238095237,
        0.7936507936507936, 0.8134920634920635, 0.8333333333333333, 0.8531746031746031, 0.873015873015873,
        0.8928571428571428, 0.9126984126984127, 0.9325396825396824, 0.9523809523809523, 0.9722222222222222,
        0.992063492063492, 1.0119047619047619, 1.0317460317460316, 1.0515873015873016, 1.0714285714285714,
        1.0912698412698412, 1.1111111111111112, 1.130952380952381, 1.1507936507936507, 1.1706349206349205,
        1.1904761904761905, 1.2103174603174602, 1.23015873015873, 1.25, 1.2698412698412698,
        1.2896825396825395, 1.3095238095238095, 1.3293650793650793, 1.349206349206349, 1.369047619047619,
        1.3888888888888888, 1.4087301587301586, 1.4285714285714284, 1.4484126984126984, 1.4682539682539681,
        1.488095238095238, 1.507936507936508, 1.5277777777777777, 1.5476190476190474, 1.5674603174603174,
        1.5873015873015872, 1.607142857142857, 1.626984126984127, 1.6468253968253967, 1.6666666666666665,
        1.6865079365079365, 1.7063492063492063, 1.726190476190476, 1.746031746031746, 1.7658730158730158,
        1.7857142857142856, 1.8055555555555554, 1.8253968253968254, 1.8452380952380951, 1.865079365079365,
        1.8849206349206349, 1.9047619047619047, 1.9246031746031744, 1.9444444444444444, 1.9642857142857142,
        1.984126984126984, 2.003968253968254, 2.0238095238095237, 2.0436507936507935, 2.0634920634920633,
        2.083333333333333, 2.1031746031746033, 2.123015873015873, 2.142857142857143, 2.1626984126984126,
        2.1825396825396823, 2.202380952380952, 2.2222222222222223, 2.242063492063492, 2.261904761904762,
        2.2817460317460316, 2.3015873015873014, 2.321428571428571, 2.341269841269841, 2.361111111111111,
        2.380952380952381, 2.4007936507936507, 2.4206349206349205, 2.4404761904761902, 2.46031746031746,
        2.4801587301587302, 2.5
    ),
    associationNetworkZ0ResBins = cms.vdouble(
        127.0, 126.0, 126.0, 126.0, 125.0,
        124.0, 123.0, 122.0, 120.0, 119.0,
        117.0, 115.0, 114.0, 112.0, 110.0,
        107.0, 105.0, 103.0, 101.0, 98.0,
        96.0, 94.0, 91.0, 89.0, 87.0,
        85.0, 82.0, 80.0, 78.0, 76.0,
        74.0, 72.0, 70.0, 68.0, 66.0,
        64.0, 62.0, 61.0, 59.0, 57.0,
        56.0, 54.0, 53.0, 51.0, 50.0,
        48.0, 47.0, 46.0, 45.0, 43.0,
        42.0, 41.0, 40.0, 39.0, 38.0,
        37.0, 36.0, 35.0, 34.0, 33.0,
        33.0, 32.0, 31.0, 30.0, 30.0,
        29.0, 28.0, 28.0, 27.0, 26.0,
        26.0, 25.0, 24.0, 24.0, 23.0,
        23.0, 22.0, 22.0, 21.0, 21.0,
        21.0, 20.0, 20.0, 19.0, 19.0,
        18.0, 18.0, 18.0, 17.0, 17.0,
        17.0, 16.0, 16.0, 16.0, 15.0,
        15.0, 15.0, 15.0, 14.0, 14.0,
        14.0, 14.0, 13.0, 13.0, 13.0,
        13.0, 12.0, 12.0, 12.0, 12.0,
        12.0, 11.0, 11.0, 11.0, 11.0,
        11.0, 10.0, 10.0, 10.0, 10.0,
        10.0, 10.0, 9.0, 9.0, 9.0,
        9.0, 9.0, 0.0
    ),
    associationNetworkZ0binning = cms.vdouble(-20.46912512, 20.46912512, 0.15991504),
    associationThreshold = cms.double(0.1),
    cutSet = cms.PSet(
        deltaZMax = cms.vdouble(
            0.37, 0.5, 0.6, 0.75, 1.0,
            1.6
        ),
        deltaZMaxEtaBounds = cms.vdouble(
            0.0, 0.7, 1.0, 1.2, 1.6,
            2.0, 2.4
        )
    ),
    debug = cms.int32(0),
    fwNTrackSetsTVA = cms.uint32(94),
    l1SelectedTracksEmulationInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelectedEmulation"),
    l1SelectedTracksInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelected"),
    l1TracksInputTag = cms.InputTag("l1tGTTInputProducer","Level1TTTracksConverted"),
    l1VerticesEmulationInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    l1VerticesInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    outputCollectionName = cms.string('Level1TTTracksSelectedAssociated'),
    processEmulatedTracks = cms.bool(True),
    processSimulatedTracks = cms.bool(True),
    useAssociationNetwork = cms.bool(True),
    useDisplacedTracksDeltaZOverride = cms.double(-1.0)
)


process.l1tTrackerEmuEtMiss = cms.EDProducer("L1TrackerEtMissEmulatorProducer",
    L1MetCollectionName = cms.string('L1TrackerEmuEtMiss'),
    L1TrackAssociatedInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForEtMiss","Level1TTTracksSelectedAssociatedEmulation"),
    L1TrackInputTag = cms.InputTag("l1tTrackSelectionProducerForEtMiss","Level1TTTracksSelectedEmulation"),
    L1VertexInputTag = cms.InputTag("l1tVertexFinderEmulator","L1VerticesEmulation"),
    debug = cms.int32(0),
    nCordicSteps = cms.int32(13),
    useGTTinput = cms.bool(True)
)


process.l1tTrackerEmuHTMiss = cms.EDProducer("L1TkHTMissEmulatorProducer",
    L1MHTCollectionName = cms.string('L1TrackerEmuHTMiss'),
    L1TkJetEmulationInputTag = cms.InputTag("l1tTrackJetsEmulation","L1TrackJets"),
    debug = cms.bool(False),
    displaced = cms.bool(False),
    jet_maxEta = cms.double(2.4),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(3.0)
)


process.l1tTrackerEmuHTMissExtended = cms.EDProducer("L1TkHTMissEmulatorProducer",
    L1MHTCollectionName = cms.string('L1TrackerEmuHTMissExtended'),
    L1TkJetEmulationInputTag = cms.InputTag("l1tTrackJetsExtendedEmulation","L1TrackJetsExtended"),
    debug = cms.bool(False),
    displaced = cms.bool(True),
    jet_maxEta = cms.double(2.4),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(3.0)
)


process.l1tTrackerEtMiss = cms.EDProducer("L1TrackerEtMissProducer",
    L1MetCollectionName = cms.string('L1TrackerEtMiss'),
    L1TrackAssociatedInputTag = cms.InputTag("l1tTrackVertexAssociationProducerForEtMiss","Level1TTTracksSelectedAssociated"),
    L1TrackInputTag = cms.InputTag("l1tTrackSelectionProducerForEtMiss","Level1TTTracksSelected"),
    debug = cms.bool(False),
    highPtTracks = cms.int32(1),
    maxPt = cms.double(-10.0)
)


process.l1tTrackerEtMissExtended = cms.EDProducer("L1TrackerEtMissProducer",
    L1MetCollectionName = cms.string('L1TrackerExtendedEtMiss'),
    L1TrackAssociatedInputTag = cms.InputTag("l1tTrackVertexAssociationProducerExtendedForEtMiss","Level1TTTracksExtendedSelectedAssociated"),
    L1TrackInputTag = cms.InputTag("l1tTrackSelectionProducerExtendedForEtMiss","Level1TTTracksExtendedSelected"),
    debug = cms.bool(False),
    highPtTracks = cms.int32(1),
    maxPt = cms.double(-10.0)
)


process.l1tTrackerHTMiss = cms.EDProducer("L1TkHTMissProducer",
    L1TkJetInputTag = cms.InputTag("l1tTrackJets","L1TrackJets"),
    L1VertexInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    deltaZ = cms.double(1.0),
    displaced = cms.bool(False),
    doVtxConstrain = cms.bool(False),
    jet_maxEta = cms.double(2.4),
    jet_minJetEtHighPt = cms.double(100.0),
    jet_minJetEtLowPt = cms.double(50.0),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(3.0),
    primaryVtxConstrain = cms.bool(False),
    useCaloJets = cms.bool(False)
)


process.l1tTrackerHTMissExtended = cms.EDProducer("L1TkHTMissProducer",
    L1TkJetInputTag = cms.InputTag("l1tTrackJetsExtended","L1TrackJetsExtended"),
    L1VertexInputTag = cms.InputTag("l1tVertexFinder","L1Vertices"),
    deltaZ = cms.double(1.0),
    displaced = cms.bool(True),
    doVtxConstrain = cms.bool(False),
    jet_maxEta = cms.double(2.4),
    jet_minJetEtHighPt = cms.double(100.0),
    jet_minJetEtLowPt = cms.double(50.0),
    jet_minNtracksHighPt = cms.int32(0),
    jet_minNtracksLowPt = cms.int32(0),
    jet_minPt = cms.double(3.0),
    primaryVtxConstrain = cms.bool(False),
    useCaloJets = cms.bool(False)
)


process.l1tVertexFinder = cms.EDProducer("VertexProducer",
    VertexReconstruction = cms.PSet(
        AVR_chi2cut = cms.double(5.0),
        Algorithm = cms.string('fastHisto'),
        DBSCANMinDensityTracks = cms.uint32(2),
        DBSCANPtThreshold = cms.double(4.0),
        DistanceType = cms.uint32(0),
        EM_DoQualityCuts = cms.bool(False),
        FH_DoPtComp = cms.bool(True),
        FH_DoTightChi2 = cms.bool(False),
        FH_HistogramParameters = cms.vdouble(-20.46912512, 20.46912512, 0.15991504),
        FH_NVtx = cms.uint32(1),
        FH_VertexWidth = cms.double(0.15),
        FH_WindowSize = cms.uint32(3),
        KmeansIterations = cms.uint32(10),
        KmeansNumClusters = cms.uint32(18),
        MinTracks = cms.uint32(2),
        PatternRecGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_PatternModelGraph.pb'),
        TrackWeightGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_WeightModelGraph.pb'),
        VertexDistance = cms.double(0.15),
        VertexResolution = cms.double(0.1),
        VxMaxTrackChi2 = cms.double(100.0),
        VxMaxTrackPt = cms.double(127.0),
        VxMaxTrackPtBehavior = cms.int32(1),
        VxMinNStub = cms.uint32(4),
        VxMinNStubPS = cms.uint32(3),
        VxMinTrackPt = cms.double(2.0),
        WeightedMean = cms.uint32(1)
    ),
    debug = cms.uint32(0),
    l1TracksInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelected"),
    l1VertexCollectionName = cms.string('L1Vertices')
)


process.l1tVertexFinderEmulator = cms.EDProducer("VertexProducer",
    VertexReconstruction = cms.PSet(
        AVR_chi2cut = cms.double(5.0),
        Algorithm = cms.string('fastHistoEmulation'),
        DBSCANMinDensityTracks = cms.uint32(2),
        DBSCANPtThreshold = cms.double(4.0),
        DistanceType = cms.uint32(0),
        EM_DoQualityCuts = cms.bool(False),
        FH_DoPtComp = cms.bool(True),
        FH_DoTightChi2 = cms.bool(False),
        FH_HistogramParameters = cms.vdouble(-20.46912512, 20.46912512, 0.15991504),
        FH_NVtx = cms.uint32(1),
        FH_VertexWidth = cms.double(0.15),
        FH_WindowSize = cms.uint32(3),
        KmeansIterations = cms.uint32(10),
        KmeansNumClusters = cms.uint32(18),
        MinTracks = cms.uint32(2),
        PatternRecGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_PatternModelGraph.pb'),
        TrackWeightGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_WeightModelGraph.pb'),
        VertexDistance = cms.double(0.15),
        VertexResolution = cms.double(0.1),
        VxMaxTrackChi2 = cms.double(100.0),
        VxMaxTrackPt = cms.double(127.0),
        VxMaxTrackPtBehavior = cms.int32(1),
        VxMinNStub = cms.uint32(4),
        VxMinNStubPS = cms.uint32(3),
        VxMinTrackPt = cms.double(2.0),
        WeightedMean = cms.uint32(1)
    ),
    debug = cms.uint32(0),
    l1TracksInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelectedEmulation"),
    l1VertexCollectionName = cms.string('L1Vertices')
)


process.l1tVertexProducer = cms.EDProducer("VertexProducer",
    VertexReconstruction = cms.PSet(
        AVR_chi2cut = cms.double(5.0),
        Algorithm = cms.string('fastHisto'),
        DBSCANMinDensityTracks = cms.uint32(2),
        DBSCANPtThreshold = cms.double(4.0),
        DistanceType = cms.uint32(0),
        EM_DoQualityCuts = cms.bool(False),
        FH_DoPtComp = cms.bool(True),
        FH_DoTightChi2 = cms.bool(False),
        FH_HistogramParameters = cms.vdouble(-20.46912512, 20.46912512, 0.15991504),
        FH_NVtx = cms.uint32(1),
        FH_VertexWidth = cms.double(0.15),
        FH_WindowSize = cms.uint32(3),
        KmeansIterations = cms.uint32(10),
        KmeansNumClusters = cms.uint32(18),
        MinTracks = cms.uint32(2),
        PatternRecGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_PatternModelGraph.pb'),
        TrackWeightGraph = cms.FileInPath('L1Trigger/VertexFinder/data/NNVtx_WeightModelGraph.pb'),
        VertexDistance = cms.double(0.15),
        VertexResolution = cms.double(0.1),
        VxMaxTrackChi2 = cms.double(100.0),
        VxMaxTrackPt = cms.double(127.0),
        VxMaxTrackPtBehavior = cms.int32(1),
        VxMinNStub = cms.uint32(4),
        VxMinNStubPS = cms.uint32(3),
        VxMinTrackPt = cms.double(2.0),
        WeightedMean = cms.uint32(1)
    ),
    debug = cms.uint32(0),
    l1TracksInputTag = cms.InputTag("l1tTrackSelectionProducer","Level1TTTracksSelected"),
    l1VertexCollectionName = cms.string('L1Vertices')
)


process.l1tZDCEtSums = cms.EDProducer("L1TZDCProducer",
    bxFirst = cms.int32(-2),
    bxLast = cms.int32(3),
    hcalTPDigis = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    mightGet = cms.optional.untracked.vstring
)


process.me0RecHits = cms.EDProducer("ME0RecHitProducer",
    me0DigiLabel = cms.InputTag("simMuonME0PseudoReDigis"),
    recAlgo = cms.string('ME0RecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.me0RecHitsCoarse = cms.EDProducer("ME0RecHitProducer",
    me0DigiLabel = cms.InputTag("simMuonME0PseudoReDigisCoarse"),
    recAlgo = cms.string('ME0RecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.me0Segments = cms.EDProducer("ME0SegmentProducer",
    algo_psets = cms.VPSet(
        cms.PSet(
            algo_name = cms.string('ME0SegmentAlgorithm'),
            algo_pset = cms.PSet(
                ME0Debug = cms.untracked.bool(True),
                dEtaChainBoxMax = cms.double(0.05),
                dPhiChainBoxMax = cms.double(0.02),
                dTimeChainBoxMax = cms.double(15.0),
                dXclusBoxMax = cms.double(1.0),
                dYclusBoxMax = cms.double(5.0),
                maxRecHitsInCluster = cms.int32(6),
                minHitsPerSegment = cms.uint32(3),
                preClustering = cms.bool(True),
                preClusteringUseChaining = cms.bool(True)
            )
        ),
        cms.PSet(
            algo_name = cms.string('ME0SegAlgoRU'),
            algo_pset = cms.PSet(
                allowWideSegments = cms.bool(True),
                doCollisions = cms.bool(True),
                maxChi2Additional = cms.double(100.0),
                maxChi2GoodSeg = cms.double(50),
                maxChi2Prune = cms.double(50),
                maxETASeeds = cms.double(0.1),
                maxPhiAdditional = cms.double(0.001096605744),
                maxPhiSeeds = cms.double(0.001096605744),
                maxTOFDiff = cms.double(25),
                minNumberOfHits = cms.uint32(4),
                requireCentralBX = cms.bool(True)
            )
        )
    ),
    algo_type = cms.int32(2),
    me0RecHitLabel = cms.InputTag("me0RecHits")
)


process.me0TriggerConvertedPseudoDigis = cms.EDProducer("ME0TriggerPseudoProducer",
    DeltaPhiResolution = cms.untracked.double(0.25),
    ME0SegmentProducer = cms.InputTag("me0Segments"),
    info = cms.untracked.int32(0)
)


process.me0TriggerDigis = cms.EDProducer("ME0TriggerProducer",
    ME0PadDigis = cms.InputTag("simMuonME0PadDigis"),
    tmbParam = cms.PSet(
        verbosity = cms.int32(0)
    )
)


process.me0TriggerPseudoDigis = cms.EDProducer("ME0SegmentProducer",
    algo_psets = cms.VPSet(
        cms.PSet(
            algo_name = cms.string('ME0SegmentAlgorithm'),
            algo_pset = cms.PSet(
                ME0Debug = cms.untracked.bool(True),
                dEtaChainBoxMax = cms.double(0.05),
                dPhiChainBoxMax = cms.double(0.02),
                dTimeChainBoxMax = cms.double(15.0),
                dXclusBoxMax = cms.double(1.0),
                dYclusBoxMax = cms.double(5.0),
                maxRecHitsInCluster = cms.int32(6),
                minHitsPerSegment = cms.uint32(3),
                preClustering = cms.bool(True),
                preClusteringUseChaining = cms.bool(True)
            )
        ),
        cms.PSet(
            algo_name = cms.string('ME0SegAlgoRU'),
            algo_pset = cms.PSet(
                allowWideSegments = cms.bool(True),
                doCollisions = cms.bool(True),
                maxChi2Additional = cms.double(100.0),
                maxChi2GoodSeg = cms.double(50),
                maxChi2Prune = cms.double(50),
                maxETASeeds = cms.double(0.1),
                maxPhiAdditional = cms.double(0.0021874999999999998),
                maxPhiSeeds = cms.double(0.0021874999999999998),
                maxTOFDiff = cms.double(25),
                minNumberOfHits = cms.uint32(4),
                requireCentralBX = cms.bool(True)
            )
        )
    ),
    algo_type = cms.int32(2),
    me0RecHitLabel = cms.InputTag("me0RecHitsCoarse")
)


process.mix = cms.EDProducer("MixingModule",
    LabelPlayback = cms.string(''),
    bunchspace = cms.int32(450),
    digitizers = cms.PSet(
        ecal = cms.PSet(
            ConstantTerm = cms.double(0.003),
            EBCorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.73354, 0.64442, 0.58851, 0.55425,
                0.53082, 0.51916, 0.51097, 0.50732, 0.50409
            ),
            EBCorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.70946, 0.58021, 0.49846, 0.45006,
                0.41366, 0.39699, 0.38478, 0.37847, 0.37055
            ),
            EBCorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71073, 0.55721, 0.46089, 0.40449,
                0.35931, 0.33924, 0.32439, 0.31581, 0.30481
            ),
            EBdigiCollection = cms.string(''),
            EBs25notContainment = cms.double(0.9675),
            EECorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.72698, 0.62048, 0.55691, 0.51848,
                0.49147, 0.47813, 0.47007, 0.46621, 0.46265
            ),
            EECorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.71217, 0.47464, 0.34056, 0.26282,
                0.20287, 0.17734, 0.16256, 0.15618, 0.14443
            ),
            EECorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71373, 0.44825, 0.30152, 0.21609,
                0.14786, 0.11772, 0.10165, 0.09465, 0.08098
            ),
            EEdigiCollection = cms.string(''),
            EEs25notContainment = cms.double(0.968),
            ESdigiCollection = cms.string(''),
            EcalPreMixStage1 = cms.bool(False),
            EcalPreMixStage2 = cms.bool(False),
            UseLCcorrection = cms.untracked.bool(True),
            accumulatorType = cms.string('EcalDigiProducer'),
            apdAddToBarrel = cms.bool(False),
            apdDigiTag = cms.string('APD'),
            apdDoPEStats = cms.bool(True),
            apdNonlParms = cms.vdouble(
                1.48, -3.75, 1.81, 1.26, 2.0,
                45, 1.0
            ),
            apdSeparateDigi = cms.bool(True),
            apdShapeTau = cms.double(40.5),
            apdShapeTstart = cms.double(74.5),
            apdSimToPEHigh = cms.double(88200000.0),
            apdSimToPELow = cms.double(2450000.0),
            apdTimeOffWidth = cms.double(0.8),
            apdTimeOffset = cms.double(-13.5),
            applyConstantTerm = cms.bool(True),
            binOfMaximum = cms.int32(6),
            componentAddToBarrel = cms.bool(False),
            componentDigiTag = cms.string('Component'),
            componentSeparateDigi = cms.bool(False),
            componentTimePhase = cms.double(0.0),
            componentTimeTag = cms.string('Component'),
            cosmicsPhase = cms.bool(False),
            cosmicsShift = cms.double(0.0),
            doEB = cms.bool(True),
            doEE = cms.bool(True),
            doENoise = cms.bool(True),
            doES = cms.bool(True),
            doESNoise = cms.bool(True),
            doFast = cms.bool(True),
            doPhotostatistics = cms.bool(True),
            hitsProducer = cms.string('g4SimHits'),
            makeDigiSimLinks = cms.untracked.bool(False),
            photoelectronsToAnalogBarrel = cms.double(0.000444444),
            photoelectronsToAnalogEndcap = cms.double(0.000555555),
            samplingFactor = cms.double(1.0),
            simHitToPhotoelectronsBarrel = cms.double(2250.0),
            simHitToPhotoelectronsEndcap = cms.double(1800.0),
            syncPhase = cms.bool(True),
            timeDependent = cms.bool(False),
            timePhase = cms.double(0.0)
        ),
        hcal = cms.PSet(
            DelivLuminosity = cms.double(0),
            HBDarkening = cms.bool(False),
            HEDarkening = cms.bool(False),
            HFDarkening = cms.bool(False),
            HFRecalParameterBlock = cms.PSet(
                HFdepthOneParameterA = cms.vdouble(
                    0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
                    0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
                    0.058939, 0.125497
                ),
                HFdepthOneParameterB = cms.vdouble(
                    -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
                    2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
                    0.000425, 0.000209
                ),
                HFdepthTwoParameterA = cms.vdouble(
                    0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
                    0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
                    0.051579, 0.086593
                ),
                HFdepthTwoParameterB = cms.vdouble(
                    -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
                    1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
                    0.000157, -3e-06
                )
            ),
            HcalPreMixStage1 = cms.bool(False),
            HcalPreMixStage2 = cms.bool(False),
            TestNumbering = cms.bool(True),
            accumulatorType = cms.string('HcalDigiProducer'),
            debugCaloSamples = cms.bool(False),
            doEmpty = cms.bool(True),
            doHFWindow = cms.bool(False),
            doIonFeedback = cms.bool(True),
            doNeutralDensityFilter = cms.bool(True),
            doNoise = cms.bool(True),
            doThermalNoise = cms.bool(True),
            doTimeSlew = cms.bool(True),
            doZDCDigi = cms.bool(True),
            hb = cms.PSet(
                binOfMaximum = cms.int32(6),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(True),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    125.44, 125.54, 125.32, 125.13, 124.46,
                    125.01, 125.22, 125.48, 124.45, 125.9,
                    125.83, 127.01, 126.82, 129.73, 131.83,
                    143.52
                ),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(10.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(18.7),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            he = cms.PSet(
                binOfMaximum = cms.int32(6),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(True),
                firstRing = cms.int32(16),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    210.55, 197.93, 186.12, 189.64, 189.63,
                    190.28, 189.61, 189.6, 190.12, 191.22,
                    190.9, 193.06, 188.42, 188.42
                ),
                simHitToPhotoelectrons = cms.double(2000.0),
                sipmTau = cms.double(10.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(18.7),
                timePhase = cms.double(6.0),
                timeSmearing = cms.bool(True)
            ),
            hf1 = cms.PSet(
                binOfMaximum = cms.int32(2),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(2.79),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.37),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(3.0),
                timePhase = cms.double(9.0)
            ),
            hf2 = cms.PSet(
                binOfMaximum = cms.int32(2),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(3),
                samplingFactor = cms.double(0.37),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(3.0),
                timePhase = cms.double(8.0)
            ),
            hitsProducer = cms.string('g4SimHits'),
            ho = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(1),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoHamamatsu = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            hoZecotek = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                firstRing = cms.int32(1),
                readoutFrameSize = cms.int32(10),
                samplingFactors = cms.vdouble(
                    231.0, 231.0, 231.0, 231.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0,
                    360.0, 360.0, 360.0, 360.0, 360.0
                ),
                siPMCode = cms.int32(2),
                simHitToPhotoelectrons = cms.double(4000.0),
                sipmTau = cms.double(5.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(5.0),
                timeSmearing = cms.bool(False)
            ),
            ignoreGeantTime = cms.bool(False),
            injectTestHits = cms.bool(False),
            injectTestHitsCells = cms.vint32(),
            injectTestHitsEnergy = cms.vdouble(),
            injectTestHitsTime = cms.vdouble(),
            killHE = cms.bool(False),
            makeDigiSimLinks = cms.untracked.bool(False),
            minFCToDelay = cms.double(5.0),
            zdc = cms.PSet(
                binOfMaximum = cms.int32(5),
                delayQIE = cms.int32(-999),
                doPhotoStatistics = cms.bool(True),
                doSiPMSmearing = cms.bool(False),
                photoelectronsToAnalog = cms.double(1.843),
                readoutFrameSize = cms.int32(10),
                samplingFactor = cms.double(1.0),
                simHitToPhotoelectrons = cms.double(6.0),
                sipmTau = cms.double(0.0),
                syncPhase = cms.bool(True),
                threshold_currentTDC = cms.double(-999.0),
                timePhase = cms.double(-4.0)
            )
        ),
        mergedtruth = cms.PSet(
            HepMCProductLabel = cms.InputTag("generatorSmeared"),
            accumulatorType = cms.string('TrackingTruthAccumulator'),
            allowDifferentSimHitProcesses = cms.bool(False),
            alwaysAddAncestors = cms.bool(True),
            createInitialVertexCollection = cms.bool(False),
            createMergedBremsstrahlung = cms.bool(True),
            createUnmergedCollection = cms.bool(True),
            genParticleCollection = cms.InputTag("genParticles"),
            ignoreTracksOutsideVolume = cms.bool(False),
            maximumPreviousBunchCrossing = cms.uint32(9999),
            maximumSubsequentBunchCrossing = cms.uint32(9999),
            removeDeadModules = cms.bool(False),
            select = cms.PSet(
                chargedOnlyTP = cms.bool(True),
                intimeOnlyTP = cms.bool(False),
                lipTP = cms.double(1000),
                maxRapidityTP = cms.double(5.0),
                minHitTP = cms.int32(0),
                minRapidityTP = cms.double(-5.0),
                pdgIdTP = cms.vint32(),
                ptMaxTP = cms.double(1e+100),
                ptMinTP = cms.double(0.1),
                signalOnlyTP = cms.bool(False),
                stableOnlyTP = cms.bool(False),
                tipTP = cms.double(1000)
            ),
            simHitCollections = cms.PSet(
                muon = cms.VInputTag(cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","MuonGEMHits")),
                pixel = cms.VInputTag(cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")),
                tracker = cms.VInputTag(
                    cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                    cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof")
                )
            ),
            simTrackCollection = cms.InputTag("g4SimHits"),
            simVertexCollection = cms.InputTag("g4SimHits"),
            vertexDistanceCut = cms.double(0.003),
            volumeRadius = cms.double(120.0),
            volumeZ = cms.double(300.0)
        ),
        pixel = cms.PSet(
            AdcFullScLateCR = cms.int32(255),
            AdcFullScale = cms.int32(255),
            AddNoise = cms.bool(True),
            AddNoisyPixels = cms.bool(True),
            AddPixelInefficiency = cms.bool(True),
            AddThresholdSmearing = cms.bool(True),
            Alpha2Order = cms.bool(True),
            BPix_SignalResponse_p0 = cms.double(0.00171),
            BPix_SignalResponse_p1 = cms.double(0.711),
            BPix_SignalResponse_p2 = cms.double(203.0),
            BPix_SignalResponse_p3 = cms.double(148.0),
            ChargeVCALSmearing = cms.bool(True),
            DeadModules_DB = cms.bool(True),
            DoPixelAging = cms.bool(False),
            ElectronPerAdc = cms.double(135.0),
            ElectronsPerVcal = cms.double(47),
            ElectronsPerVcal_L1 = cms.double(50),
            ElectronsPerVcal_L1_Offset = cms.double(-670),
            ElectronsPerVcal_Offset = cms.double(-60),
            FPix_SignalResponse_p0 = cms.double(0.00171),
            FPix_SignalResponse_p1 = cms.double(0.711),
            FPix_SignalResponse_p2 = cms.double(203.0),
            FPix_SignalResponse_p3 = cms.double(148.0),
            GainSmearing = cms.double(0.0),
            KillBadFEDChannels = cms.bool(True),
            LorentzAngle_DB = cms.bool(True),
            MissCalInLateCR = cms.bool(True),
            MissCalibrate = cms.bool(True),
            NoiseInElectrons = cms.double(175.0),
            NumPixelBarrel = cms.int32(4),
            NumPixelEndcap = cms.int32(3),
            OffsetSmearing = cms.double(0.0),
            PixGeometryType = cms.string('idealForDigi'),
            PrintClusters = cms.bool(False),
            PrintTemplates = cms.bool(False),
            ReadoutNoiseInElec = cms.double(350.0),
            RoutList = cms.vstring(
                'TrackerHitsPixelBarrelLowTof',
                'TrackerHitsPixelBarrelHighTof',
                'TrackerHitsPixelEndcapLowTof',
                'TrackerHitsPixelEndcapHighTof'
            ),
            SiPixelQualityLabel = cms.string('forDigitizer'),
            TanLorentzAnglePerTesla_BPix = cms.double(0.106),
            TanLorentzAnglePerTesla_FPix = cms.double(0.106),
            ThresholdInElectrons_BPix = cms.double(1600.0),
            ThresholdInElectrons_BPix_L1 = cms.double(2000.0),
            ThresholdInElectrons_BPix_L2 = cms.double(1600.0),
            ThresholdInElectrons_FPix = cms.double(1600.0),
            ThresholdSmearing_BPix = cms.double(245.0),
            ThresholdSmearing_BPix_L1 = cms.double(245.0),
            ThresholdSmearing_BPix_L2 = cms.double(245.0),
            ThresholdSmearing_FPix = cms.double(210.0),
            TofLowerCut = cms.double(-12.5),
            TofUpperCut = cms.double(12.5),
            UseReweighting = cms.bool(True),
            accumulatorType = cms.string('SiPixelDigitizer'),
            applyLateReweighting = cms.bool(False),
            deltaProductionCut = cms.double(0.03),
            hitsProducer = cms.string('g4SimHits'),
            killModules = cms.bool(True),
            makeDigiSimLinks = cms.untracked.bool(True),
            store_SimHitEntryExitPoints = cms.bool(False),
            useDB = cms.bool(False)
        ),
        puVtx = cms.PSet(
            accumulatorType = cms.string('PileupVertexAccumulator'),
            hitsProducer = cms.string('generator'),
            makeDigiSimLinks = cms.untracked.bool(False),
            saveVtxTimes = cms.bool(False),
            vtxFallbackTag = cms.InputTag("generator"),
            vtxTag = cms.InputTag("generatorSmeared")
        ),
        strip = cms.PSet(
            APVProbabilityFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVProbaList.txt'),
            APVSaturationFromHIP = cms.bool(False),
            APVSaturationProbScaling = cms.double(1.0),
            APVShapeDecoFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapeDeco_320.txt'),
            APVShapePeakFile = cms.FileInPath('SimTracker/SiStripDigitizer/data/APVShapePeak_default.txt'),
            APVpeakmode = cms.bool(False),
            AppliedVoltage = cms.double(300.0),
            BaselineShift = cms.bool(True),
            ChargeDistributionRMS = cms.double(6.5e-10),
            ChargeMobility = cms.double(310.0),
            CommonModeNoise = cms.bool(True),
            CosmicDelayShift = cms.untracked.double(0.0),
            CouplingConstantDecIB1 = cms.vdouble(0.7748, 0.0962, 0.0165),
            CouplingConstantDecIB2 = cms.vdouble(0.83, 0.0756, 0.0094),
            CouplingConstantDecOB1 = cms.vdouble(0.6871, 0.1222, 0.0342),
            CouplingConstantDecOB2 = cms.vdouble(0.725, 0.1102, 0.0273),
            CouplingConstantDecW1a = cms.vdouble(0.786, 0.093, 0.014),
            CouplingConstantDecW1b = cms.vdouble(0.822, 0.08, 0.009),
            CouplingConstantDecW2a = cms.vdouble(0.7962, 0.0914, 0.0104),
            CouplingConstantDecW2b = cms.vdouble(0.888, 0.05, 0.006),
            CouplingConstantDecW3a = cms.vdouble(0.8164, 0.09, 0.0018),
            CouplingConstantDecW3b = cms.vdouble(0.848, 0.06, 0.016),
            CouplingConstantDecW4 = cms.vdouble(0.876, 0.06, 0.002),
            CouplingConstantDecW5 = cms.vdouble(0.7565, 0.0913, 0.0304),
            CouplingConstantDecW6 = cms.vdouble(0.758, 0.093, 0.026),
            CouplingConstantDecW7 = cms.vdouble(0.7828, 0.0862, 0.0224),
            CouplingConstantPeakIB1 = cms.vdouble(0.9006, 0.0497),
            CouplingConstantPeakIB2 = cms.vdouble(0.9342, 0.0328),
            CouplingConstantPeakOB1 = cms.vdouble(0.8542, 0.0729),
            CouplingConstantPeakOB2 = cms.vdouble(0.8719, 0.064),
            CouplingConstantPeakW1a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW1b = cms.vdouble(0.976, 0.012),
            CouplingConstantPeakW2a = cms.vdouble(1.0, 0.0),
            CouplingConstantPeakW2b = cms.vdouble(0.998, 0.001),
            CouplingConstantPeakW3a = cms.vdouble(0.996, 0.002),
            CouplingConstantPeakW3b = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW4 = cms.vdouble(0.992, 0.004),
            CouplingConstantPeakW5 = cms.vdouble(0.968, 0.016),
            CouplingConstantPeakW6 = cms.vdouble(0.972, 0.014),
            CouplingConstantPeakW7 = cms.vdouble(0.964, 0.018),
            CouplingConstantRunIIDecIB1 = cms.vdouble(0.8361, 0.0703, 0.0117),
            CouplingConstantRunIIDecIB2 = cms.vdouble(0.8616, 0.0588, 0.0104),
            CouplingConstantRunIIDecOB1 = cms.vdouble(0.7461, 0.0996, 0.0273),
            CouplingConstantRunIIDecOB2 = cms.vdouble(0.7925, 0.0834, 0.0203),
            CouplingConstantRunIIDecW1a = cms.vdouble(0.8571, 0.0608, 0.0106),
            CouplingConstantRunIIDecW1b = cms.vdouble(0.8827, 0.0518, 0.0068),
            CouplingConstantRunIIDecW2a = cms.vdouble(0.8861, 0.049, 0.008),
            CouplingConstantRunIIDecW2b = cms.vdouble(0.8943, 0.0483, 0.0046),
            CouplingConstantRunIIDecW3a = cms.vdouble(0.8984, 0.0494, 0.0014),
            CouplingConstantRunIIDecW3b = cms.vdouble(0.8611, 0.0573, 0.0121),
            CouplingConstantRunIIDecW4 = cms.vdouble(0.8881, 0.0544, 0.0015),
            CouplingConstantRunIIDecW5 = cms.vdouble(0.7997, 0.077, 0.0231),
            CouplingConstantRunIIDecW6 = cms.vdouble(0.8067, 0.0769, 0.0198),
            CouplingConstantRunIIDecW7 = cms.vdouble(0.7883, 0.0888, 0.0171),
            CouplingConstantsRunIIDecB = cms.bool(True),
            CouplingConstantsRunIIDecW = cms.bool(True),
            DeltaProductionCut = cms.double(0.120425),
            DepletionVoltage = cms.double(170.0),
            DigiModeList = cms.PSet(
                PRDigi = cms.string('ProcessedRaw'),
                SCDigi = cms.string('ScopeMode'),
                VRDigi = cms.string('VirginRaw'),
                ZSDigi = cms.string('ZeroSuppressed')
            ),
            FedAlgorithm = cms.int32(4),
            FedAlgorithm_PM = cms.int32(4),
            Gain = cms.string(''),
            GeometryType = cms.string('idealForDigi'),
            GevPerElectron = cms.double(3.61e-09),
            Inefficiency = cms.double(0.0),
            LandauFluctuations = cms.bool(True),
            LorentzAngle = cms.string(''),
            Noise = cms.bool(True),
            NoiseSigmaThreshold = cms.double(2.0),
            PedestalsOffset = cms.double(128),
            PreMixingMode = cms.bool(False),
            ROUList = cms.vstring(
                'TrackerHitsTIBLowTof',
                'TrackerHitsTIBHighTof',
                'TrackerHitsTIDLowTof',
                'TrackerHitsTIDHighTof',
                'TrackerHitsTOBLowTof',
                'TrackerHitsTOBHighTof',
                'TrackerHitsTECLowTof',
                'TrackerHitsTECHighTof'
            ),
            RealPedestals = cms.bool(True),
            SingleStripNoise = cms.bool(True),
            TOFCutForDeconvolution = cms.double(50.0),
            TOFCutForPeak = cms.double(100.0),
            Temperature = cms.double(273.0),
            TrackerConfigurationFromDB = cms.bool(False),
            ZeroSuppression = cms.bool(True),
            accumulatorType = cms.string('SiStripDigitizer'),
            apv_mVPerQ = cms.double(5.5),
            apv_maxResponse = cms.double(729),
            apv_rate = cms.double(66.2),
            apvfCPerElectron = cms.double(0.0001602),
            chargeDivisionsPerStrip = cms.int32(10),
            cmnRMStec = cms.double(2.44),
            cmnRMStib = cms.double(5.92),
            cmnRMStid = cms.double(3.08),
            cmnRMStob = cms.double(1.08),
            electronPerAdcDec = cms.double(247.0),
            electronPerAdcPeak = cms.double(262.0),
            fracOfEventsToSimAPV = cms.double(0.0),
            hitsProducer = cms.string('g4SimHits'),
            includeAPVSimulation = cms.bool(False),
            makeDigiSimLinks = cms.untracked.bool(True),
            noDiffusion = cms.bool(False)
        )
    ),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            crossingFrames = cms.untracked.vstring(),
            input = cms.VInputTag(
                cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","HcalHits"),
                cms.InputTag("g4SimHits","ZDCHITS")
            ),
            subdets = cms.vstring(
                'CastorFI',
                'EcalHitsEB',
                'EcalHitsEE',
                'EcalHitsES',
                'HcalHits',
                'ZDCHITS'
            ),
            type = cms.string('PCaloHit')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generatorSmeared"), cms.InputTag("generator")),
            makeCrossingFrame = cms.untracked.bool(True),
            type = cms.string('HepMCProduct')
        ),
        mixSH = cms.PSet(
            crossingFrames = cms.untracked.vstring(
                'MuonCSCHits',
                'MuonDTHits',
                'MuonRPCHits',
                'MuonGEMHits',
                'TotemHitsRP',
                'CTPPSPixelHits'
            ),
            input = cms.VInputTag(
                cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
                cms.InputTag("g4SimHits","MuonGEMHits"), cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","CTPPSPixelHits")
            ),
            pcrossingFrames = cms.untracked.vstring(),
            subdets = cms.vstring(
                'MuonCSCHits',
                'MuonDTHits',
                'MuonRPCHits',
                'TrackerHitsPixelBarrelHighTof',
                'TrackerHitsPixelBarrelLowTof',
                'TrackerHitsPixelEndcapHighTof',
                'TrackerHitsPixelEndcapLowTof',
                'TrackerHitsTECHighTof',
                'TrackerHitsTECLowTof',
                'TrackerHitsTIBHighTof',
                'TrackerHitsTIBLowTof',
                'TrackerHitsTIDHighTof',
                'TrackerHitsTIDLowTof',
                'TrackerHitsTOBHighTof',
                'TrackerHitsTOBLowTof',
                'MuonGEMHits',
                'TotemHitsRP',
                'CTPPSPixelHits'
            ),
            type = cms.string('PSimHit')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimTrack')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            makeCrossingFrame = cms.untracked.bool(False),
            type = cms.string('SimVertex')
        )
    ),
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),
    playback = cms.untracked.bool(False),
    useCurrentProcessOnly = cms.bool(False)
)


process.omtfStage2Raw = cms.EDProducer("OmtfPacker",
    cscInputLabel = cms.InputTag("simCscTriggerPrimitiveDigis"),
    dtPhInputLabel = cms.InputTag("simTwinMuxDigis"),
    dtThInputLabel = cms.InputTag("simTwinMuxDigis"),
    rpcInputLabel = cms.InputTag("simMuonRPCDigis")
)


process.phase2L1CaloEGammaEmulator = cms.EDProducer("Phase2L1CaloEGammaEmulator",
    calib = cms.PSet(
        etaBins = cms.vdouble(
            0.087, 0.174, 0.261, 0.348, 0.435,
            0.522, 0.609, 0.696, 0.783, 0.87,
            0.957, 1.044, 1.131, 1.218, 1.305,
            1.392, 1.479
        ),
        ptBins = cms.vdouble(
            12, 20, 30, 40, 55,
            90, 1000000
        ),
        scale = cms.vdouble(
            1.298, 1.287, 1.309, 1.298, 1.309,
            1.309, 1.309, 1.298, 1.309, 1.298,
            1.309, 1.309, 1.309, 1.32, 1.309,
            1.32, 1.309, 1.1742, 1.1639, 1.1639,
            1.1639, 1.1639, 1.1639, 1.1639, 1.1742,
            1.1742, 1.1639, 1.1639, 1.1742, 1.1639,
            1.1639, 1.1742, 1.1742, 1.1536000000000002, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.11, 1.11, 1.11, 1.11, 1.11,
            1.1, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.09, 1.09,
            1.09, 1.09, 1.09, 1.07, 1.07,
            1.07, 1.07, 1.07, 1.07, 1.07,
            1.08, 1.07, 1.07, 1.08, 1.08,
            1.07, 1.08, 1.08, 1.08, 1.08,
            1.06, 1.06, 1.06, 1.06, 1.05,
            1.05, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.06, 1.06, 1.06,
            1.06, 1.06, 1.04, 1.04, 1.04,
            1.04, 1.05, 1.04, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05, 1.05,
            1.05, 1.05, 1.05, 1.05
        )
    ),
    ecalTPEB = cms.InputTag("simEcalEBTriggerPrimitiveDigis"),
    hcalTP = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    mightGet = cms.optional.untracked.vstring
)


process.prunedDigiSimLinks = cms.EDProducer("DigiSimLinkPruner",
    mightGet = cms.optional.untracked.vstring,
    phase2OTSimLinkSrc = cms.optional.InputTag,
    pixelSimLinkSrc = cms.InputTag("simSiPixelDigis"),
    stripSimLinkSrc = cms.InputTag("simSiStripDigis"),
    trackingParticles = cms.InputTag("prunedTrackingParticles")
)


process.prunedTrackingParticles = cms.EDProducer("TrackingParticleSelectorByGen",
    genParticles = cms.InputTag("genParticles"),
    mightGet = cms.optional.untracked.vstring,
    select = cms.vstring(
        'drop  *',
        'keep++ (400 < abs(pdgId) < 600) || (4000 < abs(pdgId) < 6000)',
        'drop status != 1',
        'drop charge == 0'
    ),
    trackingParticles = cms.InputTag("mix","MergedTrackTruth")
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.rawDataCollector = cms.EDProducer("RawDataCollectorByLabel",
    RawCollectionList = cms.VInputTag(
        cms.InputTag("SiStripDigiToRaw"), cms.InputTag("castorRawData"), cms.InputTag("cscpacker","CSCRawData"), cms.InputTag("csctfpacker","CSCTFRawData"), cms.InputTag("dtpacker"),
        cms.InputTag("dttfpacker"), cms.InputTag("ecalPacker"), cms.InputTag("esDigiToRaw"), cms.InputTag("gctDigiToRaw"), cms.InputTag("hcalRawDataVME"),
        cms.InputTag("l1GtEvmPack"), cms.InputTag("l1GtPack"), cms.InputTag("rpcpacker"), cms.InputTag("siPixelRawData"), cms.InputTag("hcalRawDatauHTR"),
        cms.InputTag("gemPacker"), cms.InputTag("ctppsTotemRawData"), cms.InputTag("ctppsPixelRawData"), cms.InputTag("caloLayer1RawFed1354"), cms.InputTag("caloLayer1RawFed1356"),
        cms.InputTag("caloLayer1RawFed1358"), cms.InputTag("bmtfStage2Raw"), cms.InputTag("caloStage2Raw"), cms.InputTag("gmtStage2Raw"), cms.InputTag("gtStage2Raw")
    ),
    verbose = cms.untracked.int32(0)
)


process.rpcRecHits = cms.EDProducer("RPCRecHitProducer",
    deadSource = cms.string('File'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    maskSource = cms.string('File'),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    ),
    rpcDigiLabel = cms.InputTag("muonRPCDigis")
)


process.rpcRecHitsForEMTF = cms.EDProducer("RPCRecHitProducer",
    deadSource = cms.string('File'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    maskSource = cms.string('File'),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    ),
    rpcDigiLabel = cms.InputTag("simMuonRPCDigis")
)


process.rpcTriggerDigis = cms.EDProducer("RPCTrigger",
    RPCTriggerDebug = cms.untracked.int32(0),
    label = cms.string('muonRPCDigis')
)


process.rpcpacker = cms.EDProducer("RPCPackingModule",
    InputLabel = cms.InputTag("simMuonRPCDigis")
)


process.siPixelRawData = cms.EDProducer("SiPixelDigiToRaw",
    InputLabel = cms.InputTag("simSiPixelDigis"),
    UsePhase1 = cms.bool(True)
)


process.simBmtfDigis = cms.EDProducer("L1TMuonBarrelTrackProducer",
    DTDigi_Source = cms.InputTag("simTwinMuxDigis"),
    DTDigi_Theta_Source = cms.InputTag("simTwinMuxDigis"),
    Debug = cms.untracked.int32(0)
)


process.simBscDigis = cms.EDProducer("BSCTrigger",
    bitNames = cms.vstring(
        'L1Tech_BSC_minBias_inner_threshold1',
        'L1Tech_BSC_minBias_inner_threshold2',
        'L1Tech_BSC_minBias_OR',
        'L1Tech_BSC_HighMultiplicity',
        'L1Tech_BSC_halo_beam2_inner',
        'L1Tech_BSC_halo_beam2_outer',
        'L1Tech_BSC_halo_beam1_inner',
        'L1Tech_BSC_halo_beam1_outer',
        'L1Tech_BSC_minBias_threshold1',
        'L1Tech_BSC_minBias_threshold2',
        'L1Tech_BSC_splash_beam1',
        'L1Tech_BSC_splash_beam2'
    ),
    bitNumbers = cms.vuint32(
        32, 33, 34, 35, 36,
        37, 38, 39, 40, 41,
        42, 43
    ),
    coincidence = cms.double(72.85),
    resolution = cms.double(3.0),
    theHits = cms.InputTag("mix","g4SimHitsBSCHits")
)


process.simCaloStage1Digis = cms.EDProducer("L1TStage1Layer2Producer",
    CaloEmCands = cms.InputTag("simRctUpgradeFormatDigis"),
    CaloRegions = cms.InputTag("simRctUpgradeFormatDigis"),
    conditionsLabel = cms.string('')
)


process.simCaloStage1FinalDigis = cms.EDProducer("L1TPhysicalEtAdder",
    InputCollection = cms.InputTag("simCaloStage1Digis"),
    InputHFCountsCollection = cms.InputTag("simCaloStage1Digis","HFBitCounts"),
    InputHFSumsCollection = cms.InputTag("simCaloStage1Digis","HFRingSums"),
    InputIsoTauCollection = cms.InputTag("simCaloStage1Digis","isoTaus"),
    InputPreGtJetCollection = cms.InputTag("simCaloStage1Digis","preGtJets"),
    InputRlxTauCollection = cms.InputTag("simCaloStage1Digis","rlxTaus")
)


process.simCaloStage1LegacyFormatDigis = cms.EDProducer("L1TCaloUpgradeToGCTConverter",
    InputCollection = cms.InputTag("simCaloStage1FinalDigis"),
    InputHFCountsCollection = cms.InputTag("simCaloStage1Digis","HFBitCounts"),
    InputHFSumsCollection = cms.InputTag("simCaloStage1Digis","HFRingSums"),
    InputIsoTauCollection = cms.InputTag("simCaloStage1Digis","isoTaus"),
    InputRlxTauCollection = cms.InputTag("simCaloStage1Digis","rlxTaus")
)


process.simCaloStage2Digis = cms.EDProducer("L1TStage2Layer2Producer",
    firmware = cms.int32(1),
    towerToken = cms.InputTag("simCaloStage2Layer1Digis"),
    useStaticConfig = cms.bool(False)
)


process.simCaloStage2Layer1Digis = cms.EDProducer("L1TCaloLayer1",
    ecalToken = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    firmwareVersion = cms.int32(3),
    hcalToken = cms.InputTag("simHcalTriggerPrimitiveDigis"),
    unpackEcalMask = cms.bool(False),
    unpackHcalMask = cms.bool(False),
    useCalib = cms.bool(True),
    useECALLUT = cms.bool(True),
    useHCALFBLUT = cms.bool(False),
    useHCALLUT = cms.bool(True),
    useHFLUT = cms.bool(True),
    useLSB = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.simCaloStage2Layer1Summary = cms.EDProducer("L1TCaloSummary_CICADA_vXp1p2",
    CICADAModelVersion = cms.string('CICADAModel_v2p1p2'),
    backupRegionToken = cms.InputTag("simCaloStage2Layer1Digis"),
    boostedJetPtFactor = cms.double(1.5),
    caloLayer1Regions = cms.InputTag("simCaloStage2Layer1Digis"),
    caloScaleFactor = cms.double(0.5),
    eGammaIsolationFactor = cms.double(0.3),
    eGammaSeed = cms.uint32(5),
    firmwareVersion = cms.int32(1),
    jetSeed = cms.uint32(10),
    nPumBins = cms.uint32(18),
    pumLUT00n = cms.vdouble(
        0.43, 0.32, 0.29, 0.36, 0.33,
        0.25, 0.25, 0.25, 0.25, 0.25,
        0.25, 0.25, 0.25
    ),
    pumLUT00p = cms.vdouble(
        0.45, 0.32, 0.29, 0.35, 0.31,
        0.25, 0.25, 0.25, 0.25, 0.25,
        0.25, 0.25, 0.25
    ),
    pumLUT01n = cms.vdouble(
        0.6, 0.39, 0.33, 0.44, 0.39,
        0.26, 0.27, 0.26, 0.26, 0.25,
        0.25, 0.25, 0.25
    ),
    pumLUT01p = cms.vdouble(
        0.6, 0.39, 0.33, 0.41, 0.35,
        0.26, 0.27, 0.26, 0.26, 0.25,
        0.25, 0.25, 0.25
    ),
    pumLUT02n = cms.vdouble(
        0.76, 0.52, 0.46, 0.57, 0.52,
        0.33, 0.41, 0.34, 0.31, 0.29,
        0.27, 0.26, 0.25
    ),
    pumLUT02p = cms.vdouble(
        0.75, 0.52, 0.46, 0.55, 0.48,
        0.34, 0.42, 0.34, 0.31, 0.29,
        0.27, 0.26, 0.25
    ),
    pumLUT03n = cms.vdouble(
        0.9, 0.63, 0.56, 0.69, 0.62,
        0.39, 0.58, 0.41, 0.37, 0.33,
        0.29, 0.27, 0.25
    ),
    pumLUT03p = cms.vdouble(
        0.9, 0.64, 0.56, 0.66, 0.57,
        0.39, 0.58, 0.41, 0.37, 0.33,
        0.29, 0.26, 0.25
    ),
    pumLUT04n = cms.vdouble(
        1.03, 0.74, 0.66, 0.8, 0.72,
        0.45, 0.8, 0.5, 0.45, 0.39,
        0.32, 0.28, 0.25
    ),
    pumLUT04p = cms.vdouble(
        1.03, 0.76, 0.67, 0.77, 0.67,
        0.46, 0.81, 0.5, 0.45, 0.39,
        0.32, 0.27, 0.25
    ),
    pumLUT05n = cms.vdouble(
        1.17, 0.86, 0.77, 0.92, 0.83,
        0.53, 1.09, 0.6, 0.55, 0.47,
        0.37, 0.29, 0.26
    ),
    pumLUT05p = cms.vdouble(
        1.18, 0.88, 0.77, 0.89, 0.77,
        0.54, 1.1, 0.61, 0.55, 0.47,
        0.35, 0.29, 0.26
    ),
    pumLUT06n = cms.vdouble(
        1.32, 0.98, 0.88, 1.04, 0.93,
        0.61, 1.44, 0.72, 0.66, 0.57,
        0.42, 0.31, 0.26
    ),
    pumLUT06p = cms.vdouble(
        1.32, 1.0, 0.89, 1.01, 0.88,
        0.63, 1.46, 0.73, 0.67, 0.57,
        0.41, 0.3, 0.26
    ),
    pumLUT07n = cms.vdouble(
        1.47, 1.11, 1.01, 1.17, 1.05,
        0.71, 1.86, 0.86, 0.81, 0.69,
        0.5, 0.34, 0.27
    ),
    pumLUT07p = cms.vdouble(
        1.48, 1.14, 1.01, 1.13, 0.99,
        0.73, 1.89, 0.87, 0.82, 0.7,
        0.47, 0.33, 0.27
    ),
    pumLUT08n = cms.vdouble(
        1.63, 1.26, 1.14, 1.3, 1.17,
        0.82, 2.37, 1.02, 0.98, 0.85,
        0.59, 0.37, 0.28
    ),
    pumLUT08p = cms.vdouble(
        1.64, 1.28, 1.15, 1.26, 1.11,
        0.85, 2.41, 1.03, 0.99, 0.86,
        0.56, 0.36, 0.28
    ),
    pumLUT09n = cms.vdouble(
        1.81, 1.41, 1.28, 1.45, 1.31,
        0.95, 2.98, 1.2, 1.18, 1.03,
        0.71, 0.42, 0.3
    ),
    pumLUT09p = cms.vdouble(
        1.82, 1.45, 1.29, 1.41, 1.24,
        0.98, 3.02, 1.21, 1.19, 1.05,
        0.67, 0.4, 0.29
    ),
    pumLUT10n = cms.vdouble(
        2.01, 1.58, 1.43, 1.62, 1.45,
        1.1, 3.7, 1.41, 1.42, 1.26,
        0.87, 0.48, 0.32
    ),
    pumLUT10p = cms.vdouble(
        2.02, 1.61, 1.46, 1.58, 1.38,
        1.13, 3.73, 1.42, 1.43, 1.27,
        0.82, 0.46, 0.31
    ),
    pumLUT11n = cms.vdouble(
        2.24, 1.78, 1.61, 1.78, 1.6,
        1.27, 4.55, 1.64, 1.71, 1.55,
        1.08, 0.57, 0.36
    ),
    pumLUT11p = cms.vdouble(
        2.21, 1.82, 1.63, 1.75, 1.53,
        1.31, 4.67, 1.67, 1.71, 1.57,
        1.01, 0.54, 0.36
    ),
    pumLUT12n = cms.vdouble(
        2.5, 2.0, 1.82, 1.91, 1.81,
        1.56, 5.56, 1.85, 2.01, 1.87,
        1.31, 0.68, 0.42
    ),
    pumLUT12p = cms.vdouble(
        2.44, 2.02, 1.9, 2.01, 1.7,
        1.51, 5.61, 1.96, 2.04, 1.8,
        1.24, 0.65, 0.43
    ),
    pumLUT13n = cms.vdouble(
        2.96, 2.4, 2.14, 2.41, 2.01,
        1.76, 8.05, 2.41, 2.43, 2.17,
        1.67, 0.9, 0.59
    ),
    pumLUT13p = cms.vdouble(
        3.28, 2.64, 2.26, 2.23, 1.97,
        1.89, 7.61, 2.27, 2.33, 2.26,
        1.44, 0.79, 0.52
    ),
    pumLUT14n = cms.vdouble(
        2.96, 2.4, 2.14, 2.41, 2.01,
        1.76, 8.05, 2.41, 2.43, 2.17,
        1.67, 0.9, 0.59
    ),
    pumLUT14p = cms.vdouble(
        3.28, 2.64, 2.26, 2.23, 1.97,
        1.89, 7.61, 2.27, 2.33, 2.26,
        1.44, 0.79, 0.52
    ),
    pumLUT15n = cms.vdouble(
        2.96, 2.4, 2.14, 2.41, 2.01,
        1.76, 8.05, 2.41, 2.43, 2.17,
        1.67, 0.9, 0.59
    ),
    pumLUT15p = cms.vdouble(
        3.28, 2.64, 2.26, 2.23, 1.97,
        1.89, 7.61, 2.27, 2.33, 2.26,
        1.44, 0.79, 0.52
    ),
    pumLUT16n = cms.vdouble(
        2.96, 2.4, 2.14, 2.41, 2.01,
        1.76, 8.05, 2.41, 2.43, 2.17,
        1.67, 0.9, 0.59
    ),
    pumLUT16p = cms.vdouble(
        3.28, 2.64, 2.26, 2.23, 1.97,
        1.89, 7.61, 2.27, 2.33, 2.26,
        1.44, 0.79, 0.52
    ),
    pumLUT17n = cms.vdouble(
        2.96, 2.4, 2.14, 2.41, 2.01,
        1.76, 8.05, 2.41, 2.43, 2.17,
        1.67, 0.9, 0.59
    ),
    pumLUT17p = cms.vdouble(
        3.28, 2.64, 2.26, 2.23, 1.97,
        1.89, 7.61, 2.27, 2.33, 2.26,
        1.44, 0.79, 0.52
    ),
    tauIsolationFactor = cms.double(0.3),
    tauSeed = cms.uint32(10),
    testPatterns = cms.VPSet(
        cms.PSet(
            iPhi_1 = cms.vuint32(
                0, 0, 1, 0, 1,
                0, 2, 3, 0, 0,
                0, 3, 6, 0
            ),
            iPhi_10 = cms.vuint32(
                0, 0, 1, 0, 12,
                2, 0, 0, 0, 1,
                0, 1, 0, 2
            ),
            iPhi_11 = cms.vuint32(
                5, 0, 0, 1, 0,
                0, 1, 4, 2, 0,
                15, 0, 0, 212
            ),
            iPhi_12 = cms.vuint32(
                4, 0, 2, 0, 2,
                1, 1, 4, 1, 0,
                2, 3, 0, 0
            ),
            iPhi_13 = cms.vuint32(
                0, 4, 1, 2, 182,
                0, 2, 2, 0, 0,
                0, 1, 1, 0
            ),
            iPhi_14 = cms.vuint32(
                0, 10, 0, 0, 0,
                0, 1, 1, 1, 0,
                1, 0, 0, 2
            ),
            iPhi_15 = cms.vuint32(
                6, 1, 0, 1, 0,
                1, 0, 0, 0, 1,
                0, 0, 1, 12
            ),
            iPhi_16 = cms.vuint32(
                0, 0, 0, 1, 0,
                1, 0, 0, 3, 1,
                0, 0, 0, 1
            ),
            iPhi_17 = cms.vuint32(
                0, 0, 0, 0, 0,
                2, 0, 4, 2, 0,
                3, 0, 0, 2
            ),
            iPhi_18 = cms.vuint32(
                2, 0, 0, 0, 0,
                1, 0, 4, 0, 2,
                4, 5, 0, 0
            ),
            iPhi_2 = cms.vuint32(
                2, 1, 0, 0, 0,
                1, 1, 1, 0, 0,
                1, 0, 0, 2
            ),
            iPhi_3 = cms.vuint32(
                0, 0, 0, 0, 0,
                1, 0, 0, 5, 0,
                0, 0, 0, 1
            ),
            iPhi_4 = cms.vuint32(
                0, 1, 0, 0, 0,
                1, 0, 0, 31, 1,
                8, 7, 2, 8
            ),
            iPhi_5 = cms.vuint32(
                1, 0, 1, 0, 0,
                1, 0, 1, 2, 4,
                0, 0, 0, 0
            ),
            iPhi_6 = cms.vuint32(
                0, 0, 0, 0, 4,
                0, 0, 1, 0, 0,
                0, 0, 0, 6
            ),
            iPhi_7 = cms.vuint32(
                0, 3, 1, 2, 1,
                5, 1, 0, 0, 0,
                0, 0, 1, 1
            ),
            iPhi_8 = cms.vuint32(
                0, 0, 3, 2, 0,
                2, 3, 3, 8, 10,
                1, 2, 0, 27
            ),
            iPhi_9 = cms.vuint32(
                6, 0, 0, 2, 0,
                0, 2, 0, 0, 0,
                1, 0, 0, 1
            )
        ),
        cms.PSet(
            iPhi_1 = cms.vuint32(
                3, 5, 6, 2, 1,
                0, 9, 0, 1, 1,
                2, 1, 1, 5
            ),
            iPhi_10 = cms.vuint32(
                10, 0, 2, 0, 3,
                0, 1, 2, 12, 0,
                20, 4, 0, 7
            ),
            iPhi_11 = cms.vuint32(
                16, 2, 4, 1, 0,
                2, 3, 15, 4, 1,
                0, 6, 5, 5
            ),
            iPhi_12 = cms.vuint32(
                3, 0, 1, 0, 1,
                1, 4, 2, 9, 115,
                38, 2, 3, 1
            ),
            iPhi_13 = cms.vuint32(
                10, 3, 10, 15, 2,
                0, 8, 8, 0, 2,
                2, 0, 1, 8
            ),
            iPhi_14 = cms.vuint32(
                4, 0, 0, 0, 1,
                4, 0, 1, 1, 1,
                1, 1, 0, 2
            ),
            iPhi_15 = cms.vuint32(
                11, 1, 1, 2, 1,
                3, 5, 4, 4, 2,
                0, 1, 0, 13
            ),
            iPhi_16 = cms.vuint32(
                6, 1, 1, 1, 0,
                1, 3, 2, 1, 10,
                3, 0, 0, 15
            ),
            iPhi_17 = cms.vuint32(
                4, 0, 0, 1, 2,
                1, 1, 2, 0, 1,
                0, 1, 0, 3
            ),
            iPhi_18 = cms.vuint32(
                5, 0, 0, 0, 4,
                1, 0, 2, 5, 31,
                0, 1, 1, 5
            ),
            iPhi_2 = cms.vuint32(
                4, 2, 1, 0, 5,
                0, 0, 2, 4, 11,
                10, 1, 1, 12
            ),
            iPhi_3 = cms.vuint32(
                5, 0, 0, 2, 1,
                2, 1, 1, 19, 20,
                237, 0, 2, 2
            ),
            iPhi_4 = cms.vuint32(
                5, 1, 0, 3, 2,
                1, 2, 3, 3, 1,
                2, 1, 1, 7
            ),
            iPhi_5 = cms.vuint32(
                1, 1, 1, 2, 0,
                0, 0, 3, 5, 2,
                1, 1, 3, 14
            ),
            iPhi_6 = cms.vuint32(
                4, 0, 2, 2, 0,
                0, 0, 2, 1, 3,
                3, 1, 0, 3
            ),
            iPhi_7 = cms.vuint32(
                1, 4, 62, 6, 0,
                1, 10, 2, 2, 5,
                1, 1, 0, 7
            ),
            iPhi_8 = cms.vuint32(
                13, 1, 0, 2, 1,
                5, 1, 3, 1, 0,
                1, 0, 4, 2
            ),
            iPhi_9 = cms.vuint32(
                4, 1, 2, 1, 6,
                2, 6, 0, 2, 2,
                1, 0, 0, 6
            )
        ),
        cms.PSet(
            iPhi_1 = cms.vuint32(
                4, 2, 2, 0, 0,
                0, 4, 6, 1, 0,
                0, 2, 2, 7
            ),
            iPhi_10 = cms.vuint32(
                27, 2, 0, 0, 0,
                2, 3, 1, 3, 0,
                0, 2, 0, 0
            ),
            iPhi_11 = cms.vuint32(
                8, 2, 3, 5, 5,
                1, 1, 0, 4, 2,
                2, 0, 0, 5
            ),
            iPhi_12 = cms.vuint32(
                6, 6, 1, 0, 0,
                2, 0, 3, 1, 3,
                2, 1, 0, 2
            ),
            iPhi_13 = cms.vuint32(
                0, 2, 2, 1, 0,
                0, 7, 6, 0, 0,
                0, 0, 1, 352
            ),
            iPhi_14 = cms.vuint32(
                8, 0, 0, 1, 1,
                1, 2, 2, 1, 4,
                0, 0, 0, 2
            ),
            iPhi_15 = cms.vuint32(
                3, 0, 0, 0, 1,
                3, 3, 3, 0, 1,
                0, 0, 0, 2
            ),
            iPhi_16 = cms.vuint32(
                3, 166, 0, 4, 0,
                2, 3, 1, 1, 1,
                0, 0, 0, 6
            ),
            iPhi_17 = cms.vuint32(
                2, 2, 1, 0, 0,
                0, 0, 2, 5, 0,
                0, 0, 0, 2
            ),
            iPhi_18 = cms.vuint32(
                6, 3, 0, 2, 0,
                4, 7, 1, 4, 4,
                0, 0, 1, 2
            ),
            iPhi_2 = cms.vuint32(
                2, 2, 0, 1, 1,
                1, 0, 0, 1, 2,
                2, 1, 0, 0
            ),
            iPhi_3 = cms.vuint32(
                0, 0, 0, 1, 52,
                0, 3, 2, 7, 2,
                0, 0, 1, 4
            ),
            iPhi_4 = cms.vuint32(
                4, 0, 0, 0, 51,
                6, 53, 4, 1, 0,
                0, 0, 0, 0
            ),
            iPhi_5 = cms.vuint32(
                10, 0, 0, 0, 1,
                1, 4, 1, 0, 0,
                0, 0, 0, 8
            ),
            iPhi_6 = cms.vuint32(
                2, 0, 2, 0, 1,
                5, 1, 3, 4, 0,
                1, 0, 1, 14
            ),
            iPhi_7 = cms.vuint32(
                1, 0, 1, 1, 0,
                0, 8, 9, 2, 3,
                0, 1, 0, 3
            ),
            iPhi_8 = cms.vuint32(
                4, 0, 23, 62, 31,
                0, 5, 3, 3, 1,
                0, 0, 0, 4
            ),
            iPhi_9 = cms.vuint32(
                100, 3, 10, 5, 0,
                2, 0, 2, 1, 2,
                0, 0, 0, 0
            )
        )
    ),
    useTestPatterns = cms.bool(False),
    verbose = cms.bool(False)
)


process.simCastorTechTrigDigis = cms.EDProducer("CastorTTRecord",
    CastorDigiCollection = cms.InputTag("simCastorDigis"),
    CastorSignalTS = cms.uint32(4),
    TriggerBitNames = cms.vstring(
        'L1Tech_CASTOR_0.v0',
        'L1Tech_CASTOR_TotalEnergy.v0',
        'L1Tech_CASTOR_EM.v0',
        'L1Tech_CASTOR_HaloMuon.v0'
    ),
    TriggerThresholds = cms.vdouble(
        50, 48000, 1500, 100, 50,
        65000
    ),
    ttpBits = cms.vuint32(60, 61, 62, 63)
)


process.simCscTriggerPrimitiveDigis = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    GEMPadDigiClusterProducer = cms.InputTag("simMuonGEMPadDigiClusters"),
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    alctPhase1 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctPhase2 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    alctPhase2GEM = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctPhase1 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        useDeadTimeZoning = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    clctPhase2 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    clctPhase2GEM = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        enableAlctPhase2 = cms.bool(False),
        gangedME1a = cms.bool(False),
        run3 = cms.bool(True),
        runCCLUT_OTMB = cms.bool(True),
        runCCLUT_TMB = cms.bool(False),
        runME11ILT = cms.bool(True),
        runME11Up = cms.bool(True),
        runME21ILT = cms.bool(False),
        runME21Up = cms.bool(True),
        runME31Up = cms.bool(True),
        runME41Up = cms.bool(True),
        runPhase2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    copadParamGE11 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    copadParamGE21 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    debugParameters = cms.bool(True),
    keepALCTPreTriggers = cms.bool(False),
    keepCLCTPreTriggers = cms.bool(True),
    keepShowers = cms.bool(True),
    mpcParam = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        maxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    selectedChambers = cms.vstring(),
    showerParam = cms.PSet(
        anodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            showerNumTBins = cms.uint32(1),
            showerThresholds = cms.vuint32(
                140, 140, 140, 140, 140,
                140, 7, 14, 18, 23,
                56, 58, 12, 28, 32,
                21, 55, 57, 12, 26,
                34, 25, 62, 64, 12,
                27, 31
            )
        ),
        cathodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            peakCheck = cms.bool(False),
            showerNumTBins = cms.uint32(3),
            showerThresholds = cms.vuint32(
                100, 100, 100, 10000, 10000,
                10000, 10000, 10000, 10000, 14,
                33, 35, 10000, 10000, 10000,
                12, 31, 33, 10000, 10000,
                10000, 14, 34, 36, 10000,
                10000, 10000
            )
        ),
        source = cms.vuint32(
            3, 1, 1, 3, 1,
            3, 1, 3, 1
        )
    ),
    tmbPhase1 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2GE11 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    ),
    tmbPhase2GE21 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    )
)


process.simCscTriggerPrimitiveDigisForEMTF = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    GEMPadDigiClusterProducer = cms.InputTag("simMuonGEMPadDigiClusters"),
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    alctPhase1 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctPhase2 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    alctPhase2GEM = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctPhase1 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        useDeadTimeZoning = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    clctPhase2 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    clctPhase2GEM = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        GEMPadDigiClusterProducer = cms.InputTag(""),
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        enableAlctPhase2 = cms.bool(False),
        gangedME1a = cms.bool(False),
        run3 = cms.bool(True),
        runCCLUT_OTMB = cms.bool(True),
        runCCLUT_TMB = cms.bool(False),
        runME11ILT = cms.bool(False),
        runME11Up = cms.bool(True),
        runME21ILT = cms.bool(False),
        runME21Up = cms.bool(True),
        runME31Up = cms.bool(True),
        runME41Up = cms.bool(True),
        runPhase2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    copadParamGE11 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    copadParamGE21 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    debugParameters = cms.bool(True),
    keepALCTPreTriggers = cms.bool(False),
    keepCLCTPreTriggers = cms.bool(True),
    keepShowers = cms.bool(True),
    mpcParam = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        maxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    selectedChambers = cms.vstring(),
    showerParam = cms.PSet(
        anodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            showerNumTBins = cms.uint32(1),
            showerThresholds = cms.vuint32(
                140, 140, 140, 140, 140,
                140, 7, 14, 18, 23,
                56, 58, 12, 28, 32,
                21, 55, 57, 12, 26,
                34, 25, 62, 64, 12,
                27, 31
            )
        ),
        cathodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            peakCheck = cms.bool(False),
            showerNumTBins = cms.uint32(3),
            showerThresholds = cms.vuint32(
                100, 100, 100, 10000, 10000,
                10000, 10000, 10000, 10000, 14,
                33, 35, 10000, 10000, 10000,
                12, 31, 33, 10000, 10000,
                10000, 14, 34, 36, 10000,
                10000, 10000
            )
        ),
        source = cms.vuint32(
            3, 1, 1, 3, 1,
            3, 1, 3, 1
        )
    ),
    tmbPhase1 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2GE11 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    ),
    tmbPhase2GE21 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    )
)


process.simCscTriggerPrimitiveDigisPhase2 = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    GEMPadDigiClusterProducer = cms.InputTag("simMuonGEMPadDigiClusters"),
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    alctPhase1 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctPhase2 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    alctPhase2GEM = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctPhase1 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        useDeadTimeZoning = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    clctPhase2 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    clctPhase2GEM = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        enableAlctPhase2 = cms.bool(False),
        gangedME1a = cms.bool(False),
        run3 = cms.bool(True),
        runCCLUT_OTMB = cms.bool(True),
        runCCLUT_TMB = cms.bool(True),
        runME11ILT = cms.bool(True),
        runME11Up = cms.bool(True),
        runME21ILT = cms.bool(False),
        runME21Up = cms.bool(True),
        runME31Up = cms.bool(True),
        runME41Up = cms.bool(True),
        runPhase2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    copadParamGE11 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    copadParamGE21 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    debugParameters = cms.bool(True),
    keepALCTPreTriggers = cms.bool(False),
    keepCLCTPreTriggers = cms.bool(True),
    keepShowers = cms.bool(True),
    mpcParam = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        maxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    selectedChambers = cms.vstring(),
    showerParam = cms.PSet(
        anodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            showerNumTBins = cms.uint32(1),
            showerThresholds = cms.vuint32(
                140, 140, 140, 140, 140,
                140, 7, 14, 18, 23,
                56, 58, 12, 28, 32,
                21, 55, 57, 12, 26,
                34, 25, 62, 64, 12,
                27, 31
            )
        ),
        cathodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            peakCheck = cms.bool(False),
            showerNumTBins = cms.uint32(3),
            showerThresholds = cms.vuint32(
                100, 100, 100, 10000, 10000,
                10000, 10000, 10000, 10000, 14,
                33, 35, 10000, 10000, 10000,
                12, 31, 33, 10000, 10000,
                10000, 14, 34, 36, 10000,
                10000, 10000
            )
        ),
        source = cms.vuint32(
            3, 1, 1, 3, 1,
            3, 1, 3, 1
        )
    ),
    tmbPhase1 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2GE11 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    ),
    tmbPhase2GE21 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    )
)


process.simCscTriggerPrimitiveDigisRun3 = cms.EDProducer("CSCTriggerPrimitivesProducer",
    CSCComparatorDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCWireDigiProducer = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    GEMPadDigiClusterProducer = cms.InputTag("simMuonGEMPadDigiClusters"),
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    alctPhase1 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(4),
        alctGhostCancellationSideQuality = cms.bool(False),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(False),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(4),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    alctPhase2 = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    alctPhase2GEM = cms.PSet(
        alctAccelMode = cms.uint32(0),
        alctDriftDelay = cms.uint32(2),
        alctEarlyTbins = cms.int32(4),
        alctFifoPretrig = cms.uint32(10),
        alctFifoTbins = cms.uint32(16),
        alctGhostCancellationBxDepth = cms.int32(1),
        alctGhostCancellationSideQuality = cms.bool(True),
        alctHitPersist = cms.uint32(6),
        alctL1aWindowWidth = cms.uint32(7),
        alctNarrowMaskForR1 = cms.bool(True),
        alctNplanesHitAccelPattern = cms.uint32(4),
        alctNplanesHitAccelPretrig = cms.uint32(3),
        alctNplanesHitPattern = cms.uint32(4),
        alctNplanesHitPretrig = cms.uint32(3),
        alctPretrigDeadtime = cms.uint32(0),
        alctTrigMode = cms.uint32(2),
        alctUseCorrectedBx = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    checkBadChambers = cms.bool(False),
    clctPhase1 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(10),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctStartBxShift = cms.int32(0),
        useDeadTimeZoning = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    clctPhase2 = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    clctPhase2GEM = cms.PSet(
        clctDriftDelay = cms.uint32(2),
        clctFifoPretrig = cms.uint32(7),
        clctFifoTbins = cms.uint32(12),
        clctHitPersist = cms.uint32(4),
        clctLocalShowerThresh = cms.int32(12),
        clctLocalShowerZone = cms.int32(25),
        clctMinSeparation = cms.uint32(5),
        clctNplanesHitPattern = cms.uint32(4),
        clctNplanesHitPretrig = cms.uint32(3),
        clctPidThreshPretrig = cms.uint32(2),
        clctPretriggerTriggerZone = cms.uint32(5),
        clctStartBxShift = cms.int32(0),
        clctStateMachineZone = cms.uint32(5),
        useDeadTimeZoning = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    commonParam = cms.PSet(
        disableME1a = cms.bool(False),
        disableME42 = cms.bool(False),
        enableAlctPhase2 = cms.bool(False),
        gangedME1a = cms.bool(False),
        run3 = cms.bool(True),
        runCCLUT_OTMB = cms.bool(True),
        runCCLUT_TMB = cms.bool(False),
        runME11ILT = cms.bool(True),
        runME11Up = cms.bool(True),
        runME21ILT = cms.bool(False),
        runME21Up = cms.bool(True),
        runME31Up = cms.bool(True),
        runME41Up = cms.bool(True),
        runPhase2 = cms.bool(True),
        verbosity = cms.int32(0)
    ),
    copadParamGE11 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    copadParamGE21 = cms.PSet(
        maxDeltaBX = cms.uint32(0),
        maxDeltaPad = cms.uint32(8),
        maxDeltaRoll = cms.uint32(1),
        verbosity = cms.uint32(0)
    ),
    debugParameters = cms.bool(True),
    keepALCTPreTriggers = cms.bool(False),
    keepCLCTPreTriggers = cms.bool(True),
    keepShowers = cms.bool(True),
    mpcParam = cms.PSet(
        dropInvalidStubs = cms.bool(False),
        dropLowQualityStubs = cms.bool(False),
        maxStubs = cms.uint32(18),
        sortStubs = cms.bool(False)
    ),
    selectedChambers = cms.vstring(),
    showerParam = cms.PSet(
        anodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            showerNumTBins = cms.uint32(1),
            showerThresholds = cms.vuint32(
                140, 140, 140, 140, 140,
                140, 7, 14, 18, 23,
                56, 58, 12, 28, 32,
                21, 55, 57, 12, 26,
                34, 25, 62, 64, 12,
                27, 31
            )
        ),
        cathodeShower = cms.PSet(
            minLayersCentralTBin = cms.uint32(5),
            peakCheck = cms.bool(False),
            showerNumTBins = cms.uint32(3),
            showerThresholds = cms.vuint32(
                100, 100, 100, 10000, 10000,
                10000, 10000, 10000, 10000, 14,
                33, 35, 10000, 10000, 10000,
                12, 31, 33, 10000, 10000,
                10000, 14, 34, 36, 10000,
                10000, 10000
            )
        ),
        source = cms.vuint32(
            3, 1, 1, 3, 1,
            3, 1, 3, 1
        )
    ),
    tmbPhase1 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2 = cms.PSet(
        alctTrigEnable = cms.uint32(0),
        clctTrigEnable = cms.uint32(0),
        ignoreAlctCrossClct = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0)
    ),
    tmbPhase2GE11 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    ),
    tmbPhase2GE21 = cms.PSet(
        BunchCrossingCSCminGEMwindow = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        alctTrigEnable = cms.uint32(0),
        assignGEMCSCBending = cms.bool(True),
        buildLCTfromALCTandGEM = cms.bool(True),
        buildLCTfromCLCTandGEM = cms.bool(False),
        clctTrigEnable = cms.uint32(0),
        delayGEMinOTMB = cms.uint32(0),
        dropLowQualityALCTs = cms.bool(True),
        dropLowQualityCLCTs = cms.bool(True),
        dropLowQualityCLCTs_ME1a = cms.bool(True),
        enableMatchGEMandME1a = cms.bool(True),
        enableMatchGEMandME1b = cms.bool(True),
        ignoreAlctCrossClct = cms.bool(True),
        matchCLCTpropagation = cms.bool(True),
        matchEarliestClctOnly = cms.bool(True),
        matchTrigEnable = cms.uint32(1),
        matchTrigWindowSize = cms.uint32(7),
        maxDeltaHsEven = cms.uint32(5),
        maxDeltaHsOdd = cms.uint32(10),
        maxDeltaWG = cms.uint32(7),
        mitigateSlopeByCosi = cms.bool(False),
        mpcBlockMe1a = cms.uint32(0),
        preferredBxMatch = cms.vint32(
            0, -1, 1, -2, 2,
            -3, 3
        ),
        sortClctBx = cms.bool(True),
        tmbDropUsedClcts = cms.bool(False),
        tmbEarlyTbins = cms.int32(4),
        tmbL1aWindowSize = cms.uint32(7),
        tmbReadoutEarliest2 = cms.bool(True),
        useHighMultiplicityBits = cms.bool(False),
        verbosity = cms.int32(0),
        windowBXALCTGEM = cms.uint32(3),
        windowBXCLCTGEM = cms.uint32(7)
    )
)


process.simCsctfDigis = cms.EDProducer("CSCTFCandidateProducer",
    CSCTrackProducer = cms.untracked.InputTag("simCsctfTrackDigis"),
    MuonSorter = cms.PSet(
        MaxBX = cms.int32(11),
        MinBX = cms.int32(5)
    )
)


process.simCsctfTrackDigis = cms.EDProducer("CSCTFTrackProducer",
    DTproducer = cms.untracked.InputTag("simDtTriggerPrimitiveDigis"),
    DtDirectProd = cms.untracked.InputTag("csctfunpacker","DT"),
    SectorProcessor = cms.PSet(
        AllowALCTonly = cms.bool(False),
        AllowCLCTonly = cms.bool(False),
        BXAdepth = cms.uint32(2),
        CoreLatency = cms.uint32(7),
        EtaMax = cms.vuint32(
            127, 127, 127, 127, 127,
            24, 24, 127
        ),
        EtaMin = cms.vuint32(
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        EtaWindows = cms.vuint32(
            4, 4, 6, 6, 6,
            6, 6
        ),
        MaxBX = cms.int32(11),
        MinBX = cms.int32(5),
        PTLUT = cms.PSet(
            LowQualityFlag = cms.untracked.uint32(4),
            PtMethod = cms.untracked.uint32(34),
            ReadPtLUT = cms.bool(False)
        ),
        PreTrigger = cms.uint32(2),
        QualityEnableME1a = cms.uint32(65535),
        QualityEnableME1b = cms.uint32(65535),
        QualityEnableME1c = cms.uint32(65535),
        QualityEnableME1d = cms.uint32(65535),
        QualityEnableME1e = cms.uint32(65535),
        QualityEnableME1f = cms.uint32(65535),
        QualityEnableME2a = cms.uint32(65535),
        QualityEnableME2b = cms.uint32(65535),
        QualityEnableME2c = cms.uint32(65535),
        QualityEnableME3a = cms.uint32(65535),
        QualityEnableME3b = cms.uint32(65535),
        QualityEnableME3c = cms.uint32(65535),
        QualityEnableME4a = cms.uint32(65535),
        QualityEnableME4b = cms.uint32(65535),
        QualityEnableME4c = cms.uint32(65535),
        SRLUT = cms.PSet(
            Binary = cms.untracked.bool(False),
            LUTPath = cms.untracked.string('./'),
            ReadLUTs = cms.untracked.bool(False),
            UseMiniLUTs = cms.untracked.bool(True)
        ),
        curvedp = cms.uint32(15),
        firmwareDD = cms.uint32(20091026),
        firmwareFA = cms.uint32(20091026),
        firmwareSP = cms.uint32(20140515),
        firmwareVM = cms.uint32(20091026),
        gangedME1a = cms.untracked.bool(False),
        initializeFromPSet = cms.bool(False),
        isCoreVerbose = cms.bool(False),
        kill_fiber = cms.uint32(0),
        maxdeta112_accp = cms.uint32(29),
        maxdeta113_accp = cms.uint32(38),
        maxdeta12_accp = cms.uint32(17),
        maxdeta13_accp = cms.uint32(27),
        maxdphi112_accp = cms.uint32(64),
        maxdphi113_accp = cms.uint32(64),
        maxdphi12_accp = cms.uint32(64),
        maxdphi13_accp = cms.uint32(64),
        mbaPhiOff = cms.uint32(0),
        mbbPhiOff = cms.uint32(1982),
        mindeta112_accp = cms.uint32(14),
        mindeta113_accp = cms.uint32(21),
        mindeta12_accp = cms.uint32(12),
        mindeta13_accp = cms.uint32(13),
        mindetap = cms.uint32(7),
        mindetap_halo = cms.uint32(8),
        mindphip = cms.uint32(180),
        mindphip_halo = cms.uint32(128),
        rescaleSinglesPhi = cms.bool(True),
        run_core = cms.bool(True),
        singlesTrackOutput = cms.uint32(1),
        straightp = cms.uint32(19),
        trigger_on_MB1a = cms.bool(False),
        trigger_on_MB1d = cms.bool(False),
        trigger_on_ME1a = cms.bool(False),
        trigger_on_ME1b = cms.bool(False),
        trigger_on_ME2 = cms.bool(False),
        trigger_on_ME3 = cms.bool(False),
        trigger_on_ME4 = cms.bool(False),
        widePhi = cms.uint32(0)
    ),
    SectorReceiverInput = cms.untracked.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    isTMB07 = cms.bool(True),
    readDtDirect = cms.bool(False),
    useDT = cms.bool(True)
)


process.simDtTriggerPrimitiveDigis = cms.EDProducer("DTTrigProd",
    DTTFSectorNumbering = cms.bool(True),
    debug = cms.untracked.bool(False),
    digiTag = cms.InputTag("simMuonDTDigis"),
    lutBtic = cms.untracked.int32(31),
    lutDumpFlag = cms.untracked.bool(False)
)


process.simDttfDigis = cms.EDProducer("DTTrackFinder",
    BX_max = cms.untracked.int32(7),
    BX_min = cms.untracked.int32(-9),
    CSCStub_Source = cms.InputTag("simCsctfTrackDigis"),
    CSC_Eta_Cancellation = cms.untracked.bool(False),
    DTDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    Debug = cms.untracked.int32(0),
    EtaTrackFinder = cms.untracked.bool(True),
    Extrapolation_21 = cms.untracked.bool(False),
    Extrapolation_Filter = cms.untracked.int32(1),
    Extrapolation_nbits_Phi = cms.untracked.int32(8),
    Extrapolation_nbits_PhiB = cms.untracked.int32(8),
    Open_LUTs = cms.untracked.bool(False),
    OutOfTime_Filter = cms.untracked.bool(False),
    OutOfTime_Filter_Window = cms.untracked.int32(1),
    Overlap = cms.untracked.bool(True),
    PHI_Assignment_nbits_Phi = cms.untracked.int32(10),
    PHI_Assignment_nbits_PhiB = cms.untracked.int32(10),
    PT_Assignment_nbits_Phi = cms.untracked.int32(12),
    PT_Assignment_nbits_PhiB = cms.untracked.int32(10)
)


process.simEcalDigis = cms.EDProducer("EcalSelectiveReadoutProducer",
    EBSRPdigiCollection = cms.string('ebDigis'),
    EBSrFlagCollection = cms.string('ebSrFlags'),
    EBdigiCollection = cms.string(''),
    EESRPdigiCollection = cms.string('eeDigis'),
    EESrFlagCollection = cms.string('eeSrFlags'),
    EEdigiCollection = cms.string(''),
    UseFullReadout = cms.bool(False),
    configFromCondDB = cms.bool(True),
    defaultTtf = cms.int32(4),
    digiProducer = cms.string('simEcalUnsuppressedDigis'),
    dumpFlags = cms.untracked.int32(0),
    produceDigis = cms.untracked.bool(True),
    trigPrimBypass = cms.bool(False),
    trigPrimBypassHTH = cms.double(1.0),
    trigPrimBypassLTH = cms.double(1.0),
    trigPrimBypassMode = cms.int32(0),
    trigPrimBypassWithPeakFinder = cms.bool(True),
    trigPrimCollection = cms.string(''),
    trigPrimProducer = cms.string('simEcalTriggerPrimitiveDigis'),
    writeSrFlags = cms.untracked.bool(True)
)


process.simEcalEBTriggerPrimitiveDigis = cms.EDProducer("EcalEBTrigPrimProducer",
    BarrelOnly = cms.bool(True),
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    barrelEcalDigis = cms.InputTag("simEcalUnsuppressedDigis"),
    binOfMaximum = cms.int32(6),
    nOfSamples = cms.int32(1)
)


process.simEcalEBTriggerPrimitivePhase2Digis = cms.EDProducer("EcalEBTrigPrimPhase2Producer",
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    barrelEcalDigis = cms.InputTag("simEcalUnsuppressedDigis"),
    binOfMaximum = cms.int32(6)
)


process.simEcalPreshowerDigis = cms.EDProducer("ESZeroSuppressionProducer",
    ESZSdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    digiProducer = cms.string('simEcalUnsuppressedDigis')
)


process.simEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    InstanceEB = cms.string(''),
    InstanceEE = cms.string(''),
    Label = cms.string('simEcalUnsuppressedDigis'),
    TcpOutput = cms.bool(False),
    binOfMaximum = cms.int32(6)
)


process.simEmtfDigis = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(2),
    CPPFEnable = cms.bool(False),
    CPPFInput = cms.InputTag("simCPPFDigis"),
    CSCComparatorInput = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    CSCInputBXShift = cms.int32(-8),
    DTEnable = cms.bool(False),
    DTPhiInput = cms.InputTag("simTwinMuxDigis"),
    DTThetaInput = cms.InputTag("simDtTriggerPrimitiveDigis"),
    Era = cms.string('Run3_2021'),
    FWConfig = cms.bool(True),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IRPCEnable = cms.bool(False),
    ME0Enable = cms.bool(False),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("simMuonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    UseRun3CCLUT_OTMB = cms.bool(True),
    UseRun3CCLUT_TMB = cms.bool(False),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        ModeQualVer = cms.int32(2),
        PromoteMode7 = cms.bool(False),
        ProtobufFileName = cms.string('model_graph.displ.16.pb'),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring(
            '4,15:15,7:7,7:7,7:7',
            '3,16:16,7:7,7:6,7:6',
            '3,14:14,7:7,8:7,8:7',
            '2,18:17,7:7,7:5,7:5',
            '2,13:12,7:7,10:7,10:7',
            '1,22:19,7:7,7:0,7:0',
            '1,11:8,7:7,14:7,14:7',
            '0,30:23,7:7,7:0,7:0',
            '0,7:0,7:7,14:7,14:7'
        ),
        SymPatternDefinitions = cms.vstring(
            '4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7',
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6',
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4',
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0',
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'
        ),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugAmbigThetaWin = cms.bool(False),
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowZone0 = cms.int32(4),
        TwoStationSameBX = cms.bool(True),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simEmtfDigisData = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(2),
    CPPFEnable = cms.bool(True),
    CPPFInput = cms.InputTag("emtfStage2Digis"),
    CSCComparatorInput = cms.InputTag("muonCSCDigis","MuonCSCComparatorDigi"),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("emtfStage2Digis"),
    CSCInputBXShift = cms.int32(-8),
    DTEnable = cms.bool(False),
    DTPhiInput = cms.InputTag("bmtfDigis"),
    DTThetaInput = cms.InputTag("bmtfDigis"),
    Era = cms.string('Run2_2018'),
    FWConfig = cms.bool(True),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IRPCEnable = cms.bool(False),
    ME0Enable = cms.bool(False),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("muonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    UseRun3CCLUT_OTMB = cms.bool(False),
    UseRun3CCLUT_TMB = cms.bool(False),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        ModeQualVer = cms.int32(2),
        PromoteMode7 = cms.bool(False),
        ProtobufFileName = cms.string('model_graph.displ.16.pb'),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring(
            '4,15:15,7:7,7:7,7:7',
            '3,16:16,7:7,7:6,7:6',
            '3,14:14,7:7,8:7,8:7',
            '2,18:17,7:7,7:5,7:5',
            '2,13:12,7:7,10:7,10:7',
            '1,22:19,7:7,7:0,7:0',
            '1,11:8,7:7,14:7,14:7',
            '0,30:23,7:7,7:0,7:0',
            '0,7:0,7:7,14:7,14:7'
        ),
        SymPatternDefinitions = cms.vstring(
            '4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7',
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6',
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4',
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0',
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'
        ),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugAmbigThetaWin = cms.bool(False),
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowZone0 = cms.int32(4),
        TwoStationSameBX = cms.bool(True),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simEmtfDigisDataPhase2 = cms.EDProducer("L1TMuonEndCapPhase2TrackProducer",
    BXWindow = cms.int32(1),
    CSCEnabled = cms.bool(True),
    CSCInput = cms.InputTag("emtfStage2Digis"),
    CSCInputBXShift = cms.int32(-8),
    DisplacedGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/displaced_model.pb'),
    GE0Enabled = cms.bool(False),
    GE0Input = cms.InputTag("ge0TriggerConvertedPseudoDigis"),
    GEMEnabled = cms.bool(True),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IncludeNeighborEnabled = cms.bool(True),
    ME0Enabled = cms.bool(True),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(2),
    MinBX = cms.int32(-2),
    PromptGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/prompt_model.pb'),
    RPCEnabled = cms.bool(True),
    RPCInput = cms.InputTag("muonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    ValidationDirectory = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/validation'),
    Verbosity = cms.untracked.int32(3)
)


process.simEmtfDigisMC = cms.EDProducer("L1TMuonEndCapTrackProducer",
    BXWindow = cms.int32(2),
    CPPFEnable = cms.bool(False),
    CPPFInput = cms.InputTag("simCPPFDigis"),
    CSCComparatorInput = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    CSCEnable = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    CSCInputBXShift = cms.int32(-8),
    DTEnable = cms.bool(False),
    DTPhiInput = cms.InputTag("simTwinMuxDigis"),
    DTThetaInput = cms.InputTag("simDtTriggerPrimitiveDigis"),
    Era = cms.string('Run2_2018'),
    FWConfig = cms.bool(True),
    GEMEnable = cms.bool(False),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IRPCEnable = cms.bool(False),
    ME0Enable = cms.bool(False),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(3),
    MinBX = cms.int32(-3),
    RPCEnable = cms.bool(True),
    RPCInput = cms.InputTag("simMuonRPCDigis"),
    RPCInputBXShift = cms.int32(0),
    UseRun3CCLUT_OTMB = cms.bool(False),
    UseRun3CCLUT_TMB = cms.bool(False),
    spGCParams16 = cms.PSet(
        BugSameSectorPt0 = cms.bool(False),
        MaxRoadsPerZone = cms.int32(3),
        MaxTracks = cms.int32(3),
        UseSecondEarliest = cms.bool(True)
    ),
    spPAParams16 = cms.PSet(
        Bug9BitDPhi = cms.bool(False),
        BugGMTPhi = cms.bool(False),
        BugMode7CLCT = cms.bool(False),
        BugNegPt = cms.bool(False),
        FixMode15HighPt = cms.bool(True),
        ModeQualVer = cms.int32(2),
        PromoteMode7 = cms.bool(False),
        ProtobufFileName = cms.string('model_graph.displ.16.pb'),
        ReadPtLUTFile = cms.bool(False)
    ),
    spPCParams16 = cms.PSet(
        DuplicateTheta = cms.bool(True),
        FixME11Edges = cms.bool(True),
        FixZonePhi = cms.bool(True),
        IncludeNeighbor = cms.bool(True),
        UseNewZones = cms.bool(False),
        ZoneBoundaries = cms.vint32(0, 41, 49, 87, 127),
        ZoneOverlap = cms.int32(2)
    ),
    spPRParams16 = cms.PSet(
        PatternDefinitions = cms.vstring(
            '4,15:15,7:7,7:7,7:7',
            '3,16:16,7:7,7:6,7:6',
            '3,14:14,7:7,8:7,8:7',
            '2,18:17,7:7,7:5,7:5',
            '2,13:12,7:7,10:7,10:7',
            '1,22:19,7:7,7:0,7:0',
            '1,11:8,7:7,14:7,14:7',
            '0,30:23,7:7,7:0,7:0',
            '0,7:0,7:7,14:7,14:7'
        ),
        SymPatternDefinitions = cms.vstring(
            '4,15:15:15:15,7:7:7:7,7:7:7:7,7:7:7:7',
            '3,16:16:14:14,7:7:7:7,8:7:7:6,8:7:7:6',
            '2,18:17:13:12,7:7:7:7,10:7:7:4,10:7:7:4',
            '1,22:19:11:8,7:7:7:7,14:7:7:0,14:7:7:0',
            '0,30:23:7:0,7:7:7:7,14:7:7:0,14:7:7:0'
        ),
        UseSymmetricalPatterns = cms.bool(True)
    ),
    spTBParams16 = cms.PSet(
        BugAmbigThetaWin = cms.bool(False),
        BugME11Dupes = cms.bool(False),
        BugSt2PhDiff = cms.bool(False),
        ThetaWindow = cms.int32(8),
        ThetaWindowZone0 = cms.int32(4),
        TwoStationSameBX = cms.bool(True),
        UseSingleHits = cms.bool(False)
    ),
    verbosity = cms.untracked.int32(0)
)


process.simEmtfDigisMCPhase2 = cms.EDProducer("L1TMuonEndCapPhase2TrackProducer",
    BXWindow = cms.int32(1),
    CSCEnabled = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigisForEMTF","MPCSORTED"),
    CSCInputBXShift = cms.int32(-8),
    DisplacedGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/displaced_model.pb'),
    GE0Enabled = cms.bool(False),
    GE0Input = cms.InputTag("ge0TriggerConvertedPseudoDigis"),
    GEMEnabled = cms.bool(True),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IncludeNeighborEnabled = cms.bool(True),
    ME0Enabled = cms.bool(True),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(2),
    MinBX = cms.int32(-2),
    PromptGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/prompt_model.pb'),
    RPCEnabled = cms.bool(True),
    RPCInput = cms.InputTag("rpcRecHitsForEMTF"),
    RPCInputBXShift = cms.int32(0),
    ValidationDirectory = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/validation'),
    Verbosity = cms.untracked.int32(3)
)


process.simEmtfDigisPhase2 = cms.EDProducer("L1TMuonEndCapPhase2TrackProducer",
    BXWindow = cms.int32(1),
    CSCEnabled = cms.bool(True),
    CSCInput = cms.InputTag("simCscTriggerPrimitiveDigisForEMTF","MPCSORTED"),
    CSCInputBXShift = cms.int32(-8),
    DisplacedGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/displaced_model.pb'),
    GE0Enabled = cms.bool(False),
    GE0Input = cms.InputTag("ge0TriggerConvertedPseudoDigis"),
    GEMEnabled = cms.bool(True),
    GEMInput = cms.InputTag("simMuonGEMPadDigiClusters"),
    GEMInputBXShift = cms.int32(0),
    IncludeNeighborEnabled = cms.bool(True),
    ME0Enabled = cms.bool(True),
    ME0Input = cms.InputTag("me0TriggerConvertedPseudoDigis"),
    ME0InputBXShift = cms.int32(-8),
    MaxBX = cms.int32(2),
    MinBX = cms.int32(-2),
    PromptGraphPath = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/prompt_model.pb'),
    RPCEnabled = cms.bool(True),
    RPCInput = cms.InputTag("rpcRecHitsForEMTF"),
    RPCInputBXShift = cms.int32(0),
    ValidationDirectory = cms.string('L1Trigger/L1TMuonEndCapPhase2/data/validation'),
    Verbosity = cms.untracked.int32(3)
)


process.simEmtfShowers = cms.EDProducer("L1TMuonEndCapShowerProducer",
    CSCShowerInput = cms.InputTag("simCscTriggerPrimitiveDigis"),
    enableOneLooseShower = cms.bool(True),
    enableOneNominalShower = cms.bool(True),
    enableOneTightShower = cms.bool(True),
    enableTwoLooseShowers = cms.bool(False),
    mightGet = cms.optional.untracked.vstring
)


process.simEmtfShowersData = cms.EDProducer("L1TMuonEndCapShowerProducer",
    CSCShowerInput = cms.InputTag("simCscTriggerPrimitiveDigis"),
    enableOneLooseShower = cms.bool(True),
    enableOneNominalShower = cms.bool(True),
    enableOneTightShower = cms.bool(True),
    enableTwoLooseShowers = cms.bool(False),
    mightGet = cms.optional.untracked.vstring
)


process.simEmtfShowersDef = cms.EDProducer("L1TMuonEndCapShowerProducer",
    CSCShowerInput = cms.InputTag("simCscTriggerPrimitiveDigis"),
    enableOneLooseShower = cms.bool(True),
    enableOneNominalShower = cms.bool(True),
    enableOneTightShower = cms.bool(True),
    enableTwoLooseShowers = cms.bool(False),
    mightGet = cms.optional.untracked.vstring
)


process.simGctDigis = cms.EDProducer("L1GctEmulator",
    conditionsLabel = cms.string(''),
    hardwareTest = cms.bool(False),
    ignoreRCTTauVetoBitsForIsolation = cms.bool(False),
    inputLabel = cms.InputTag("simRctDigis"),
    jetFinderType = cms.string('hardwareJetFinder'),
    postSamples = cms.uint32(1),
    preSamples = cms.uint32(1),
    useImprovedTauAlgorithm = cms.bool(True),
    writeInternalData = cms.bool(False)
)


process.simGmtCaloSumDigis = cms.EDProducer("L1TMuonCaloSumProducer",
    caloStage2Layer2Label = cms.InputTag("simCaloStage2Layer1Digis")
)


process.simGmtDigis = cms.EDProducer("L1MuGlobalMuonTrigger",
    BX_max = cms.int32(4),
    BX_max_readout = cms.int32(2),
    BX_min = cms.int32(-4),
    BX_min_readout = cms.int32(-2),
    CSCCandidates = cms.InputTag("simCsctfDigis","CSC"),
    DTCandidates = cms.InputTag("simDttfDigis","DT"),
    Debug = cms.untracked.int32(0),
    MipIsoData = cms.InputTag("simRctDigis"),
    RPCbCandidates = cms.InputTag("simRpcTriggerDigis","RPCb"),
    RPCfCandidates = cms.InputTag("simRpcTriggerDigis","RPCf"),
    SendMipIso = cms.untracked.bool(False),
    WriteLUTsAndRegs = cms.untracked.bool(False)
)


process.simGmtShowerDigis = cms.EDProducer("L1TMuonShowerProducer",
    bxMax = cms.int32(0),
    bxMin = cms.int32(0),
    mightGet = cms.optional.untracked.vstring,
    showerInput = cms.InputTag("simEmtfShowers","EMTF")
)


process.simGmtShowerDigisDef = cms.EDProducer("L1TMuonShowerProducer",
    bxMax = cms.int32(0),
    bxMin = cms.int32(0),
    mightGet = cms.optional.untracked.vstring,
    showerInput = cms.InputTag("simEmtfShowers","EMTF")
)


process.simGmtStage2Digis = cms.EDProducer("L1TMuonProducer",
    autoBxRange = cms.bool(True),
    autoCancelMode = cms.bool(False),
    barrelTFInput = cms.InputTag("simKBmtfDigis","BMTF"),
    bmtfCancelMode = cms.string('kftracks'),
    bxMax = cms.int32(2),
    bxMin = cms.int32(-2),
    emtfCancelMode = cms.string('coordinate'),
    forwardTFInput = cms.InputTag("simEmtfDigis","EMTF"),
    overlapTFInput = cms.InputTag("simOmtfDigis","OMTF"),
    triggerTowerInput = cms.InputTag("simGmtCaloSumDigis","TriggerTowerSums")
)


process.simGtDigis = cms.EDProducer("L1GlobalTrigger",
    AlgorithmTriggersUnmasked = cms.bool(False),
    AlgorithmTriggersUnprescaled = cms.bool(False),
    AlternativeNrBxBoardDaq = cms.uint32(0),
    AlternativeNrBxBoardEvm = cms.uint32(0),
    BstLengthBytes = cms.int32(-1),
    CastorInputTag = cms.InputTag("castorL1Digis"),
    EmulateBxInEvent = cms.int32(3),
    GctInputTag = cms.InputTag("simGctDigis"),
    GmtInputTag = cms.InputTag("simGmtDigis"),
    ProduceL1GtDaqRecord = cms.bool(True),
    ProduceL1GtEvmRecord = cms.bool(True),
    ProduceL1GtObjectMapRecord = cms.bool(True),
    ReadTechnicalTriggerRecords = cms.bool(True),
    RecordLength = cms.vint32(3, 0),
    TechnicalTriggersInputTags = cms.VInputTag("simBscDigis", "simRpcTechTrigDigis", "simHcalTechTrigDigis", "simCastorTechTrigDigis"),
    TechnicalTriggersUnmasked = cms.bool(False),
    TechnicalTriggersUnprescaled = cms.bool(False),
    TechnicalTriggersVetoUnmasked = cms.bool(False),
    WritePsbL1GtDaqRecord = cms.bool(True)
)


process.simGtExtFakeStage2Digis = cms.EDProducer("L1TExtCondProducer",
    bxFirst = cms.int32(-2),
    bxLast = cms.int32(2),
    setBptxAND = cms.bool(True),
    setBptxMinus = cms.bool(True),
    setBptxOR = cms.bool(True),
    setBptxPlus = cms.bool(True),
    tcdsRecordLabel = cms.InputTag("")
)


process.simGtStage2Digis = cms.EDProducer("L1TGlobalProducer",
    AlgoBlkInputTag = cms.InputTag("gtStage2Digis"),
    AlgorithmTriggersUnmasked = cms.bool(True),
    AlgorithmTriggersUnprescaled = cms.bool(True),
    CICADAInputTag = cms.InputTag("simCaloStage2Layer1Summary","CICADAScore"),
    EGammaInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumInputTag = cms.InputTag("simCaloStage2Digis"),
    EtSumZdcInputTag = cms.InputTag("l1tZDCEtSums"),
    ExtInputTag = cms.InputTag("simGtExtFakeStage2Digis"),
    GetPrescaleColumnFromData = cms.bool(False),
    JetInputTag = cms.InputTag("simCaloStage2Digis"),
    MuonInputTag = cms.InputTag("simGmtStage2Digis"),
    MuonShowerInputTag = cms.InputTag("simGmtShowerDigis"),
    RequireMenuToMatchAlgoBlkInput = cms.bool(False),
    TauInputTag = cms.InputTag("simCaloStage2Digis"),
    useMuonShowers = cms.bool(True)
)


process.simHcalDigis = cms.EDProducer("HcalRealisticZS",
    HBlevel = cms.int32(8),
    HBregion = cms.vint32(5, 6),
    HElevel = cms.int32(9),
    HEregion = cms.vint32(5, 6),
    HFlevel = cms.int32(-9999),
    HFregion = cms.vint32(1, 2),
    HOlevel = cms.int32(24),
    HOregion = cms.vint32(1, 8),
    digiLabel = cms.string('simHcalUnsuppressedDigis'),
    markAndPass = cms.bool(False),
    use1ts = cms.bool(True),
    useConfigZSvalues = cms.int32(0),
    useInstanceLabels = cms.bool(True)
)


process.simHcalTTPDigis = cms.EDProducer("HcalTTPDigiProducer",
    HFDigiCollection = cms.InputTag("simHcalDigis"),
    HFSoI = cms.int32(4),
    defTT10 = cms.string('hits>=3:hfp>=1:hfm>=1'),
    defTT8 = cms.string('hits>=2'),
    defTT9 = cms.string('hits>=2:hfp>=1:hfm>=1'),
    defTTLocal = cms.string('hits>=4'),
    fwAlgorithm = cms.int32(1),
    iEtaMax = cms.int32(41),
    iEtaMin = cms.int32(33),
    id = cms.untracked.int32(101),
    maskedChannels = cms.vuint32(),
    presamples = cms.int32(2),
    samples = cms.int32(5),
    threshold = cms.uint32(2)
)


process.simHcalTechTrigDigis = cms.EDProducer("HcalTTPTriggerRecord",
    ttpBitNames = cms.vstring(
        'L1Tech_HCAL_HF_MM_or_PP_or_PM.v0',
        'L1Tech_HCAL_HF_coincidence_PM.v1',
        'L1Tech_HCAL_HF_MMP_or_MPP.v0'
    ),
    ttpBits = cms.vuint32(8, 9, 10),
    ttpDigiCollection = cms.InputTag("simHcalTTPDigis")
)


process.simHcalTriggerPrimitiveDigis = cms.EDProducer("HcalTrigPrimDigiProducer",
    FG_HF_thresholds = cms.vuint32(17, 255),
    FG_threshold = cms.uint32(12),
    FrontEndFormatError = cms.bool(False),
    InputTagFEDRaw = cms.InputTag("rawDataCollector"),
    LSConfig = cms.untracked.PSet(
        HcalFeatureHFEMBit = cms.bool(False),
        Long_Short_Offset = cms.double(10.1),
        Long_vrs_Short_Slope = cms.double(100.2),
        Min_Long_Energy = cms.double(10),
        Min_Short_Energy = cms.double(10)
    ),
    MinSignalThreshold = cms.uint32(0),
    PMTNoiseThreshold = cms.uint32(0),
    PeakFinderAlgorithm = cms.int32(2),
    RunZS = cms.bool(False),
    ZS_threshold = cms.uint32(1),
    applySaturationFix = cms.bool(True),
    codedVetoThresholds = cms.PSet(
        ieta1 = cms.int32(0),
        ieta10 = cms.int32(0),
        ieta11 = cms.int32(0),
        ieta12 = cms.int32(0),
        ieta13 = cms.int32(0),
        ieta14 = cms.int32(0),
        ieta15 = cms.int32(0),
        ieta16 = cms.int32(0),
        ieta17 = cms.int32(0),
        ieta18 = cms.int32(0),
        ieta19 = cms.int32(0),
        ieta2 = cms.int32(0),
        ieta20 = cms.int32(0),
        ieta21 = cms.int32(0),
        ieta22 = cms.int32(0),
        ieta23 = cms.int32(0),
        ieta24 = cms.int32(0),
        ieta25 = cms.int32(0),
        ieta26 = cms.int32(0),
        ieta27 = cms.int32(0),
        ieta28 = cms.int32(0),
        ieta3 = cms.int32(0),
        ieta4 = cms.int32(0),
        ieta5 = cms.int32(0),
        ieta6 = cms.int32(0),
        ieta7 = cms.int32(0),
        ieta8 = cms.int32(0),
        ieta9 = cms.int32(0)
    ),
    inputLabel = cms.VInputTag(cms.InputTag("simHcalUnsuppressedDigis"), cms.InputTag("simHcalUnsuppressedDigis")),
    inputUpgradeLabel = cms.VInputTag(cms.InputTag("simHcalUnsuppressedDigis","HBHEQIE11DigiCollection"), cms.InputTag("simHcalUnsuppressedDigis","HFQIE10DigiCollection")),
    latency = cms.int32(1),
    numberOfFilterPresamplesHBQIE11 = cms.int32(0),
    numberOfFilterPresamplesHEQIE11 = cms.int32(0),
    numberOfPresamples = cms.int32(2),
    numberOfPresamplesHF = cms.int32(1),
    numberOfSamples = cms.int32(4),
    numberOfSamplesHF = cms.int32(2),
    overrideDBvetoThresholdsHB = cms.bool(False),
    overrideDBvetoThresholdsHE = cms.bool(False),
    overrideDBweightsAndFilterHB = cms.bool(False),
    overrideDBweightsAndFilterHE = cms.bool(False),
    peakFilter = cms.bool(True),
    tpScales = cms.PSet(
        HBHE = cms.PSet(
            LSBQIE11 = cms.double(0.0625),
            LSBQIE11Overlap = cms.double(0.0625),
            LSBQIE8 = cms.double(0.125)
        ),
        HF = cms.PSet(
            NCTShift = cms.int32(2),
            RCTShift = cms.int32(3)
        )
    ),
    upgradeHB = cms.bool(True),
    upgradeHE = cms.bool(True),
    upgradeHF = cms.bool(True),
    useTDCInMinBiasBits = cms.bool(False),
    weights = cms.vdouble(1.0, 1.0),
    weightsQIE11 = cms.PSet(
        ieta1 = cms.vint32(255, 255),
        ieta10 = cms.vint32(255, 255),
        ieta11 = cms.vint32(255, 255),
        ieta12 = cms.vint32(255, 255),
        ieta13 = cms.vint32(255, 255),
        ieta14 = cms.vint32(255, 255),
        ieta15 = cms.vint32(255, 255),
        ieta16 = cms.vint32(255, 255),
        ieta17 = cms.vint32(255, 255),
        ieta18 = cms.vint32(255, 255),
        ieta19 = cms.vint32(255, 255),
        ieta2 = cms.vint32(255, 255),
        ieta20 = cms.vint32(255, 255),
        ieta21 = cms.vint32(255, 255),
        ieta22 = cms.vint32(255, 255),
        ieta23 = cms.vint32(255, 255),
        ieta24 = cms.vint32(255, 255),
        ieta25 = cms.vint32(255, 255),
        ieta26 = cms.vint32(255, 255),
        ieta27 = cms.vint32(255, 255),
        ieta28 = cms.vint32(255, 255),
        ieta3 = cms.vint32(255, 255),
        ieta4 = cms.vint32(255, 255),
        ieta5 = cms.vint32(255, 255),
        ieta6 = cms.vint32(255, 255),
        ieta7 = cms.vint32(255, 255),
        ieta8 = cms.vint32(255, 255),
        ieta9 = cms.vint32(255, 255)
    )
)


process.simKBmtfDigis = cms.EDProducer("L1TMuonBarrelKalmanTrackProducer",
    algoSettings = cms.PSet(
        aPhi = cms.vdouble(1.942, 0.01511, 0.01476, 0.009799),
        aPhiB = cms.vdouble(-1.508, -0.1237, -0.1496, -0.1333),
        aPhiBNLO = cms.vdouble(0.000331, 0, 0, 0),
        bPhi = cms.vdouble(-1, 0.18245, 0.20898, 0.17286),
        bPhiB = cms.vdouble(-1, 1.18245, 1.20898, 1.17286),
        chiSquare = cms.vdouble(0.0, 0.109375, 0.234375, 0.359375),
        chiSquareCut = cms.vint32(126, 126, 126, 126, 126),
        chiSquareCutCurvMax = cms.vint32(2500, 2500, 2500, 2500, 2500),
        chiSquareCutPattern = cms.vint32(7, 11, 13, 14, 15),
        chiSquareCutTight = cms.vint32(
            40, 126, 60, 126, 126,
            126
        ),
        combos1 = cms.vint32(),
        combos2 = cms.vint32(3),
        combos3 = cms.vint32(5, 6, 7),
        combos4 = cms.vint32(
            9, 10, 11, 12, 13,
            14, 15
        ),
        eLoss = cms.vdouble(0.000765, 0, 0, 0),
        etaLUT0 = cms.vdouble(8.946, 7.508, 6.279, 6.399),
        etaLUT1 = cms.vdouble(0.159, 0.116, 0.088, 0.128),
        initialK = cms.vdouble(-1.196, -1.581, -2.133, -2.263),
        initialK2 = cms.vdouble(-0.000326, -0.0007165, 0.002305, -0.00563),
        lutFile = cms.string('L1Trigger/L1TMuon/data/bmtf_luts/kalmanLUTs_v302.root'),
        mScatteringPhi = cms.vdouble(0.00249, 5.47e-05, 3.49e-05, 1.37e-05),
        mScatteringPhiB = cms.vdouble(0.00722, 0.003461, 0.004447, 0.00412),
        phiAt2 = cms.double(0.15918),
        pointResolutionPhi = cms.double(1.0),
        pointResolutionPhiB = cms.double(500.0),
        pointResolutionPhiBH = cms.vdouble(151.0, 173.0, 155.0, 153.0),
        pointResolutionPhiBL = cms.vdouble(17866.0, 19306.0, 23984.0, 23746.0),
        pointResolutionVertex = cms.double(1.0),
        trackComp = cms.vdouble(1.75, 1.25, 0.625, 0.25),
        trackCompCut = cms.vint32(
            15, 15, 15, 15, 15,
            15
        ),
        trackCompCutCurvMax = cms.vint32(
            34, 34, 34, 34, 34,
            34
        ),
        trackCompCutPattern = cms.vint32(
            3, 5, 6, 9, 10,
            12
        ),
        trackCompErr1 = cms.vdouble(2.0, 2.0, 2.0, 2.0),
        trackCompErr2 = cms.vdouble(0.21875, 0.21875, 0.21875, 0.3125),
        useNewQualityCalculation = cms.bool(True),
        useOfflineAlgo = cms.bool(False),
        verbose = cms.bool(False)
    ),
    bx = cms.vint32(-2, -1, 0, 1, 2),
    src = cms.InputTag("simKBmtfStubs"),
    trackFinderSettings = cms.PSet(
        sectorSettings = cms.PSet(
            regionSettings = cms.PSet(
                verbose = cms.int32(0)
            ),
            verbose = cms.int32(0),
            wheelsToProcess = cms.vint32(-2, -1, 0, 1, 2)
        ),
        sectorsToProcess = cms.vint32(
            0, 1, 2, 3, 4,
            5, 6, 7, 8, 9,
            10, 11
        ),
        verbose = cms.int32(0)
    )
)


process.simKBmtfStubs = cms.EDProducer("L1TMuonBarrelKalmanStubProducer",
    cotTheta_1 = cms.vint32(
        105, 101, 97, 93, 88,
        84, 79, 69, 64, 58,
        52, 46, 40, 34, 21,
        14, 7, 0, -7, -14,
        -21, -34, -40, -46, -52,
        -58, -64, -69, -79, -84,
        -88, -93, -97, -101, -105
    ),
    cotTheta_2 = cms.vint32(
        93, 89, 85, 81, 77,
        73, 68, 60, 55, 50,
        45, 40, 34, 29, 17,
        12, 6, 0, -6, -12,
        -17, -29, -34, -40, -45,
        -50, -55, -60, -68, -73,
        -77, -81, -85, -89, -93
    ),
    cotTheta_3 = cms.vint32(
        81, 77, 74, 70, 66,
        62, 58, 51, 46, 42,
        38, 33, 29, 24, 15,
        10, 5, 0, -5, -10,
        -15, -24, -29, -33, -38,
        -42, -46, -51, -58, -62,
        -66, -70, -74, -77, -81
    ),
    disableMasks = cms.bool(False),
    maxBX = cms.int32(2),
    minBX = cms.int32(-2),
    minPhiQuality = cms.int32(0),
    minThetaQuality = cms.int32(0),
    srcPhi = cms.InputTag("simTwinMuxDigis"),
    srcTheta = cms.InputTag("simDtTriggerPrimitiveDigis"),
    verbose = cms.int32(0)
)


process.simMuonCSCDigis = cms.EDProducer("CSCDigiProducer",
    GeometryType = cms.string('idealForDigi'),
    InputCollection = cms.string('g4SimHitsMuonCSCHits'),
    digitizeBadChambers = cms.bool(False),
    doNeutrons = cms.bool(False),
    dumpGasCollisions = cms.untracked.bool(False),
    layersNeeded = cms.uint32(3),
    mixLabel = cms.string('mix'),
    stripConditions = cms.string('Database'),
    strips = cms.PSet(
        CSCUseGasGainCorrections = cms.bool(False),
        CSCUseTimingCorrections = cms.bool(False),
        ampGainSigma = cms.double(0.03),
        bunchTimingOffsets = cms.vdouble(
            0.0, 37.53, 37.66, 55.4, 48.2,
            54.45, 53.78, 53.38, 54.12, 51.98,
            51.28
        ),
        capacativeCrosstalk = cms.double(35.0),
        comparatorSamplingTime = cms.double(25.0),
        comparatorTimeBinOffset = cms.double(4.0),
        comparatorTimeOffset = cms.double(15.0),
        doCorrelatedNoise = cms.bool(True),
        doCrosstalk = cms.bool(True),
        doNoise = cms.bool(True),
        doSuppression = cms.bool(False),
        gain = cms.double(2.0),
        gainsConstant = cms.double(0.27),
        me11gain = cms.double(4.0),
        nScaBins = cms.int32(8),
        peakTimeSigma = cms.double(3.0),
        pedestal = cms.double(600.0),
        pedestalSigma = cms.double(1.5),
        readBadChambers = cms.bool(True),
        readBadChannels = cms.bool(False),
        resistiveCrosstalkScaling = cms.double(1.8),
        samplingTime = cms.double(25.0),
        scaPeakBin = cms.int32(5),
        scaTimingOffsets = cms.vdouble(
            0.0, 10.0, 10.0, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0
        ),
        shapingTime = cms.int32(100),
        signalSpeed = cms.vdouble(
            0.0, -78, -76, -188, -262,
            -97, -99, -90, -99, -99,
            -113
        ),
        signalStartTime = cms.double(-250.0),
        signalStopTime = cms.double(500.0),
        tailShaping = cms.int32(2),
        timeBitForBxZero = cms.int32(6),
        timingCalibrationError = cms.vdouble(
            0.0, 4.2, 4.2, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0
        )
    ),
    wires = cms.PSet(
        bunchTimingOffsets = cms.vdouble(
            0.0, 22.88, 22.55, 29.28, 30.0,
            30.0, 30.5, 31.0, 29.5, 29.1,
            29.88
        ),
        doNoise = cms.bool(True),
        peakTimeSigma = cms.double(0.0),
        readBadChannels = cms.bool(False),
        samplingTime = cms.double(5.0),
        shapingTime = cms.int32(30),
        signalSpeed = cms.vdouble(
            0.0, -700, 900, 160, 146,
            148, 117, 131, 107, 123,
            123
        ),
        signalStartTime = cms.double(-200.0),
        signalStopTime = cms.double(300.0),
        tailShaping = cms.int32(2),
        timeBitForBxZero = cms.int32(8),
        timingCalibrationError = cms.vdouble(
            0.0, 6.2, 6.2, 0.0, 0.0,
            0.0, 0.0, 0.0, 0.0, 0.0,
            0.0
        )
    )
)


process.simMuonDTDigis = cms.EDProducer("DTDigitizer",
    GeometryType = cms.string('idealForDigi'),
    IdealModel = cms.bool(False),
    IdealModelConstantDriftVelocity = cms.double(0.0055),
    InputCollection = cms.string('g4SimHitsMuonDTHits'),
    LinksTimeWindow = cms.double(10.0),
    MultipleLinks = cms.bool(True),
    Smearing = cms.double(2.4),
    SyncName = cms.string('DTDigiSyncTOFCorr'),
    deadTime = cms.double(150.0),
    debug = cms.untracked.bool(False),
    interpolate = cms.bool(True),
    mixLabel = cms.string('mix'),
    onlyMuHits = cms.bool(False),
    phase2Digis = cms.bool(False),
    pset = cms.PSet(
        TOFCorrection = cms.int32(3),
        offset = cms.double(500.0)
    ),
    vPropWire = cms.double(24.4)
)


process.simMuonGEMDigis = cms.EDProducer("GEMDigiProducer",
    GE11ElecBkgParam0 = cms.double(406.249),
    GE11ElecBkgParam1 = cms.double(-2.90939),
    GE11ElecBkgParam2 = cms.double(0.00548191),
    GE11ModNeuBkgParam0 = cms.double(5710.23),
    GE11ModNeuBkgParam1 = cms.double(-43.3928),
    GE11ModNeuBkgParam2 = cms.double(0.0863681),
    GE21ElecBkgParam0 = cms.double(97.0505),
    GE21ElecBkgParam1 = cms.double(-43.3928),
    GE21ElecBkgParam2 = cms.double(0.000550599),
    GE21ModNeuBkgParam0 = cms.double(1440.44),
    GE21ModNeuBkgParam1 = cms.double(-7.48607),
    GE21ModNeuBkgParam2 = cms.double(0.0103078),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50),
    bxWidth = cms.double(2.5e-08),
    digitizeOnlyMuons = cms.bool(False),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonGEMHits'),
    instLumi = cms.double(2.0),
    maxBunch = cms.int32(3),
    mightGet = cms.optional.untracked.vstring,
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1),
    referenceInstLumi = cms.double(5),
    resolutionX = cms.double(0.03),
    signalPropagationSpeed = cms.double(0.66),
    simulateBkgNoise = cms.bool(False),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    simulateNoiseCLS = cms.bool(True),
    timeJitter = cms.double(1),
    timeResolution = cms.double(10)
)


process.simMuonGEMDigisDef = cms.EDProducer("GEMDigiProducer",
    GE11ElecBkgParam0 = cms.double(406.249),
    GE11ElecBkgParam1 = cms.double(-2.90939),
    GE11ElecBkgParam2 = cms.double(0.00548191),
    GE11ModNeuBkgParam0 = cms.double(5710.23),
    GE11ModNeuBkgParam1 = cms.double(-43.3928),
    GE11ModNeuBkgParam2 = cms.double(0.0863681),
    GE21ElecBkgParam0 = cms.double(97.0505),
    GE21ElecBkgParam1 = cms.double(-43.3928),
    GE21ElecBkgParam2 = cms.double(0.000550599),
    GE21ModNeuBkgParam0 = cms.double(1440.44),
    GE21ModNeuBkgParam1 = cms.double(-7.48607),
    GE21ModNeuBkgParam2 = cms.double(0.0103078),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50),
    bxWidth = cms.double(2.5e-08),
    digitizeOnlyMuons = cms.bool(False),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonGEMHits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    mightGet = cms.optional.untracked.vstring,
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1),
    referenceInstLumi = cms.double(5),
    resolutionX = cms.double(0.03),
    signalPropagationSpeed = cms.double(0.66),
    simulateBkgNoise = cms.bool(False),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    simulateNoiseCLS = cms.bool(True),
    timeJitter = cms.double(1),
    timeResolution = cms.double(10)
)


process.simMuonGEMPadDigiClusters = cms.EDProducer("GEMPadDigiClusterProducer",
    InputCollection = cms.InputTag("simMuonGEMPadDigis"),
    maxClusterSize = cms.uint32(8),
    maxClustersOHGE11 = cms.uint32(8),
    maxClustersOHGE21 = cms.uint32(8),
    maxClustersPartitionGE11 = cms.uint32(4),
    maxClustersPartitionGE21 = cms.uint32(4),
    mightGet = cms.optional.untracked.vstring,
    nOHGE11 = cms.uint32(1),
    nOHGE21 = cms.uint32(4),
    nPartitionsGE11 = cms.uint32(4),
    nPartitionsGE21 = cms.uint32(4),
    sendOverflowClusters = cms.bool(False)
)


process.simMuonGEMPadDigiClustersDef = cms.EDProducer("GEMPadDigiClusterProducer",
    InputCollection = cms.InputTag("simMuonGEMPadDigis"),
    maxClusterSize = cms.uint32(8),
    maxClustersOHGE11 = cms.uint32(8),
    maxClustersOHGE21 = cms.uint32(8),
    maxClustersPartitionGE11 = cms.uint32(4),
    maxClustersPartitionGE21 = cms.uint32(4),
    mightGet = cms.optional.untracked.vstring,
    nOHGE11 = cms.uint32(1),
    nOHGE21 = cms.uint32(4),
    nPartitionsGE11 = cms.uint32(4),
    nPartitionsGE21 = cms.uint32(4),
    sendOverflowClusters = cms.bool(False)
)


process.simMuonGEMPadDigis = cms.EDProducer("GEMPadDigiProducer",
    InputCollection = cms.InputTag("simMuonGEMDigis"),
    mightGet = cms.optional.untracked.vstring
)


process.simMuonGEMPadDigisDef = cms.EDProducer("GEMPadDigiProducer",
    InputCollection = cms.InputTag("simMuonGEMDigis"),
    mightGet = cms.optional.untracked.vstring
)


process.simMuonME0Digis = cms.EDProducer("ME0DigiProducer",
    ME0ElecBkgParam0 = cms.double(0.00171409),
    ME0ElecBkgParam1 = cms.double(4900.56),
    ME0ElecBkgParam2 = cms.double(710909),
    ME0ElecBkgParam3 = cms.double(-4327.25),
    ME0NeuBkgParam0 = cms.double(0.00386257),
    ME0NeuBkgParam1 = cms.double(6344.65),
    ME0NeuBkgParam2 = cms.double(16627700),
    ME0NeuBkgParam3 = cms.double(-102098),
    averageEfficiency = cms.double(0.98),
    averageNoiseRate = cms.double(0.001),
    averageShapingTime = cms.double(50.0),
    bxwidth = cms.int32(25),
    digiModelString = cms.string('Simple'),
    digitizeOnlyMuons = cms.bool(False),
    doBkgNoise = cms.bool(False),
    doNoiseCLS = cms.bool(True),
    fixedRollRadius = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    signalPropagationSpeed = cms.double(0.66),
    simulateElectronBkg = cms.bool(True),
    simulateIntrinsicNoise = cms.bool(False),
    timeJitter = cms.double(1.0),
    timeResolution = cms.double(5)
)


process.simMuonME0PadDigis = cms.EDProducer("ME0PadDigiProducer",
    InputCollection = cms.InputTag("simMuonME0Digis")
)


process.simMuonME0PseudoDigis = cms.EDProducer("ME0DigiPreRecoProducer",
    averageEfficiency = cms.double(0.98),
    constantPhiSpatialResolution = cms.bool(True),
    digiPreRecoModelString = cms.string('PreRecoGaussian'),
    digitizeOnlyMuons = cms.bool(False),
    etaError = cms.double(0.001),
    etaResolution = cms.double(0.0),
    gaussianSmearing = cms.bool(True),
    inputCollection = cms.string('g4SimHitsMuonME0Hits'),
    instLumi = cms.double(7.5),
    maxBunch = cms.int32(3),
    minBunch = cms.int32(-5),
    mixLabel = cms.string('mix'),
    phiError = cms.double(0.001),
    phiResolution = cms.double(0.0),
    rateFact = cms.double(1.0),
    referenceInstLumi = cms.double(5.0),
    simulateElectronBkg = cms.bool(False),
    simulateNeutralBkg = cms.bool(False),
    timeResolution = cms.double(0.0),
    useCorrelation = cms.bool(False),
    useEtaProjectiveGEO = cms.bool(False)
)


process.simMuonME0PseudoReDigis = cms.EDProducer("ME0ReDigiProducer",
    inputCollection = cms.string('simMuonME0PseudoDigis'),
    layerReadout = cms.vint32(
        1, 1, 1, 1, 1,
        1
    ),
    maxBXReadout = cms.int32(1),
    mergeDigis = cms.bool(True),
    minBXReadout = cms.int32(-1),
    neutronAcceptance = cms.double(2.0),
    numberOfPartitions = cms.uint32(8),
    numberOfStrips = cms.uint32(384),
    timeResolution = cms.double(5),
    useCusGeoFor1PartGeo = cms.bool(True),
    usePads = cms.bool(False)
)


process.simMuonME0PseudoReDigisCoarse = cms.EDProducer("ME0ReDigiProducer",
    inputCollection = cms.string('simMuonME0PseudoDigis'),
    layerReadout = cms.vint32(
        1, 1, 1, 1, 1,
        1
    ),
    maxBXReadout = cms.int32(1),
    mergeDigis = cms.bool(True),
    minBXReadout = cms.int32(-1),
    neutronAcceptance = cms.double(2.0),
    numberOfPartitions = cms.uint32(8),
    numberOfStrips = cms.uint32(384),
    timeResolution = cms.double(5),
    useCusGeoFor1PartGeo = cms.bool(True),
    usePads = cms.bool(True)
)


process.simMuonRPCDigis = cms.EDProducer("RPCDigiProducer",
    InputCollection = cms.string('g4SimHitsMuonRPCHits'),
    Noise = cms.bool(True),
    Signal = cms.bool(True),
    digiModel = cms.string('RPCSimAsymmetricCls'),
    digiModelConfig = cms.PSet(
        BX_range = cms.int32(5),
        Frate = cms.double(1.0),
        Gate = cms.double(25.0),
        IRPC_electronics_jitter = cms.double(0.025),
        IRPC_time_resolution = cms.double(0.1),
        Nbxing = cms.int32(9),
        Rate = cms.double(0.0),
        averageClusterSize = cms.double(1.5),
        averageEfficiency = cms.double(0.95),
        cosmics = cms.bool(False),
        deltatimeAdjacentStrip = cms.double(3.0),
        digitizeElectrons = cms.bool(False),
        linkGateWidth = cms.double(20.0),
        printOutDigitizer = cms.bool(False),
        signalPropagationSpeed = cms.double(0.66),
        timeJitter = cms.double(1.0),
        timeResolution = cms.double(2.5),
        timingRPCOffset = cms.double(50.0)
    ),
    doBkgNoise = cms.bool(True),
    mixLabel = cms.string('mix')
)


process.simOmtfDigis = cms.EDProducer("L1TMuonOverlapPhase1TrackProducer",
    XMLDumpFileName = cms.string('TestEvents.xml'),
    bxMax = cms.int32(0),
    bxMin = cms.int32(0),
    configXMLFile = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/hwToLogicLayer_0x0009.xml'),
    dropCSCPrimitives = cms.bool(False),
    dropDTPrimitives = cms.bool(False),
    dropRPCPrimitives = cms.bool(False),
    dumpDetailedResultToXML = cms.bool(False),
    dumpGPToXML = cms.bool(False),
    dumpResultToXML = cms.bool(False),
    eventsXMLFiles = cms.vstring('TestEvents.xml'),
    extrapolFactorsFilename = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/ExtrapolationFactors_simple.xml'),
    patternsXMLFile = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/Patterns_ExtraplMB1nadMB2SimplifiedFP_t17_classProb17_recalib2_minDP0_v3.xml'),
    processorType = cms.string('OMTFProcessor'),
    readEventsFromXML = cms.bool(False),
    srcCSC = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    srcDTPh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcDTTh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcRPC = cms.InputTag("simMuonRPCDigis")
)


process.simOmtfPhase2Digis = cms.EDProducer("L1TMuonOverlapPhase2TrackProducer",
    XMLDumpFileName = cms.string('TestEvents.xml'),
    bxMax = cms.int32(0),
    bxMin = cms.int32(0),
    configXMLFile = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/hwToLogicLayer_0x0209.xml'),
    dropCSCPrimitives = cms.bool(False),
    dropDTPrimitives = cms.bool(True),
    dropRPCPrimitives = cms.bool(False),
    dtPhiBUnitsRad = cms.int32(1024),
    dtRefHitMinQuality = cms.int32(4),
    dumpDetailedResultToXML = cms.bool(False),
    dumpGPToXML = cms.bool(False),
    dumpResultToXML = cms.bool(False),
    eventsXMLFiles = cms.vstring('TestEvents.xml'),
    extrapolFactorsFilename = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/ExtrapolationFactors_ExtraplMB1nadMB2DTQual_ValueP1Scale_t20.xml'),
    ghostBusterType = cms.string('byRefLayer'),
    goldenPatternResultFinalizeFunction = cms.int32(10),
    minDtPhiBQuality = cms.int32(4),
    minDtPhiQuality = cms.int32(2),
    noHitValueInPdf = cms.bool(True),
    patternsXMLFile = cms.FileInPath('L1Trigger/L1TMuon/data/omtf_config/Patterns_ExtraplMB1nadMB2DTQualAndEtaFixedP_ValueP1Scale_t20_v1_SingleMu_iPt_and_OneOverPt_classProb17_recalib2_minDP0.xml'),
    processorType = cms.string('OMTFProcessor'),
    readEventsFromXML = cms.bool(False),
    sorterType = cms.string('byLLH'),
    srcCSC = cms.InputTag("simCscTriggerPrimitiveDigis","MPCSORTED"),
    srcDTPh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcDTPhPhase2 = cms.InputTag("dtTriggerPhase2PrimitiveDigis"),
    srcDTTh = cms.InputTag("simDtTriggerPrimitiveDigis"),
    srcDTThPhase2 = cms.InputTag("dtTriggerPhase2PrimitiveDigis"),
    srcRPC = cms.InputTag("simMuonRPCDigis"),
    stubEtaEncoding = cms.string('valueP1Scale'),
    useEndcapStubsRInExtr = cms.bool(True),
    useFloatingPointExtrapolation = cms.bool(False),
    usePhase2DTPrimitives = cms.bool(True),
    usePhiBExtrapolationFromMB1 = cms.bool(True),
    usePhiBExtrapolationFromMB2 = cms.bool(True),
    useStubQualInExtr = cms.bool(True)
)


process.simRctDigis = cms.EDProducer("L1RCTProducer",
    BunchCrossings = cms.vint32(0),
    conditionsLabel = cms.string(''),
    ecalDigis = cms.VInputTag("simEcalTriggerPrimitiveDigis"),
    getFedsFromOmds = cms.bool(False),
    hcalDigis = cms.VInputTag("simHcalTriggerPrimitiveDigis"),
    queryDelayInLS = cms.uint32(10),
    queryIntervalInLS = cms.uint32(100),
    useEcal = cms.bool(True),
    useHcal = cms.bool(True)
)


process.simRctUpgradeFormatDigis = cms.EDProducer("L1TCaloRCTToUpgradeConverter",
    emTag = cms.InputTag("simRctDigis"),
    regionTag = cms.InputTag("simRctDigis")
)


process.simRpcTechTrigDigis = cms.EDProducer("RPCTechnicalTrigger",
    BitNames = cms.vstring(
        'L1Tech_RPC_TTU_barrel_Cosmics/v0',
        'L1Tech_RPC_TTU_pointing_Cosmics/v0',
        'L1Tech_RPC_TTU_RBplus2_Cosmics/v0',
        'L1Tech_RPC_TTU_RBplus1_Cosmics/v0',
        'L1Tech_RPC_TTU_RB0_Cosmics/v0',
        'L1Tech_RPC_TTU_RBminus1_Cosmics/v0',
        'L1Tech_RPC_TTU_RBminus2_Cosmics/v0'
    ),
    BitNumbers = cms.vuint32(
        24, 25, 26, 27, 28,
        29, 30
    ),
    ConfigFile = cms.string('hardware-pseudoconfig.txt'),
    RPCDigiLabel = cms.InputTag("simMuonRPCDigis"),
    RPCSimLinkInstance = cms.InputTag("RPCDigiSimLink"),
    UseEventSetup = cms.untracked.int32(0),
    UseRPCSimLink = cms.untracked.int32(0),
    Verbosity = cms.untracked.int32(0)
)


process.simRpcTriggerDigis = cms.EDProducer("RPCTrigger",
    RPCTriggerDebug = cms.untracked.int32(0),
    label = cms.string('simMuonRPCDigis')
)


process.simTwinMuxDigis = cms.EDProducer("L1TTwinMuxProducer",
    DTDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    DTThetaDigi_Source = cms.InputTag("simDtTriggerPrimitiveDigis"),
    RPC_Source = cms.InputTag("simMuonRPCDigis")
)


process.genstepfilter = cms.EDFilter("TriggerResultsFilter",
    hltResults = cms.InputTag("TriggerResults"),
    l1tIgnoreMaskAndPrescale = cms.bool(False),
    l1tResults = cms.InputTag(""),
    mightGet = cms.optional.untracked.vstring,
    throw = cms.bool(True),
    triggerConditions = cms.vstring(),
    usePathStatus = cms.bool(False)
)


process.hltBoolEnd = cms.EDFilter("HLTBool",
    result = cms.bool(True)
)


process.hltBoolFalse = cms.EDFilter("HLTBool",
    result = cms.bool(False)
)


process.hltDummyConditions = cms.EDFilter("HLTBool",
    result = cms.bool(True)
)


process.hltL1sZeroBias = cms.EDFilter("HLTL1TSeed",
    L1EGammaInputTag = cms.InputTag("hltGtStage2Digis","EGamma"),
    L1EtSumInputTag = cms.InputTag("hltGtStage2Digis","EtSum"),
    L1EtSumZdcInputTag = cms.InputTag("hltGtStage2Digis","EtSumZDC"),
    L1GlobalInputTag = cms.InputTag("hltGtStage2Digis"),
    L1JetInputTag = cms.InputTag("hltGtStage2Digis","Jet"),
    L1MuonInputTag = cms.InputTag("hltGtStage2Digis","Muon"),
    L1MuonShowerInputTag = cms.InputTag("hltGtStage2Digis","MuonShower"),
    L1ObjectMapInputTag = cms.InputTag("hltGtStage2ObjectMap"),
    L1SeedsLogicalExpression = cms.string('L1_ZeroBias'),
    L1TauInputTag = cms.InputTag("hltGtStage2Digis","Tau"),
    saveTags = cms.bool(True)
)


process.hltPreHLTAnalyzerEndpath = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPrePhysics = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreRandom = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltPreZeroBias = cms.EDFilter("HLTPrescaler",
    L1GtReadoutRecordTag = cms.InputTag("hltGtStage2Digis"),
    offset = cms.uint32(0)
)


process.hltRandomEventsFilter = cms.EDFilter("HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32(3)
)


process.hltTriggerType = cms.EDFilter("HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32(1)
)


process.hltGetConditions = cms.EDAnalyzer("EventSetupRecordDataGetter",
    toGet = cms.VPSet(),
    verbose = cms.untracked.bool(False)
)


process.hltGetRaw = cms.EDAnalyzer("HLTGetRaw",
    RawDataCollection = cms.InputTag("rawDataCollector")
)


process.hltL1TGlobalSummary = cms.EDAnalyzer("L1TGlobalSummary",
    AlgInputTag = cms.InputTag("hltGtStage2Digis"),
    DumpRecord = cms.bool(False),
    DumpTrigResults = cms.bool(False),
    DumpTrigSummary = cms.bool(True),
    ExtInputTag = cms.InputTag("hltGtStage2Digis"),
    MaxBx = cms.int32(0),
    MinBx = cms.int32(0),
    ReadPrescalesFromFile = cms.bool(False),
    psColumn = cms.int32(0),
    psFileName = cms.string('prescale_L1TGlobal.csv')
)


process.hltTrigReport = cms.EDAnalyzer("HLTrigReport",
    HLTriggerResults = cms.InputTag("TriggerResults","","@currentProcess"),
    ReferencePath = cms.untracked.string('HLTriggerFinalPath'),
    ReferenceRate = cms.untracked.double(100.0),
    reportBy = cms.untracked.string('job'),
    resetBy = cms.untracked.string('never'),
    serviceBy = cms.untracked.string('never')
)


process.FEVTDEBUGHLToutput = cms.OutputModule("PoolOutputModule",
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string('GEN-SIM-DIGI-RAW'),
        filterName = cms.untracked.string('')
    ),
    fileName = cms.untracked.string('file:output.root'),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIds_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_gemRecHits_*_*',
        'keep *_gemSegments_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCRecHitsSorted_zdcrecoRun3_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_towerMaker_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep recoCaloJets_ak4CaloJets_*_*',
        'keep *_ak4CaloJets_rho_*',
        'keep *_ak4CaloJets_sigma_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep floatedmValueMap_puppi_*_*',
        'keep *_ak4PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppi_*_*',
        'keep *_ak8PFJetsPuppiSoftDrop_*_*',
        'keep recoPFJets_ak4PFJets_*_*',
        'keep *_ak4PFJets_rho_*',
        'keep *_ak4PFJets_sigma_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep recoBasicJets_ak5CastorJets_*_*',
        'keep *_ak5CastorJets_rho_*',
        'keep *_ak5CastorJets_sigma_*',
        'keep *_ak5CastorJetID_*_*',
        'keep recoBasicJets_ak7CastorJets_*_*',
        'keep *_ak7CastorJets_rho_*',
        'keep *_ak7CastorJets_sigma_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsPuppiSoftDropMass_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep floatedmValueMap_puppiNoLep_*_*',
        'keep recoPFMETs_pfMetPuppi_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep recoMuons_muons_*_*',
        'keep booledmValueMap_muons_*_*',
        'keep doubleedmValueMap_muons_muPFMean*_*',
        'keep doubleedmValueMap_muons_muPFSum*_*',
        'keep *_muons_muonShowerInformation_*',
        'keep recoMuonTimeExtraedmValueMap_muons_*_*',
        'keep recoMuonCosmicCompatibilityedmValueMap_muons_*_*',
        'keep uintedmValueMap_muons_*_*',
        'keep *_particleFlow_muons_*',
        'keep recoMuons_displacedMuons_*_*',
        'keep booledmValueMap_displacedMuons_*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFMean*_*',
        'keep doubleedmValueMap_displacedMuons_dispMuPFSum*_*',
        'keep recoMuonTimeExtraedmValueMap_displacedMuons_*_*',
        'keep uintedmValueMap_displacedMuons_*_*',
        'keep *_particleFlow_displacedMuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muonReducedTrackExtras_*_*',
        'keep *_displacedMuonReducedTrackExtras_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muIsoDepositTkDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorTowersDisplaced_*_*',
        'keep *_muIsoDepositCalByAssociatorHitsDisplaced_*_*',
        'keep *_muIsoDepositJetsDisplaced_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep *_pixelClusterTagInfos_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauBasicDiscriminators_*_*',
        'keep *_hpsPFTauBasicDiscriminatorsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByMuonRejection3_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'drop recoConversions_conversions_uncleanedConversions_*',
        'keep recoConversions_mustacheConversions_*_*',
        'keep *_gsfTracksOpenConversions_*_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep recoCaloClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep recoGsfElectrons_lowPtGsfElectrons_*_*',
        'keep recoGsfElectronCores_lowPtGsfElectronCores_*_*',
        'keep recoGsfTracks_lowPtGsfEleGsfTracks_*_*',
        'keep *_lowPtGsfToTrackLinks_*_*',
        'keep recoSuperClusters_lowPtGsfElectronSuperClusters_*_*',
        'keep floatedmValueMap_lowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_rekeyLowPtGsfElectronSeedValueMaps_*_*',
        'keep floatedmValueMap_lowPtGsfElectronID_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_AddedMuonsAndHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedCosmicsMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedFakeMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedHF_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughMuons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedPunchThroughNeutralHadrons_*',
        'keep recoPFCandidates_particleFlowTmp_CleanedTrackerAndGlobalMuons_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_totemT2Digis_*_*',
        'keep TotemT2DigiedmNewDetSetVector_totemT2Digis_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemT2Digis_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_diamondSampicLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep TotemTimingLocalTrackedmDetSetVector_totemTimingLocalTracks_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoForwardProtons_ctppsProtons_*_*',
        'keep *_muonGEMDigis_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackingParticles_*_*',
        'keep *_prunedDigiSimLinks_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_ak*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep edmHepMCProduct_LHCTransport_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_prunedTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *DigiSimLinkedmDetSetVector_simMuonGEMDigis_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simKBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'keep *_gtStage2Digis_*_*',
        'keep *_gmtStage2Digis_*_*',
        'keep *_caloStage2Digis_*_*',
        'keep *_simEmtfShowers_*_*',
        'keep *_simGmtShowerDigis_*_*',
        'keep *_simMuonGEMPadDigis_*_*',
        'keep *_simMuonGEMPadDigiClusters_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simHitTPAssocProducer_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simMuonGEMDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitivePhase2Digis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlcaPixelClusterCounts_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltCtfWithMaterialTracksP5_*_*',
        'keep *_hltDeepBLifetimeTagInfosPF_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDeepSecondaryVertexTagInfosPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurityPPOnAA_*_*',
        'keep *_hltDoubletRecoveryPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3Associator_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFullSiStripRawToClustersFacility_*_*',
        'keep *_hltGlbTrkMuonCandsNoVtx_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHITrackingSiStripRawToClustersFacilityFullZeroSuppression_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltImpactParameterTagInfos_*_*',
        'keep *_hltInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0PFlowCtfWithMaterialTracks_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2MergedForDisplaced_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonAndMuonFromL1Merged_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltMergedTracksForBTag_*_*',
        'keep *_hltMergedTracksPPOnAA_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFJetForPNetAK8_*_*',
        'keep *_hltPFMETNoMuProducer_*_*',
        'keep *_hltPFMETProducer_*_*',
        'keep *_hltPFMETTypeOne_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPPSCalibrationRaw_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTagsAK8_*_*',
        'keep *_hltParticleNetDiscriminatorsJetTags_*_*',
        'keep *_hltParticleNetJetTagInfos_*_*',
        'keep *_hltPixelTracksPPOnAA_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVerticesPPOnAA_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelClustersAfterSplittingPPOnAA_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusterizerForRawPrime_*_*',
        'keep *_hltSiStripClusters2ApproxClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVerticesPPOnAA_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilterPPOnAA_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DetIds_hltSiStripRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerNoVtx_*_*',
        'keep *_hltScoutingMuonPackerVtx_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)


process.DQMStore = cms.Service("DQMStore")


process.MessageLogger = cms.Service("MessageLogger",
    cerr = cms.untracked.PSet(
        FwkReport = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            reportEvery = cms.untracked.int32(1)
        ),
        FwkSummary = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            reportEvery = cms.untracked.int32(1)
        ),
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        enable = cms.untracked.bool(True),
        enableStatistics = cms.untracked.bool(False),
        lineLength = cms.optional.untracked.int32,
        noLineBreaks = cms.optional.untracked.bool,
        noTimeStamps = cms.untracked.bool(False),
        resetStatistics = cms.untracked.bool(False),
        statisticsThreshold = cms.untracked.string('WARNING'),
        threshold = cms.untracked.string('INFO'),
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    cout = cms.untracked.PSet(
        enable = cms.untracked.bool(False),
        enableStatistics = cms.untracked.bool(False),
        lineLength = cms.optional.untracked.int32,
        noLineBreaks = cms.optional.untracked.bool,
        noTimeStamps = cms.optional.untracked.bool,
        resetStatistics = cms.untracked.bool(False),
        statisticsThreshold = cms.optional.untracked.string,
        threshold = cms.optional.untracked.string,
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    debugModules = cms.untracked.vstring(),
    default = cms.untracked.PSet(
        limit = cms.optional.untracked.int32,
        lineLength = cms.untracked.int32(80),
        noLineBreaks = cms.untracked.bool(False),
        noTimeStamps = cms.untracked.bool(False),
        reportEvery = cms.untracked.int32(1),
        statisticsThreshold = cms.untracked.string('INFO'),
        threshold = cms.untracked.string('INFO'),
        timespan = cms.optional.untracked.int32,
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            limit = cms.optional.untracked.int32,
            reportEvery = cms.untracked.int32(1),
            timespan = cms.optional.untracked.int32
        )
    ),
    files = cms.untracked.PSet(
        allowAnyLabel_=cms.optional.untracked.PSetTemplate(
            enableStatistics = cms.untracked.bool(False),
            extension = cms.optional.untracked.string,
            filename = cms.optional.untracked.string,
            lineLength = cms.optional.untracked.int32,
            noLineBreaks = cms.optional.untracked.bool,
            noTimeStamps = cms.optional.untracked.bool,
            output = cms.optional.untracked.string,
            resetStatistics = cms.untracked.bool(False),
            statisticsThreshold = cms.optional.untracked.string,
            threshold = cms.optional.untracked.string,
            allowAnyLabel_=cms.optional.untracked.PSetTemplate(
                limit = cms.optional.untracked.int32,
                reportEvery = cms.untracked.int32(1),
                timespan = cms.optional.untracked.int32
            )
        )
    ),
    suppressDebug = cms.untracked.vstring(),
    suppressFwkInfo = cms.untracked.vstring(),
    suppressInfo = cms.untracked.vstring(),
    suppressWarning = cms.untracked.vstring(),
    allowAnyLabel_=cms.optional.untracked.PSetTemplate(
        limit = cms.optional.untracked.int32,
        reportEvery = cms.untracked.int32(1),
        timespan = cms.optional.untracked.int32
    )
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    CTPPSFastRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1357987)
    ),
    LHCTransport = cms.PSet(
        engineName = cms.untracked.string('TRandom3'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    MuonSimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(987346)
    ),
    RPSiDetDigitizer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(137137)
    ),
    RPixDetDigitizer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(137137)
    ),
    VtxSmeared = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(98765432)
    ),
    ecalPreshowerRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6541321)
    ),
    ecalRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(654321)
    ),
    externalLHEProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(234567)
    ),
    famosPileUp = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    fastSimProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(13579)
    ),
    fastTrackerRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(24680)
    ),
    g4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    generator = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hbhereco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hfreco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hiSignal = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hiSignalG4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    hiSignalLHCTransport = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(88776655)
    ),
    horeco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    l1ParamMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6453209)
    ),
    mix = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixData = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixGenPU = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixRecoTracks = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixSimCaloHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    paramMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(54525)
    ),
    saveFileName = cms.untracked.string(''),
    simBeamSpotFilter = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    simMuonCSCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11223344)
    ),
    simMuonDTDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonGEMDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonRPCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simSiStripDigiSimLink = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    )
)


process.CSCChannelMapperESProducer = cms.ESProducer("CSCChannelMapperESProducer",
    AlgoName = cms.string('CSCChannelMapperPostls1')
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    debugV = cms.untracked.bool(False),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.CSCIndexerESProducer = cms.ESProducer("CSCIndexerESProducer",
    AlgoName = cms.string('CSCIndexerPostls1')
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring(
        'HCAL',
        'ZDC',
        'EcalBarrel',
        'EcalEndcap',
        'EcalPreshower',
        'TOWER'
    )
)


process.CaloTPGTranscoder = cms.ESProducer("CaloTPGTranscoderULUTs",
    LUTfactor = cms.vint32(1, 2, 5, 0),
    RCTLSB = cms.double(0.25),
    ZS = cms.vint32(4, 2, 1, 0),
    hcalLUT1 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/outputLUTtranscoder_physics.dat'),
    hcalLUT2 = cms.FileInPath('CalibCalorimetry/CaloTPG/data/TPGcalcDecompress2.txt'),
    ietaLowerBound = cms.vint32(1, 18, 27, 29),
    ietaUpperBound = cms.vint32(17, 26, 28, 32),
    linearLUTs = cms.bool(True),
    nominal_gain = cms.double(0.177),
    read_Ascii_Compression_LUTs = cms.bool(False),
    read_Ascii_RCT_LUTs = cms.bool(False),
    tpScales = cms.PSet(
        HBHE = cms.PSet(
            LSBQIE11 = cms.double(0.0625),
            LSBQIE11Overlap = cms.double(0.0625),
            LSBQIE8 = cms.double(0.125)
        ),
        HF = cms.PSet(
            NCTShift = cms.int32(2),
            RCTShift = cms.int32(3)
        )
    )
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CaloTowerTopologyEP = cms.ESProducer("CaloTowerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.CastorDbProducer = cms.ESProducer("CastorDbProducer",
    appendToDataLabel = cms.string('')
)


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    DDDetector = cms.ESInputTag("",""),
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    attribute = cms.string('MuStructure'),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    value = cms.string('MuonBarrelDT')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService",
    maxExtrapolationTimeInSec = cms.uint32(0)
)


process.EcalLaserCorrectionServiceMC = cms.ESProducer("EcalLaserCorrectionServiceMC",
    appendToDataLabel = cms.string('')
)


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GEMGeometryESModule = cms.ESProducer("GEMGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.GlobalParameters = cms.ESProducer("StableParametersTrivialProducer",
    IfCaloEtaNumberBits = cms.uint32(4),
    IfMuEtaNumberBits = cms.uint32(6),
    NumberChips = cms.uint32(5),
    NumberConditionChips = cms.uint32(1),
    NumberL1CenJet = cms.uint32(4),
    NumberL1EGamma = cms.uint32(12),
    NumberL1ForJet = cms.uint32(4),
    NumberL1IsoEG = cms.uint32(4),
    NumberL1Jet = cms.uint32(12),
    NumberL1JetCounts = cms.uint32(12),
    NumberL1Mu = cms.uint32(4),
    NumberL1Muon = cms.uint32(12),
    NumberL1NoIsoEG = cms.uint32(4),
    NumberL1Tau = cms.uint32(8),
    NumberL1TauJet = cms.uint32(4),
    NumberPhysTriggers = cms.uint32(512),
    NumberPhysTriggersExtended = cms.uint32(64),
    NumberPsbBoards = cms.int32(7),
    NumberTechnicalTriggers = cms.uint32(64),
    OrderConditionChip = cms.vint32(1),
    OrderOfChip = cms.vint32(1),
    PinsOnChip = cms.uint32(512),
    PinsOnConditionChip = cms.uint32(512),
    TotalBxInEvent = cms.int32(5),
    UnitLength = cms.int32(8),
    WordLength = cms.int32(64),
    appendToDataLabel = cms.string('')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.HcalTPGCoderULUT = cms.ESProducer("HcalTPGCoderULUT",
    FGLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/HBHE_FG_LUT.dat'),
    FG_HF_thresholds = cms.vuint32(17, 255),
    LUTGenerationMode = cms.bool(True),
    MaskBit = cms.int32(32768),
    RCalibFile = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/RecHit-TPG-calib.dat'),
    applyFixPCC = cms.bool(True),
    contain1TSHB = cms.bool(False),
    contain1TSHE = cms.bool(False),
    containPhaseNSHB = cms.double(6.0),
    containPhaseNSHE = cms.double(6.0),
    inputLUTs = cms.FileInPath('CalibCalorimetry/HcalTPGAlgos/data/inputLUTcoder_physics.dat'),
    linearLUTs = cms.bool(True),
    overrideDBweightsAndFilterHB = cms.bool(False),
    overrideDBweightsAndFilterHE = cms.bool(False),
    read_Ascii_LUTs = cms.bool(False),
    read_FG_LUTs = cms.bool(False),
    read_XML_LUTs = cms.bool(False),
    tpScales = cms.PSet(
        HBHE = cms.PSet(
            LSBQIE11 = cms.double(0.0625),
            LSBQIE11Overlap = cms.double(0.0625),
            LSBQIE8 = cms.double(0.125)
        ),
        HF = cms.PSet(
            NCTShift = cms.int32(2),
            RCTShift = cms.int32(3)
        )
    )
)


process.HcalTrigTowerGeometryESProducer = cms.ESProducer("HcalTrigTowerGeometryESProducer")


process.L1DTConfigFromDB = cms.ESProducer("DTConfigDBProducer",
    DTTPGMap = cms.untracked.PSet(
    **dict(
        [
            ("wh0st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh0st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh0st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh0st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh0st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh0st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh0st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh0st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh0st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se4" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("wh1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se4" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("wh1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se4" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("wh1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("wh2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("wh2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("wh2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("wh2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("wh2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("wh2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("wh2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("wh2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se3" , cms.untracked.vint32(50, 48, 50, 13) ),
            ("whm1st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm1st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se3" , cms.untracked.vint32(60, 48, 60, 15) ),
            ("whm1st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm1st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se3" , cms.untracked.vint32(72, 48, 72, 18) ),
            ("whm1st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm1st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm1st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm1st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm1st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm1st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm1st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
        ] +
        [
            ("whm2st1se1" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se10" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se11" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se12" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se2" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se3" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se4" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se5" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se6" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se7" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se8" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st1se9" , cms.untracked.vint32(50, 58, 50, 13) ),
            ("whm2st2se1" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se10" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se11" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se12" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se2" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se3" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se4" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se5" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se6" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se7" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se8" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st2se9" , cms.untracked.vint32(60, 58, 60, 15) ),
            ("whm2st3se1" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se10" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se11" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se12" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se2" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se3" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se4" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se5" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se6" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se7" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se8" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st3se9" , cms.untracked.vint32(72, 58, 72, 18) ),
            ("whm2st4se1" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se10" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se11" , cms.untracked.vint32(48, 0, 48, 12) ),
            ("whm2st4se12" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se13" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se14" , cms.untracked.vint32(60, 0, 60, 15) ),
            ("whm2st4se2" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se3" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se4" , cms.untracked.vint32(72, 0, 72, 18) ),
            ("whm2st4se5" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se6" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se7" , cms.untracked.vint32(96, 0, 96, 24) ),
            ("whm2st4se8" , cms.untracked.vint32(92, 0, 92, 23) ),
            ("whm2st4se9" , cms.untracked.vint32(48, 0, 48, 12) ),
            ]
        )
    ),
    DTTPGParameters = cms.PSet(
        Debug = cms.untracked.bool(False),
        SectCollParameters = cms.PSet(
            Debug = cms.untracked.bool(False),
            SCCSP1 = cms.int32(0),
            SCCSP2 = cms.int32(0),
            SCCSP3 = cms.int32(0),
            SCCSP4 = cms.int32(0),
            SCCSP5 = cms.int32(0),
            SCECF1 = cms.bool(False),
            SCECF2 = cms.bool(False),
            SCECF3 = cms.bool(False),
            SCECF4 = cms.bool(False)
        ),
        TUParameters = cms.PSet(
            BtiParameters = cms.PSet(
                AC1 = cms.int32(0),
                AC2 = cms.int32(3),
                ACH = cms.int32(1),
                ACL = cms.int32(2),
                CH = cms.int32(41),
                CL = cms.int32(22),
                DEAD = cms.int32(31),
                Debug = cms.untracked.int32(0),
                KACCTHETA = cms.int32(1),
                KMAX = cms.int32(64),
                LH = cms.int32(21),
                LL = cms.int32(2),
                LTS = cms.int32(3),
                PTMS0 = cms.int32(0),
                PTMS1 = cms.int32(0),
                PTMS10 = cms.int32(1),
                PTMS11 = cms.int32(1),
                PTMS12 = cms.int32(1),
                PTMS13 = cms.int32(1),
                PTMS14 = cms.int32(1),
                PTMS15 = cms.int32(1),
                PTMS16 = cms.int32(1),
                PTMS17 = cms.int32(1),
                PTMS18 = cms.int32(1),
                PTMS19 = cms.int32(1),
                PTMS2 = cms.int32(0),
                PTMS20 = cms.int32(1),
                PTMS21 = cms.int32(1),
                PTMS22 = cms.int32(1),
                PTMS23 = cms.int32(1),
                PTMS24 = cms.int32(1),
                PTMS25 = cms.int32(1),
                PTMS26 = cms.int32(1),
                PTMS27 = cms.int32(1),
                PTMS28 = cms.int32(1),
                PTMS29 = cms.int32(1),
                PTMS3 = cms.int32(0),
                PTMS30 = cms.int32(0),
                PTMS31 = cms.int32(0),
                PTMS4 = cms.int32(1),
                PTMS5 = cms.int32(1),
                PTMS6 = cms.int32(1),
                PTMS7 = cms.int32(1),
                PTMS8 = cms.int32(1),
                PTMS9 = cms.int32(1),
                RE43 = cms.int32(2),
                RH = cms.int32(61),
                RL = cms.int32(42),
                RON = cms.bool(True),
                SET = cms.int32(7),
                ST43 = cms.int32(42),
                WEN0 = cms.int32(1),
                WEN1 = cms.int32(1),
                WEN2 = cms.int32(1),
                WEN3 = cms.int32(1),
                WEN4 = cms.int32(1),
                WEN5 = cms.int32(1),
                WEN6 = cms.int32(1),
                WEN7 = cms.int32(1),
                WEN8 = cms.int32(1),
                XON = cms.bool(False)
            ),
            Debug = cms.untracked.bool(False),
            LutParameters = cms.PSet(
                BTIC = cms.untracked.int32(0),
                D = cms.untracked.double(0),
                Debug = cms.untracked.bool(False),
                WHEEL = cms.untracked.int32(-1),
                XCN = cms.untracked.double(0)
            ),
            TSPhiParameters = cms.PSet(
                Debug = cms.untracked.bool(False),
                TSMCCE1 = cms.bool(True),
                TSMCCE2 = cms.bool(False),
                TSMCCEC = cms.bool(False),
                TSMCGS1 = cms.bool(True),
                TSMCGS2 = cms.bool(True),
                TSMGS1 = cms.int32(1),
                TSMGS2 = cms.int32(1),
                TSMHSP = cms.int32(1),
                TSMHTE1 = cms.bool(True),
                TSMHTE2 = cms.bool(False),
                TSMHTEC = cms.bool(False),
                TSMMSK1 = cms.int32(312),
                TSMMSK2 = cms.int32(312),
                TSMNOE1 = cms.bool(True),
                TSMNOE2 = cms.bool(False),
                TSMNOEC = cms.bool(False),
                TSMWORD = cms.int32(255),
                TSSCCE1 = cms.bool(True),
                TSSCCE2 = cms.bool(False),
                TSSCCEC = cms.bool(False),
                TSSCGS1 = cms.bool(True),
                TSSCGS2 = cms.bool(True),
                TSSGS1 = cms.int32(1),
                TSSGS2 = cms.int32(1),
                TSSHTE1 = cms.bool(True),
                TSSHTE2 = cms.bool(False),
                TSSHTEC = cms.bool(False),
                TSSMSK1 = cms.int32(312),
                TSSMSK2 = cms.int32(312),
                TSSNOE1 = cms.bool(True),
                TSSNOE2 = cms.bool(False),
                TSSNOEC = cms.bool(False),
                TSTREN0 = cms.bool(True),
                TSTREN1 = cms.bool(True),
                TSTREN10 = cms.bool(True),
                TSTREN11 = cms.bool(True),
                TSTREN12 = cms.bool(True),
                TSTREN13 = cms.bool(True),
                TSTREN14 = cms.bool(True),
                TSTREN15 = cms.bool(True),
                TSTREN16 = cms.bool(True),
                TSTREN17 = cms.bool(True),
                TSTREN18 = cms.bool(True),
                TSTREN19 = cms.bool(True),
                TSTREN2 = cms.bool(True),
                TSTREN20 = cms.bool(True),
                TSTREN21 = cms.bool(True),
                TSTREN22 = cms.bool(True),
                TSTREN23 = cms.bool(True),
                TSTREN3 = cms.bool(True),
                TSTREN4 = cms.bool(True),
                TSTREN5 = cms.bool(True),
                TSTREN6 = cms.bool(True),
                TSTREN7 = cms.bool(True),
                TSTREN8 = cms.bool(True),
                TSTREN9 = cms.bool(True)
            ),
            TSThetaParameters = cms.PSet(
                Debug = cms.untracked.bool(False)
            ),
            TracoParameters = cms.PSet(
                BTIC = cms.int32(32),
                DD = cms.int32(18),
                Debug = cms.untracked.int32(0),
                FHISM = cms.int32(0),
                FHTMSK = cms.int32(0),
                FHTPRF = cms.int32(1),
                FLTMSK = cms.int32(1),
                FPRGCOMP = cms.int32(2),
                FSLMSK = cms.int32(0),
                IBTIOFF = cms.int32(0),
                KPRGCOM = cms.int32(255),
                KRAD = cms.int32(0),
                LTF = cms.int32(0),
                LTS = cms.int32(0),
                LVALIDIFH = cms.int32(0),
                REUSEI = cms.int32(1),
                REUSEO = cms.int32(1),
                SHISM = cms.int32(0),
                SHTMSK = cms.int32(0),
                SHTPRF = cms.int32(1),
                SLTMSK = cms.int32(1),
                SPRGCOMP = cms.int32(2),
                SSLMSK = cms.int32(0),
                TRGENB0 = cms.int32(1),
                TRGENB1 = cms.int32(1),
                TRGENB10 = cms.int32(1),
                TRGENB11 = cms.int32(1),
                TRGENB12 = cms.int32(1),
                TRGENB13 = cms.int32(1),
                TRGENB14 = cms.int32(1),
                TRGENB15 = cms.int32(1),
                TRGENB2 = cms.int32(1),
                TRGENB3 = cms.int32(1),
                TRGENB4 = cms.int32(1),
                TRGENB5 = cms.int32(1),
                TRGENB6 = cms.int32(1),
                TRGENB7 = cms.int32(1),
                TRGENB8 = cms.int32(1),
                TRGENB9 = cms.int32(1)
            )
        )
    ),
    TracoLutsFromDB = cms.bool(True),
    UseBtiAcceptParam = cms.bool(True),
    UseT0 = cms.bool(False),
    bxOffset = cms.int32(19),
    cfgConfig = cms.bool(False),
    debug = cms.bool(False),
    debugBti = cms.int32(0),
    debugDB = cms.bool(False),
    debugLUTs = cms.bool(False),
    debugPed = cms.bool(False),
    debugSC = cms.bool(False),
    debugTSP = cms.bool(False),
    debugTST = cms.bool(False),
    debugTU = cms.bool(False),
    debugTraco = cms.int32(0),
    finePhase = cms.double(25.0)
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.ParabolicParametrizedMagneticFieldProducer = cms.ESProducer("AutoParametrizedMagneticFieldProducer",
    label = cms.untracked.string('ParabolicMf'),
    valueOverride = cms.int32(-1),
    version = cms.string('Parabolic')
)


process.RPCConeBuilder = cms.ESProducer("RPCConeBuilder",
    towerBeg = cms.int32(0),
    towerEnd = cms.int32(16)
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    fromDD4hep = cms.untracked.bool(False),
    fromDDD = cms.untracked.bool(False)
)


process.SiPixelFEDChannelContainerESProducer = cms.ESProducer("PixelFEDChannelCollectionProducer")


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0),
    PreFilter = cms.bool(False)
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.TrackerAdditionalParametersPerDet = cms.ESProducer("TrackerAdditionalParametersPerDetESModule",
    appendToDataLabel = cms.string('')
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer",
    usePhase2Stacks = cms.bool(False)
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("DD4hep_VolumeBasedMagneticFieldESProducerFromDB",
    debugBuilder = cms.untracked.bool(False),
    label = cms.untracked.string(''),
    valueOverride = cms.int32(-1)
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.caloConfig = cms.ESProducer("L1TCaloConfigESProducer",
    fwVersionLayer2 = cms.uint32(3),
    l1Epoch = cms.string('Stage1')
)


process.ctppsBeamParametersFromLHCInfoESSource = cms.ESProducer("CTPPSBeamParametersFromLHCInfoESSource",
    appendToDataLabel = cms.string(''),
    beamDivX45 = cms.double(0.1),
    beamDivX56 = cms.double(0.1),
    beamDivY45 = cms.double(0.1),
    beamDivY56 = cms.double(0.1),
    lhcInfoLabel = cms.string(''),
    lhcInfoPerFillLabel = cms.string(''),
    lhcInfoPerLSLabel = cms.string(''),
    useNewLHCInfo = cms.bool(True),
    vtxOffsetX45 = cms.double(0.01),
    vtxOffsetX56 = cms.double(0.01),
    vtxOffsetY45 = cms.double(0.01),
    vtxOffsetY56 = cms.double(0.01),
    vtxOffsetZ45 = cms.double(0.01),
    vtxOffsetZ56 = cms.double(0.01),
    vtxStddevX = cms.double(0.02),
    vtxStddevY = cms.double(0.02),
    vtxStddevZ = cms.double(0.02)
)


process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer("CTPPSInterpolatedOpticalFunctionsESSource",
    appendToDataLabel = cms.string(''),
    lhcInfoLabel = cms.string(''),
    lhcInfoPerFillLabel = cms.string(''),
    lhcInfoPerLSLabel = cms.string(''),
    opticsLabel = cms.string(''),
    useNewLHCInfo = cms.bool(True)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.fakeTwinMuxParams = cms.ESProducer("L1TTwinMuxParamsESProducer",
    CorrectDTBxwRPC = cms.bool(True),
    dphiWindowBxShift = cms.uint32(9999),
    fwVersion = cms.uint32(1),
    useLowQDT = cms.bool(False),
    useOnlyDT = cms.bool(False),
    useOnlyRPC = cms.bool(False),
    useRpcBxForDtBelowQuality = cms.uint32(4),
    verbose = cms.bool(False)
)


process.hcalDDDRecConstants = cms.ESProducer("HcalDDDRecConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDDDSimConstants = cms.ESProducer("HcalDDDSimConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalTopologyIdeal = cms.ESProducer("HcalTopologyIdealEP",
    Exclude = cms.untracked.string(''),
    MergePosition = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    dump = cms.untracked.vstring(''),
    file = cms.untracked.string('')
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    debugV = cms.untracked.bool(False),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    DDDetector = cms.ESInputTag("",""),
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    attribute = cms.string('MuStructure'),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False),
    value = cms.string('MuonBarrelDT')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.l1tHGCalTriggerGeometryESProducer = cms.ESProducer("HGCalTriggerGeometryESProducer",
    TriggerGeometry = cms.PSet(
        DisconnectedLayers = cms.vuint32(
            2, 4, 6, 8, 10,
            12, 14, 16, 18, 20,
            22, 24, 26, 28
        ),
        DisconnectedModules = cms.vuint32(0),
        L1TLinksMapping = cms.FileInPath('L1Trigger/L1THGCal/data/links_mapping_decentralized_signaldriven_0.txt'),
        L1TModulesMapping = cms.FileInPath('L1Trigger/L1THGCal/data/panel_mapping_V9_decentralized_jun19_0.txt'),
        ScintillatorLinksPerModule = cms.uint32(2),
        ScintillatorModuleSize = cms.uint32(6),
        ScintillatorTriggerCellSize = cms.uint32(2),
        TriggerGeometryName = cms.string('HGCalTriggerGeometryV9Imp2')
    )
)


process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer("MultipleScatteringParametrisationMakerESProducer",
    appendToDataLabel = cms.string('')
)


process.muonGeometryConstants = cms.ESProducer("MuonGeometryConstantsESModule",
    appendToDataLabel = cms.string(''),
    fromDD4hep = cms.bool(True)
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiPixelQualityFromDbRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        )
    ),
    appendToDataLabel = cms.string(''),
    siPixelQualityFromDbLabel = cms.string('')
)


process.siPixelQualityForDigitizerESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiPixelQualityFromDbRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        )
    ),
    appendToDataLabel = cms.string('forDigitizer'),
    siPixelQualityFromDbLabel = cms.string('forDigitizer')
)


process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer("SiStripBackPlaneCorrectionDepESProducer",
    BackPlaneCorrectionDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    BackPlaneCorrectionPeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    )
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    APVGain = cms.VPSet(
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGainRcd')
        ),
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGain2Rcd')
        )
    ),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripGainSimESProducer = cms.ESProducer("SiStripGainSimESProducer",
    APVGain = cms.VPSet(cms.PSet(
        Label = cms.untracked.string(''),
        NormalizationFactor = cms.untracked.double(1.0),
        Record = cms.string('SiStripApvGainSimRcd')
    )),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripLorentzAngleRcd')
    ),
    LorentzAnglePeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripLorentzAngleRcd')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiStripDetVOffRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        )
    ),
    PrintDebugOutput = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    appendToDataLabel = cms.string('')
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.stripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('stripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.trackerGeometryDB = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.trackerNumberingGeometryDB = cms.ESProducer("TrackerGeometricDetESModule",
    appendToDataLabel = cms.string(''),
    fromDD4hep = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.trackerTopology = cms.ESProducer("TrackerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.zdcTopologyEP = cms.ESProducer("ZdcTopologyEP",
    appendToDataLabel = cms.string('')
)


process.CSCChannelMapperESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCChannelMapperRecord')
)


process.CSCIndexerESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCIndexerRecord')
)


process.CSCL1TPLookupTableEP = cms.ESSource("CSCL1TPLookupTableEP",
    esDiffToSlopeME11aFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11a_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11a_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11a_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11a_odd_GEMlayer2.txt'
    ),
    esDiffToSlopeME11bFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11b_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11b_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11b_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME11b_odd_GEMlayer2.txt'
    ),
    esDiffToSlopeME21Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME21_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME21_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME21_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/BendingAngle/SlopeAmendment_ME21_odd_GEMlayer2.txt'
    ),
    gemCscSlopeCorrectionFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11a_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11b_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME21_even_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11a_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11b_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME21_odd_GEMlayer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11a_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11b_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME21_even_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11a_odd_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME11b_odd_GEMlayer2.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/ExtrapolationBySlope_ME21_odd_GEMlayer2.txt'
    ),
    gemCscSlopeCosiCorrectionFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME11a_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME11b_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME21_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME11a_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME11b_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/GEMCSCconsistentSlopeCorr_ME21_odd_layer1.txt'
    ),
    gemCscSlopeCosiFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME11a_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME11a_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME11a_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME11a_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME11b_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME11b_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME11b_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME11b_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME21_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_2to1_SlopeShift_ME21_odd_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME21_even_layer1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/SlopeCorrection/FacingChambers/CSCconsistency_3to1_SlopeShift_ME21_odd_layer1.txt'
    ),
    padToEsME11aFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME1a_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME1a_odd.txt'
    ),
    padToEsME11bFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME1b_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME1b_odd.txt'
    ),
    padToEsME21Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME21_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_pad_es_ME21_odd.txt'
    ),
    positionLUTFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodePosOffsetLUT_pat0_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodePosOffsetLUT_pat1_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodePosOffsetLUT_pat2_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodePosOffsetLUT_pat3_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodePosOffsetLUT_pat4_v1.txt'
    ),
    rollToMaxWgME11Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_max_wg_ME11_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_max_wg_ME11_odd.txt'
    ),
    rollToMaxWgME21Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_max_wg_ME21_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_max_wg_ME21_odd.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l2_max_wg_ME21_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l2_max_wg_ME21_odd.txt'
    ),
    rollToMinWgME11Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_min_wg_ME11_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_min_wg_ME11_odd.txt'
    ),
    rollToMinWgME21Files = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_min_wg_ME21_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l1_min_wg_ME21_odd.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l2_min_wg_ME21_even.txt',
        'L1Trigger/CSCTriggerPrimitives/data/GEMCSC/CoordinateConversion/GEMCSCLUT_roll_l2_min_wg_ME21_odd.txt'
    ),
    slopeLUTFiles = cms.vstring(
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodeSlopeLUT_pat0_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodeSlopeLUT_pat1_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodeSlopeLUT_pat2_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodeSlopeLUT_pat3_v1.txt',
        'L1Trigger/CSCTriggerPrimitives/data/CCLUT/CSCComparatorCodeSlopeLUT_pat4_v1.txt'
    )
)


process.GlobalParametersRcdSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TGlobalParametersRcd')
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string('140X_mcRun3_2024_realistic_v26'),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet()
)


process.HcalTimeSlewEP = cms.ESSource("HcalTimeSlewEP",
    appendToDataLabel = cms.string('HBHE'),
    timeSlewParametersM2 = cms.VPSet(
        cms.PSet(
            slope = cms.double(-3.178648),
            tmax = cms.double(16.0),
            tzero = cms.double(23.960177)
        ),
        cms.PSet(
            slope = cms.double(-1.5610227),
            tmax = cms.double(10.0),
            tzero = cms.double(11.977461)
        ),
        cms.PSet(
            slope = cms.double(-1.075824),
            tmax = cms.double(6.25),
            tzero = cms.double(9.109694)
        )
    ),
    timeSlewParametersM3 = cms.VPSet(
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(15.5),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-3.2),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(32.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        )
    )
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.bmbtfParamsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TMuonBarrelParamsRcd')
)


process.caloConfigSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TCaloConfigRcd')
)


process.eegeom = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd')
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    GainWidthsForTrigPrims = cms.bool(False),
    HBRecalibration = cms.bool(False),
    HBmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHB.txt'),
    HBreCalibCutoff = cms.double(100.0),
    HERecalibration = cms.bool(False),
    HEmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHE.txt'),
    HEreCalibCutoff = cms.double(100.0),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HFRecalibration = cms.bool(False),
    SiPMCharacteristics = cms.VPSet(
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(36000)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(2500)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(0)
        )
    ),
    hb = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.19),
        gainWidth = cms.vdouble(0.0),
        mcShape = cms.int32(125),
        noiseCorrelation = cms.vdouble(0.0),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(3.285),
        pedestalWidth = cms.double(0.809),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.49, 1.8, 7.2, 37.9),
        qieSlope = cms.vdouble(0.912, 0.917, 0.922, 0.923),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(8)
    ),
    hbUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        noiseCorrelation = cms.vdouble(0.26, 0.254),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(150),
            intlumiToNeutrons = cms.double(367000000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(-5)
        ),
        recoShape = cms.int32(208),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(16)
    ),
    he = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.23),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(125),
        noiseCorrelation = cms.vdouble(0.0),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(3.163),
        pedestalWidth = cms.double(0.9698),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.38, 2.0, 7.6, 39.6),
        qieSlope = cms.vdouble(0.912, 0.916, 0.92, 0.922),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(9)
    ),
    heUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        noiseCorrelation = cms.vdouble(0.26, 0.254),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(75),
            intlumiToNeutrons = cms.double(29200000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(5)
        ),
        recoShape = cms.int32(208),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(16)
    ),
    hf = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        noiseCorrelation = cms.vdouble(0.0),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(9.354),
        pedestalWidth = cms.double(2.516),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(-0.87, 1.4, 7.8, -29.6),
        qieSlope = cms.vdouble(0.359, 0.358, 0.36, 0.367),
        qieType = cms.int32(0),
        recoShape = cms.int32(301),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(-9999)
    ),
    hfUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        noiseCorrelation = cms.vdouble(0.0),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(13.33),
        pedestalWidth = cms.double(3.33),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(0.0697, -0.7405, 12.38, -671.9),
        qieSlope = cms.vdouble(0.297, 0.298, 0.298, 0.313),
        qieType = cms.int32(1),
        recoShape = cms.int32(301),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(-9999)
    ),
    ho = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.006, 0.0087),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(201),
        noiseCorrelation = cms.vdouble(0.0),
        noiseThreshold = cms.double(0.0),
        pedestal = cms.double(12.06),
        pedestalWidth = cms.double(0.6285),
        photoelectronsToAnalog = cms.double(4.0),
        qieOffset = cms.vdouble(-0.44, 1.4, 7.1, 38.5),
        qieSlope = cms.vdouble(0.907, 0.915, 0.92, 0.921),
        qieType = cms.int32(0),
        recoShape = cms.int32(201),
        seedThreshold = cms.double(0.1),
        zsThreshold = cms.int32(24)
    ),
    iLumi = cms.double(-1.0),
    killHE = cms.bool(False),
    testHEPlan1 = cms.bool(False),
    testHFQIE10 = cms.bool(False),
    toGet = cms.untracked.vstring('GainWidths'),
    useHBUpgrade = cms.bool(True),
    useHEUpgrade = cms.bool(True),
    useHFUpgrade = cms.bool(True),
    useHOUpgrade = cms.bool(True),
    useIeta18depth1 = cms.bool(False),
    useLayer0Weight = cms.bool(True)
)


process.l1ugmtdb = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        connectionTimeout = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    toGet = cms.VPSet(cms.PSet(
        record = cms.string('L1TMuonGlobalParamsO2ORcd'),
        tag = cms.string('L1TMuonGlobalParamsPrototype_Stage2v0_hlt')
    ))
)


process.ppsPixelTopologyESSource = cms.ESSource("PPSPixelTopologyESSource",
    PitchSimX = cms.double(0.1),
    PitchSimY = cms.double(0.15),
    RunType = cms.string('Run3'),
    activeEdgeSigma = cms.double(0.02),
    appendToDataLabel = cms.string(''),
    deadEdgeWidth = cms.double(0.2),
    noOfPixelSimX = cms.int32(160),
    noOfPixelSimY = cms.int32(104),
    noOfPixels = cms.int32(16640),
    physActiveEdgeDist = cms.double(0.15),
    simXWidth = cms.double(16.6),
    simYWidth = cms.double(16.2),
    thickness = cms.double(0.23)
)


process.rpcconesrc = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1RPCConeBuilderRcd')
)


process.twinmuxParamsSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('L1TTwinMuxParamsRcd')
)


process.prefer("es_hardcode")

process.GeneInfoTask = cms.Task(process.genParticles)


process.PPSTransportTask = cms.Task(process.LHCTransport)


process.RPSiDetDigitizerTask = cms.Task(process.RPSiDetDigitizer)


process.RPixDetDigitizerTask = cms.Task(process.RPixDetDigitizer)


process.castorDigiTask = cms.Task()


process.ctppsDigiTask = cms.Task(process.RPixDetDigitizer)


process.ecalDigiTask = cms.Task(process.simEcalDigis, process.simEcalPreshowerDigis, process.simEcalTriggerPrimitiveDigis)


process.genJetParticlesTask = cms.Task(process.genParticlesForJets, process.genParticlesForJetsNoNu)


process.genMETParticlesTask = cms.Task(process.genCandidatesForMET, process.genParticlesForMETAllVisible)


process.hcalDigiTask = cms.Task(process.simHcalDigis, process.simHcalTTPDigis, process.simHcalTriggerPrimitiveDigis)


process.hiRecoGenJetsTask = cms.Task(process.ak1HiGenJets, process.ak2HiGenJets, process.ak3HiGenJets, process.ak4HiGenJets, process.ak5HiGenJets, process.ak6HiGenJets, process.ak7HiGenJets, process.iterativeCone5HiGenJets, process.kt4HiGenJets, process.kt6HiGenJets)


process.muonGEMDigiTask = cms.Task(process.simMuonGEMDigis)


process.muonME0PseudoDigi = cms.Task(process.simMuonME0PseudoDigis, process.simMuonME0PseudoReDigis)


process.muonME0RealDigi = cms.Task(process.simMuonME0Digis)


process.recoAllGenJetsNoMuNoNuTask = cms.Task(process.ak4GenJetsNoMuNoNu, process.ak8GenJetsNoMuNoNu)


process.recoAllGenJetsNoNuTask = cms.Task(process.ak4GenJetsNoNu, process.ak8GenJetsNoNu)


process.recoAllGenJetsTask = cms.Task(process.ak4GenJets, process.ak8GenJets)


process.recoGenJetsTask = cms.Task(process.ak4GenJets, process.ak4GenJetsNoNu, process.ak8GenJets, process.ak8GenJetsNoNu)


process.recoGenMETTask = cms.Task(process.genMetCalo, process.genMetTrue)


process.tpPruningTask = cms.Task(process.prunedDigiSimLinks, process.prunedTrackingParticles)


process.L1THFnoseVFE = cms.Task(process.l1tHFnoseVFEProducer)


process.L1THGCalBackEndLayer1 = cms.Task(process.l1tHGCalBackEndLayer1Producer)


process.L1THGCalBackEndLayer1HFNose = cms.Task(process.l1tHGCalBackEndLayer1ProducerHFNose)


process.L1THGCalBackEndLayer2 = cms.Task(process.l1tHGCalBackEndLayer2Producer)


process.L1THGCalBackEndLayer2HFNose = cms.Task(process.l1tHGCalBackEndLayer2ProducerHFNose)


process.L1THGCalBackEndStage1 = cms.Task(process.l1tHGCalBackEndStage1Producer)


process.L1THGCalBackEndStage2 = cms.Task(process.l1tHGCalBackEndStage2Producer)


process.L1THGCalConcentrator = cms.Task(process.l1tHGCalConcentratorProducer)


process.L1THGCalConcentratorHFNose = cms.Task(process.l1tHGCalConcentratorProducerHFNose)


process.L1THGCalTower = cms.Task(process.l1tHGCalTowerProducer)


process.L1THGCalTowerHFNose = cms.Task(process.l1tHGCalTowerProducerHFNose)


process.L1THGCalTowerMap = cms.Task(process.l1tHGCalTowerMapProducer)


process.L1THGCalTowerMapHFNose = cms.Task(process.l1tHGCalTowerMapProducerHFNose)


process.L1THGCalVFE = cms.Task(process.l1tHGCalVFEProducer)


process.L1TLayer1Task = cms.Task(process.l1tLayer1, process.l1tLayer1Barrel, process.l1tLayer1BarrelExtended, process.l1tLayer1EG, process.l1tLayer1EGElliptic, process.l1tLayer1Extended, process.l1tLayer1HF, process.l1tLayer1HGCal, process.l1tLayer1HGCalElliptic, process.l1tLayer1HGCalExtended, process.l1tLayer1HGCalNoTK)


process.L1TLayer1TaskInputsTask = cms.Task(process.l1tPFClustersFromCombinedCaloHCal, process.l1tPFClustersFromCombinedCaloHF, process.l1tPFClustersFromHGC3DClusters, process.l1tPFClustersFromL1EGClusters, process.l1tPFTracksFromL1Tracks, process.l1tPFTracksFromL1TracksExtended)


process.L1TLayer2EGTask = cms.Task(process.l1tLayer2Deregionizer, process.l1tLayer2EG, process.l1tLayer2EGElliptic)


process.L1TPFJetsEmulationTask = cms.Task(process.l1tLayer2Deregionizer, process.l1tSC4PFL1PuppiCorrectedEmulator, process.l1tSC4PFL1PuppiCorrectedEmulatorMHT, process.l1tSC4PFL1PuppiEmulator, process.l1tSC8PFL1PuppiCorrectedEmulator, process.l1tSC8PFL1PuppiEmulator)


process.L1TPFJetsExtendedTask = cms.Task(process.l1tLayer2DeregionizerExtended, process.l1tSC4PFL1PuppiExtended, process.l1tSC4PFL1PuppiExtendedCorrectedEmulator, process.l1tSC4PFL1PuppiExtendedEmulator)


process.L1TPFJetsPhase1Task_9x9 = cms.Task(process.l1tPhase1JetCalibrator9x9, process.l1tPhase1JetProducer9x9, process.l1tPhase1JetSumsProducer9x9)


process.L1TPFJetsPhase1Task_9x9trimmed = cms.Task(process.l1tPhase1JetCalibrator9x9trimmed, process.l1tPhase1JetProducer9x9trimmed, process.l1tPhase1JetSumsProducer9x9trimmed)


process.L1TPFJetsTask = cms.Task(process.l1tLayer2Deregionizer, process.l1tSC4PFL1PF, process.l1tSC4PFL1Puppi, process.l1tSC4PFL1PuppiCorrectedEmulator, process.l1tSC4PFL1PuppiCorrectedEmulatorMHT, process.l1tSC4PFL1PuppiEmulator, process.l1tSC8PFL1PuppiCorrectedEmulator, process.l1tSC8PFL1PuppiEmulator)


process.L1TTOoLLiPTask = cms.Task(process.L1TPFJetsExtendedTask, process.l1tTOoLLiPProducer, process.l1tTOoLLiPProducerCorrectedEmulator)


process.L1TZDCEmulationTask = cms.Task(process.l1tZDCEtSums)


process.SimL1TCalorimeterTask = cms.Task(process.simCaloStage2Digis, process.simCaloStage2Layer1Digis, process.simCaloStage2Layer1Summary)


process.SimL1TGlobalTask = cms.Task(process.simGtStage2Digis)


process.SimL1TMuonCommonTask = cms.Task(process.simCscTriggerPrimitiveDigis, process.simDtTriggerPrimitiveDigis)


process.SimL1TechnicalTriggersTask = cms.Task(process.simGtExtFakeStage2Digis)


process.ge0TriggerPseudoDigiTask = cms.Task(process.ge0TriggerConvertedPseudoDigis, process.gemRecHits, process.gemSegments)


process.l1tHGCalEnergySplitTowersTask = cms.Task(process.l1tHGCalEnergySplitTowerMapProducer, process.l1tHGCalEnergySplitTowerProducer)


process.me0TriggerPseudoDigiTask = cms.Task(process.me0RecHits, process.me0RecHitsCoarse, process.me0Segments, process.me0TriggerConvertedPseudoDigis, process.me0TriggerPseudoDigis, process.simMuonME0PseudoReDigisCoarse)


process.me0TriggerRealDigiTask = cms.Task(process.me0TriggerDigis, process.simMuonME0PadDigis)


process.simMuonGEMPadTask = cms.Task(process.simMuonGEMPadDigiClusters, process.simMuonGEMPadDigis)


process.caloLayer1Raw = cms.Task(process.caloLayer1RawFed1354, process.caloLayer1RawFed1356, process.caloLayer1RawFed1358)


process.ctppsRawData = cms.Task(process.ctppsPixelRawData)


process.hcalRawDataTask = cms.Task(process.hcalRawDataVME, process.hcalRawDatauHTR)


process.patAlgosToolsTask = cms.Task()


process.calDigiTask = cms.Task(process.castorDigiTask, process.ecalDigiTask, process.hcalDigiTask)


process.genJetMETTask = cms.Task(process.genJetParticlesTask, process.genMETParticlesTask, process.recoGenJetsTask, process.recoGenMETTask)


process.muonDigiTask = cms.Task(process.muonGEMDigiTask, process.simMuonCSCDigis, process.simMuonDTDigis, process.simMuonRPCDigis)


process.muonME0DigiTask = cms.Task(process.muonME0PseudoDigi, process.muonME0RealDigi)


process.L1TBJetsTask = cms.Task(process.L1TPFJetsExtendedTask, process.l1tBJetProducerPuppi, process.l1tBJetProducerPuppiCorrectedEmulator)


process.L1THGCalTriggerPrimitivesTask = cms.Task(process.L1THGCalBackEndLayer1, process.L1THGCalBackEndLayer2, process.L1THGCalConcentrator, process.L1THGCalTower, process.L1THGCalTowerMap, process.L1THGCalVFE)


process.SimL1TMuonTask = cms.Task(process.SimL1TMuonCommonTask, process.simBmtfDigis, process.simCscTriggerPrimitiveDigisRun3, process.simEmtfDigis, process.simEmtfShowers, process.simGmtCaloSumDigis, process.simGmtShowerDigis, process.simGmtStage2Digis, process.simKBmtfDigis, process.simKBmtfStubs, process.simMuonGEMPadTask, process.simOmtfDigis, process.simTwinMuxDigis)


process.ge0TriggerAllDigiTask = cms.Task(process.ge0TriggerPseudoDigiTask)


process.l1tCaloJetsTausTask = cms.Task(process.l1tHGCalEnergySplitTowersTask, process.l1tPhase2CaloJetEmulator)


process.me0TriggerAllDigiTask = cms.Task(process.me0TriggerPseudoDigiTask, process.me0TriggerRealDigiTask)


process.L1TDigiToRawTask = cms.Task(process.bmtfStage2Raw, process.caloLayer1Raw, process.caloStage2Raw, process.gmtStage2Raw, process.gtStage2Raw, process.omtfStage2Raw)


process.doAllDigiTask = cms.Task(process.calDigiTask, process.ctppsDigiTask, process.generatorSmeared, process.muonDigiTask)


process.fixGenInfoTask = cms.Task(process.GeneInfoTask, process.genJetMETTask)


process.pdigiTask_nogen = cms.Task(cms.TaskPlaceholder("mix"), cms.TaskPlaceholder("randomEngineStateProducer"), process.addPileupInfo, process.doAllDigiTask, process.genPUProtons, process.generatorSmeared)


process.SimL1EmulatorCoreTask = cms.Task(process.L1TZDCEmulationTask, process.SimL1TCalorimeterTask, process.SimL1TGlobalTask, process.SimL1TMuonTask, process.SimL1TechnicalTriggersTask)


process.SimL1EmulatorTask = cms.Task(process.SimL1EmulatorCoreTask)


process.DigiToRawTask = cms.Task(process.L1TDigiToRawTask, process.SiStripDigiToRaw, process.cscpacker, process.ctppsRawData, process.dtpacker, process.ecalPacker, process.esDigiToRaw, process.gemPacker, process.hcalRawDataTask, process.rawDataCollector, process.rpcpacker, process.siPixelRawData)


process.pdigiTask = cms.Task(process.fixGenInfoTask, process.pdigiTask_nogen, process.tpPruningTask)


process.pdigiTask_hi = cms.Task(process.heavyIon, process.pdigiTask)


process.pdigiTask_hi_nogen = cms.Task(process.genJetMETTask, process.heavyIon, process.pdigiTask_nogen)


process.GenSmeared = cms.Sequence(process.generatorSmeared)


process.GeneInfo = cms.Sequence(process.GeneInfoTask)


process.VertexSmearing = cms.Sequence(cms.SequencePlaceholder("VtxSmeared"))


process.calDigi = cms.Sequence(process.calDigiTask)


process.castorDigiSequence = cms.Sequence()


process.doAllDigi = cms.Sequence(process.doAllDigiTask)


process.ecalDigiSequence = cms.Sequence(process.ecalDigiTask)


process.fixGenInfo = cms.Sequence(process.fixGenInfoTask)


process.genJetMET = cms.Sequence(process.genJetMETTask)


process.genJetParticles = cms.Sequence(process.genJetParticlesTask)


process.genMETParticles = cms.Sequence(process.genMETParticlesTask)


process.hcalDigiSequence = cms.Sequence(process.hcalDigiTask)


process.hiRecoGenJets = cms.Sequence(process.hiRecoGenJetsTask)


process.muonDigi = cms.Sequence(process.muonDigiTask)


process.muonGEMDigi = cms.Sequence(process.muonGEMDigiTask)


process.muonME0Digi = cms.Sequence(process.muonME0DigiTask)


process.pdigi = cms.Sequence(process.pdigiTask)


process.pdigi_hi = cms.Sequence(process.pdigiTask_hi)


process.pdigi_hi_nogen = cms.Sequence(process.pdigiTask_hi_nogen)


process.pdigi_nogen = cms.Sequence(process.pdigiTask_nogen)


process.pdigi_valid = cms.Sequence(process.pdigiTask)


process.pdigi_valid_nogen = cms.Sequence(process.pdigiTask_nogen)


process.pgen = cms.Sequence(cms.SequencePlaceholder("randomEngineStateProducer")+process.VertexSmearing+process.GenSmeared+process.GeneInfo+process.genJetMET, process.PPSTransportTask)


process.pgen_genonly = cms.Sequence(cms.SequencePlaceholder("randomEngineStateProducer"))


process.pgen_smear = cms.Sequence(process.VertexSmearing+process.GenSmeared+process.GeneInfo+process.genJetMET, process.PPSTransportTask)


process.recoAllGenJets = cms.Sequence(process.recoAllGenJetsTask)


process.recoAllGenJetsNoMuNoNu = cms.Sequence(process.recoAllGenJetsNoMuNoNuTask)


process.recoAllGenJetsNoNu = cms.Sequence(process.recoAllGenJetsNoNuTask)


process.recoGenJets = cms.Sequence(process.recoGenJetsTask)


process.recoGenMET = cms.Sequence(process.recoGenMETTask)


process.L1THGCalTriggerPrimitives = cms.Sequence(process.L1THGCalTriggerPrimitivesTask)


process.L1TPhase1JetsSequence9x9 = cms.Sequence(process.l1tPhase1JetProducer9x9+process.l1tPhase1JetCalibrator9x9+process.l1tPhase1JetSumsProducer9x9)


process.L1TPhase1JetsSequence9x9trimmed = cms.Sequence(process.l1tPhase1JetProducer9x9trimmed+process.l1tPhase1JetCalibrator9x9trimmed+process.l1tPhase1JetSumsProducer9x9trimmed)


process.SimL1Emulator = cms.Sequence(process.SimL1EmulatorTask)


process.SimL1EmulatorCore = cms.Sequence(process.SimL1EmulatorCoreTask)


process.SimL1TCalorimeter = cms.Sequence(process.SimL1TCalorimeterTask)


process.SimL1TGlobal = cms.Sequence(process.SimL1TGlobalTask)


process.SimL1TMuon = cms.Sequence(process.SimL1TMuonTask)


process.SimL1TMuonCommon = cms.Sequence(process.SimL1TMuonCommonTask)


process.SimL1TechnicalTriggers = cms.Sequence(process.SimL1TechnicalTriggersTask)


process.l1tGMTMuons = cms.Sequence(process.gmtKMTFMuons+process.gmtFwdMuons+process.gmtSAMuons+process.gmtTkMuons)


process.l1tGMTStubs = cms.Sequence(process.gmtStubs)


process.DigiToRaw = cms.Sequence(process.DigiToRawTask)


process.L1TDigiToRaw = cms.Sequence(process.L1TDigiToRawTask)


process.hcalRawData = cms.Sequence(process.hcalRawDataTask)


process.HLTBeamSpot = cms.Sequence(process.hltScalersRawToDigi+process.hltOnlineBeamSpot)


process.HLTBeginSequenceRandom = cms.Sequence(process.hltRandomEventsFilter+process.hltGtStage2Digis)


process.HLTEndSequence = cms.Sequence(process.hltBoolEnd)


process.HLTL1UnpackerSequence = cms.Sequence(process.hltGtStage2Digis+process.hltGtStage2ObjectMap)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.HLTBeginSequence = cms.Sequence(process.hltTriggerType+process.HLTL1UnpackerSequence+process.HLTBeamSpot)


process.HLT_Physics_v1 = cms.Path(process.HLTBeginSequence+process.hltPrePhysics+process.HLTEndSequence)


process.HLT_Random_v1 = cms.Path(process.HLTBeginSequenceRandom+process.hltPreRandom+process.HLTEndSequence)


process.HLT_ZeroBias_v1 = cms.Path(process.HLTBeginSequence+process.hltL1sZeroBias+process.hltPreZeroBias+process.HLTEndSequence)


process.HLTriggerFinalPath = cms.Path(process.hltGtStage2Digis+process.hltScalersRawToDigi+process.hltFEDSelector+process.hltTriggerSummaryAOD+process.hltTriggerSummaryRAW+process.hltBoolFalse)


process.HLTriggerFirstPath = cms.Path(process.hltDummyConditions+process.hltGetRaw+process.hltBoolFalse)


process.digitisation_step = cms.Path(process.pdigi_valid)


process.L1simulation_step = cms.Path(process.SimL1Emulator)


process.digi2raw_step = cms.Path(process.DigiToRaw)


process.HLTAnalyzerEndpath = cms.EndPath(process.hltGtStage2Digis+process.hltPreHLTAnalyzerEndpath+process.hltL1TGlobalSummary+process.hltTrigReport)


process.endjob_step = cms.EndPath(process.endOfProcess)


process.FEVTDEBUGHLToutput_step = cms.EndPath(process.FEVTDEBUGHLToutput)


process.simAPVsaturation = cms.EDAlias(
    mix = cms.VPSet(cms.PSet(
        type = cms.string('bool')
    ))
)

process.simCastorDigis = cms.EDAlias(
)

process.simEcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('EBDigiCollection')
        ),
        cms.PSet(
            type = cms.string('EEDigiCollection')
        ),
        cms.PSet(
            type = cms.string('ESDigiCollection')
        )
    )
)

process.simHFNoseUnsuppressedDigis = cms.EDAlias(
)

process.simHGCalUnsuppressedDigis = cms.EDAlias(
)

process.simHcalUnsuppressedDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('HBHEDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('HFDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('HODataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('ZDCDataFramesSorted')
        ),
        cms.PSet(
            type = cms.string('QIE10DataFrameHcalDataFrameContainer')
        ),
        cms.PSet(
            type = cms.string('QIE11DataFrameHcalDataFrameContainer')
        )
    )
)

process.simSiPixelDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('PixelDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('PixelDigiSimLinkedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('PixelFEDChanneledmNewDetSetVector')
        )
    )
)

process.simSiStripDigis = cms.EDAlias(
    mix = cms.VPSet(
        cms.PSet(
            type = cms.string('SiStripDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('SiStripRawDigiedmDetSetVector')
        ),
        cms.PSet(
            type = cms.string('StripDigiSimLinkedmDetSetVector')
        )
    )
)

process.schedule = cms.Schedule(*[ process.digitisation_step, process.L1simulation_step, process.digi2raw_step, process.HLTriggerFirstPath, process.HLT_Physics_v1, process.HLT_Random_v1, process.HLT_ZeroBias_v1, process.HLTriggerFinalPath, process.HLTAnalyzerEndpath, process.endjob_step, process.FEVTDEBUGHLToutput_step ], tasks=[process.patAlgosToolsTask])
